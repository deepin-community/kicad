# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# taotieren <admin@taotieren.com>, 2019, 2020, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Getting_Started_in_KiCad_zh_CN\n"
"POT-Creation-Date: 2023-01-19 17:10+0800\n"
"PO-Revision-Date: 2023-01-19 19:50+0800\n"
"Last-Translator: taotieren <admin@taotieren.com>\n"
"Language-Team: admin@taotieren.com\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.2.2\n"
"X-Poedit-SourceCharset: UTF-8\n"

#. type: Title =
#: getting_started_in_kicad.adoc:8
#, no-wrap
msgid "Getting Started in KiCad"
msgstr "KiCad 入门"

#. type: Plain text
#: getting_started_in_kicad.adoc:12
#, no-wrap
msgid "*Copyright*\n"
msgstr "*版权*\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:17
msgid ""
"This document is Copyright (C) 2010-2023 by its contributors as listed "
"below. You may distribute it and/or modify it under the terms of either the "
"GNU General Public License (http://www.gnu.org/licenses/gpl.html), version 3 "
"or later, or the Creative Commons Attribution License (http://"
"creativecommons.org/licenses/by/3.0/), version 3.0 or later."
msgstr ""
"本文件的版权 (C)2010-2023 由下列贡献者拥有。您可以根据 GNU 通用公共许可证"
"（http://www.gnu.org/licenses/gpl.html）第 3 版或更高版本，或知识共享署名许可"
"证（http://creativecommons.org/licenses/by/3.0/）第 3.0 版或更高版本的条款发"
"布它和/或修改它。"

#. type: Plain text
#: getting_started_in_kicad.adoc:19
msgid "All trademarks within this guide belong to their legitimate owners."
msgstr "本指南中的所有商标均属于其合法所有者。"

#. type: Plain text
#: getting_started_in_kicad.adoc:22
#, no-wrap
msgid "*Contributors*\n"
msgstr "*贡献人员*\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:24
msgid "Graham Keeth, Jon Evans, Glenn Peterson."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:27
#, no-wrap
msgid "*Former Contributors*\n"
msgstr "*以前的贡献者*\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:29
msgid ""
"David Jahshan, Phil Hutchinson, Fabrizio Tappero, Christina Jarron, Melroy "
"van den Berg."
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:33
#, no-wrap
msgid "*Feedback*\n"
msgstr "*反馈*\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:37
msgid ""
"The KiCad project welcomes feedback, bug reports, and suggestions related to "
"the software or its documentation. For more information on how to sumbit "
"feedback or report an issue, please see the instructions at https://www."
"kicad.org/help/report-an-issue/"
msgstr ""
"KiCad 项目欢迎与软件或其文档相关的反馈、错误报告和建议。有关如何汇总反馈或报"
"告问题的详细信息，请参阅 https://www.kicad.org/help/report-an-issue/"

#. type: Title ==
#: getting_started_in_kicad.adoc:39
#, no-wrap
msgid "Introduction to KiCad Version 7"
msgstr "KiCad 第 7 版介绍"

#. type: Plain text
#: getting_started_in_kicad.adoc:48
msgid ""
"KiCad is an open-source software suite for creating electronic circuit "
"schematics, printed circuit boards (PCBs), and associated part descriptions. "
"KiCad supports an integrated design workflow in which a schematic and "
"corresponding PCB are designed together, as well as standalone workflows for "
"special uses. KiCad also includes several utilities to help with circuit and "
"PCB design, including a PCB calculator for determining electrical properties "
"of circuit structures, a Gerber viewer for inspecting manufacturing files, a "
"3D viewer for visualizing the finished PCB, and an integrated SPICE "
"simulator for inspecting circuit behavior."
msgstr ""
"KiCad 是一个开源的软件套件，用于创建电子电路原理图、印刷电路板（PCB）和相关的"
"零件描述。KiCad 支持综合设计工作流程，其中原理图和相应的 PCB 一起设计，也支持"
"特殊用途的独立工作流程。KiCad 还包括一些帮助电路和 PCB 设计的实用程序，包括用"
"于确定电路结构电气特性的 PCB 计算器、用于检查制造文件的 Gerber 查看器、用于可"
"视化成品 PCB 的 3D 查看器以及用于检查电路行为的集成 SPICE 仿真器。"

#. type: Plain text
#: getting_started_in_kicad.adoc:53
msgid ""
"KiCad runs on all major operating systems and a wide range of computer "
"hardware. It supports PCBs with up to 32 copper layers and is suitable for "
"creating designs of all complexities. KiCad is developed by a volunteer team "
"of software and electrical engineers around the world with a mission of "
"creating free and open-source electronics design software suitable for "
"professional designers."
msgstr ""
"KiCad 可在所有主要的操作系统和广泛的计算机硬件上运行。它支持多达 32 个铜层的 "
"PCB，适合创建各种复杂的设计。KiCad 是由世界各地的软件和电气工程师组成的志愿者"
"团队开发的，其使命是创建适合专业设计师的免费和开源的电子设计软件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:56
msgid ""
"The latest documentation for KiCad is available at https://docs.kicad.org. "
"This document applies to KiCad version 7.0."
msgstr ""
"KiCad 的最新文档可在 https://docs.kicad.org。本文件适用于 KiCad 7.0 版本。"

#. type: Title ===
#: getting_started_in_kicad.adoc:58
#, no-wrap
msgid "Downloading and installing KiCad"
msgstr "下载和安装 KiCad"

#. type: Plain text
#: getting_started_in_kicad.adoc:62
msgid ""
"KiCad runs on many operating systems, including Microsoft Windows, Apple "
"macOS, and many major Linux distributions."
msgstr ""
"KiCad 可在许多操作系统上运行，包括微软 Windows、苹果 macOS 和许多主要的 "
"Linux 发行版。"

#. type: Plain text
#: getting_started_in_kicad.adoc:66
msgid ""
"You can find the most up to date instructions and download links at https://"
"www.kicad.org/download/. These instructions are not included in this manual "
"as they may change over time with the release of operating system updates."
msgstr ""
"你可以在 https://www.kicad.org/download/ 找到最新的说明和下载链接。这些说明没"
"有包括在本手册中，因为它们可能随着操作系统更新的发布而改变。"

#. type: Plain text
#: getting_started_in_kicad.adoc:76
msgid ""
"KiCad stable releases occur periodically per the https://dev-docs.kicad.org/"
"en/rules-guidelines/release-policy/[KiCad Stable Release Policy]. New "
"features are continually being added to the development branch. If you would "
"like to take advantage of these new features and help out by testing them, "
"please download the latest nightly build package for your platform. Nightly "
"builds may introduce bugs such as file corruption, generation of bad "
"Gerbers, etc., but it is the goal of the KiCad Development Team to keep the "
"development branch as usable as possible during new feature development."
msgstr ""
"根据 https://dev-docs.kicad.org/en/rules-guidelines/release-policy/[KiCad 稳"
"定发布政策]，KiCad 的稳定发布会定期进行。新的功能正在不断地被添加到开发分支"
"中。如果你想利用这些新功能，并通过测试它们来提供帮助，请下载你的平台的最新夜"
"间构建包。夜间构建可能会引入一些错误，如文件损坏、生成不良 Gerbers 等，但 "
"KiCad 开发团队的目标是在新功能开发期间尽可能保持开发分支的可用性。"

#. type: Title ===
#: getting_started_in_kicad.adoc:78
#, no-wrap
msgid "Support"
msgstr "支持"

#. type: Plain text
#: getting_started_in_kicad.adoc:80
msgid "If you have ideas, remarks or questions, or if you just need help:"
msgstr "如果您有想法，评论或问题，或者您只是需要帮助："

#. type: Plain text
#: getting_started_in_kicad.adoc:83
msgid ""
"The https://forum.kicad.info/[official KiCad user forum] is a great place to "
"connect with other KiCad users and get help."
msgstr ""
"这是 https://forum.kicad.info/[KiCad 官方用户论坛] 是一个与其他 KiCad 用户联"
"系并获得帮助的好地方。"

#. type: Plain text
#: getting_started_in_kicad.adoc:85
msgid ""
"Join our communities on https://www.kicad.org/community/chat/[Discord or "
"IRC] for real-time discussion with users and developers."
msgstr ""
"加入我们在 https://www.kicad.org/community/chat/[Discord 或 IRC] 的社区，与用"
"户和开发者进行实时讨论。"

#. type: Plain text
#: getting_started_in_kicad.adoc:87
msgid ""
"Check the KiCad website for https://www.kicad.org/help/learning-resources/"
"[learning resources] made by the KiCad community."
msgstr ""
"查看 KiCad 网站，了解 KiCad 社区制作的 https://www.kicad.org/help/learning-"
"resources/[学习资源]。"

#. type: Title ==
#: getting_started_in_kicad.adoc:88
#, no-wrap
msgid "Basic Concepts and Workflow"
msgstr "基本概念和工作流程"

#. type: Plain text
#: getting_started_in_kicad.adoc:91
msgid ""
"The typical workflow in KiCad consists of two main tasks: drawing a "
"schematic and laying out a circuit board."
msgstr "KiCad 的典型工作流程包括两个主要任务：绘制原理图和布局电路板。"

#. type: Plain text
#: getting_started_in_kicad.adoc:99
msgid ""
"The schematic is a symbolic representation of the circuit: which components "
"are used and what connections are made between them. Schematic symbols are "
"pictorial representations of electronic components in a schematic, such as a "
"zigzag or rectangle for a resistor or a triangle for an opamp. The schematic "
"contains symbols for every component in the design, with wires connecting "
"pins in the symbols. The schematic is typically drawn first, before laying "
"out the circuit board."
msgstr ""
"原理图是电路的符号表示：使用了哪些元件，它们之间有哪些连接。原理图符号是电子"
"元件在原理图中的象形表示，如一个电阻的人字形或矩形，或一个运算放大器的三角"
"形。原理图包含了设计中每个元件的符号，符号中的线连接着引脚。原理图通常是先画"
"出来，然后再布线电路板。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:100
#, no-wrap
msgid "Example Schematic"
msgstr "原理图示例"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:100
#, no-wrap
msgid "images/coldfire-schematic.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:108
msgid ""
"The board is the physical realization of the schematic, with component "
"footprints positioned on the board and copper tracks making the connections "
"described in the schematic. Footprints are a set of copper pads that match "
"the pins on a physical component. When the board is manufactured and "
"assembled, the component will be soldered onto its corresponding footprint "
"on the circuit board."
msgstr ""
"板子是原理图的物理实现，元件的封装被放置在板子上，铜线实现原理图中描述的连"
"接。封装是一组铜焊盘，与物理元件上的引脚相匹配。当电路板被制造和组装时，该元"
"件将被焊接到电路板上相应的封装上。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:109
#, no-wrap
msgid "Example Layout"
msgstr "布局示例"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:109
#, no-wrap
msgid "images/coldfire-layout.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:116
msgid ""
"KiCad has separate windows for drawing the schematic (\"Schematic Editor\"), "
"laying out the board (\"PCB Editor\"), and editing symbols and footprints "
"(\"Symbol Editor\" and \"Footprint Editor\"). KiCad comes with a large "
"library of high quality, user contributed symbols and footprints, but it is "
"also simple to create new symbols and footprints or modify existing symbols "
"and footprints."
msgstr ""
"KiCad 有单独的窗口用于绘制原理图（\"原理图编辑器\"）、布局电路板（\"PCB 编辑"
"器\"）以及编辑符号和封装（\"符号编辑器 \"和 \"封装编辑器\"）。KiCad 自带了大"
"量高质量的、由用户提供的符号和封装库，但创建新的符号和封装或修改现有符号和封"
"装也很简单。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:117
#, no-wrap
msgid "Example Symbol"
msgstr "布局示例"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:117
#, no-wrap
msgid "images/coldfire-symbol.png"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:118
#, no-wrap
msgid "Example Footprint"
msgstr "封装示例"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:118
#, no-wrap
msgid "images/coldfire-footprint.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:127
msgid ""
"Finally, it is important to understand that KiCad has a project-based "
"workflow.  A KiCad project is a folder with a project file, a schematic, a "
"board layout, and optionally other associated files such as symbol and "
"footprint libraries, simulation data, purchasing information, etc. Many "
"project-related settings, including net classes and design rules, are stored "
"at the project level. Opening a board outside of its associated project may "
"result in missing design information, so be sure to keep all files "
"associated with a project together."
msgstr ""
"最后，重要的是要了解 KiCad 有一个基于工程的工作流程。 KiCad 工程是一个包含工"
"程文件、原理图、电路板布局的文件夹，也可以选择其他相关文件，如符号和封装库、"
"仿真数据、采购信息等。许多与项目相关的设置，包括网络类和设计规则，都存储在工"
"程层面。在其相关工程之外打开一个电路板可能会导致设计信息的丢失，所以要确保将"
"所有与工程相关的文件放在一起。"

#. type: Title ===
#: getting_started_in_kicad.adoc:128
#, no-wrap
msgid "PCB Design Workflow"
msgstr "PCB 设计工作流程"

#. type: Plain text
#: getting_started_in_kicad.adoc:137
msgid ""
"Typically, the schematic is drawn first. This means adding symbols to the "
"schematic and drawing the connections between them. Custom symbols may need "
"to be created if appropriate symbols are not already available. At this "
"stage footprints are also selected for each component, with custom "
"footprints created as necessary. When the schematic is complete and the "
"design has passed an electrical rules check (ERC), the design information in "
"the schematic is transferred to the board editor and layout begins."
msgstr ""
"通常情况下，首先绘制原理图。这意味着在原理图上添加符号，并绘制它们之间的连"
"接。如果没有合适的符号，可能需要创建自定义符号。在这个阶段，还要为每个部件选"
"择封装，必要时还要创建自定义封装。当原理图完成后，设计通过了电气规则检查"
"（ERC），原理图中的设计信息被转移到电路板编辑器中，并开始布局。"

#. type: Plain text
#: getting_started_in_kicad.adoc:145
msgid ""
"The schematic describes which components are in the design and how they are "
"connected; the board editor uses this information to make layout easier and "
"to prevent mismatches between the schematic and PCB. The layout process "
"requires careful placement of each footprint on the circuit board. After "
"component placement, copper tracks are drawn between components based on the "
"connections in the schematic as well as other electrical considerations, "
"such as trace resistance, controlled impedance requirements, crosstalk, etc."
msgstr ""
"原理图描述了设计中的哪些元件以及它们的连接方式；电路板编辑器利用这些信息使布"
"局更容易，并防止原理图和 PCB 之间的不匹配。布局过程需要在电路板上仔细放置每个"
"封装。在元件放置完毕后，根据原理图中的连接以及其他电气方面的考虑，如跟踪电"
"阻、控制阻抗要求、串扰等，在元件之间绘制铜线。"

#. type: Plain text
#: getting_started_in_kicad.adoc:150
msgid ""
"Often the schematic will need to be updated after layout has begun; the "
"schematic changes can be easily pulled into the board design. The reverse "
"can often happen: any design changes made in the board layout can be pushed "
"back to the schematic to keep the two consistent."
msgstr ""
"通常情况下，原理图在布局开始后需要更新；原理图的变化可以很容易地拉到电路板设"
"计中。相反的情况也经常发生：在电路板布局中的任何设计变化都可以被推回到原理图"
"中，以保持两者的一致性。"

#. type: Plain text
#: getting_started_in_kicad.adoc:154
msgid ""
"When the board layout is complete and the board has passed the Design Rules "
"Check (DRC), fabrication outputs are generated so that the board can be "
"manufactured by a PCB fabricator."
msgstr ""
"当电路板布局完成，并且电路板通过了设计规则检查（DRC），就会产生制造输出，这样"
"电路板就可以由 PCB 制造者制造。"

#. type: Title ==
#: getting_started_in_kicad.adoc:155
#, no-wrap
msgid "Tutorial Part 1: Project"
msgstr "教程第一部分：工程"

#. type: Plain text
#: getting_started_in_kicad.adoc:163
msgid ""
"The first thing to do when starting a new design is to create a new "
"project.  Opening KiCad will bring up the Project Manager. Click **File** -> "
"**New Project**, browse to your desired location, and give your project a "
"name, such as `getting-started`. Make sure the **Create a new folder for the "
"project** checkbox is ticked, then click **Save**. This will create your "
"project files in a new subfolder with the same name as your project."
msgstr ""
"开始新设计时，首先要做的是创建一个新的工程。 打开 KiCad 会出现工程管理器。点"
"击 **文件** -> **新建工程**，浏览到你想要的位置，并给你的工程起个名字，如 "
"\"入门\"。确保 **为工程创建一个新的文件夹** 复选框被选中，然后点 击**保存**。"
"这将在一个新的子文件夹中创建你的工程文件，其名称与你的工程相同。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:164
#, no-wrap
msgid "Project Manager After Creating a New Project"
msgstr "创建一个新工程后的工程管理"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:164
#, no-wrap
msgid "images/project-manager-new-project.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:170
msgid ""
"At left, the Project Files pane lists the files in the new project. There is "
"a project file with the extension `.kicad_pro`, a schematic file with the "
"extension `.kicad_sch`, and a board file with the extension `.kicad_pcb`. "
"These files all share a name with your project."
msgstr ""
"在左边，工程文件窗格列出了新工程中的文件。有一个扩展名为 `.kicad_pro` 的工程"
"文件，一个扩展名为 `.kicad_sch` 的原理图文件，以及一个扩展名为 `.kicad_pcb` "
"的电路板文件。这些文件都与你的工程共享一个名称。"

#. type: Plain text
#: getting_started_in_kicad.adoc:175
msgid ""
"There may also be a `-backups` directory: KiCad will automatically create "
"backups of your project when you save, and optionally at fixed time "
"intervals.  The backup settings are configurable by going to **Preferences** "
"-> **Preferences** -> **Common** -> **Project Backup**."
msgstr ""
"也可能有一个`备份`目录。KiCad 会在你保存时自动创建工程的备份，也可以选择在固"
"定的时间间隔内进行备份。 备份设置可以通过进入 **偏好设置** -> **偏好设置** -"
"> **常用** -> **工程备份** 来配置。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:176
#, no-wrap
msgid "Project Backup Settings"
msgstr "工程备份设置"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:176
#, no-wrap
msgid "images/project-backup-settings.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:182
msgid ""
"At right of the Project Window, there are buttons to launch the various "
"tools that KiCad provides. Launching these tools will automatically open the "
"associated design file (schematic or PCB) from the current project. Start by "
"opening the Schematic Editor."
msgstr ""
"在工程窗口的右侧，有一些按钮可以启动 KiCad 提供的各种工具。启动这些工具将自动"
"打开当前项目中的相关设计文件（原理图或 PCB）。首先打开原理图编辑器。"

#. type: Title ==
#: getting_started_in_kicad.adoc:183
#, no-wrap
msgid "Tutorial Part 2: Schematic"
msgstr "教程第 2 部分：原理图"

#. type: Title ===
#: getting_started_in_kicad.adoc:186
#, no-wrap
msgid "Symbol Library Table Setup"
msgstr "符号库表设置"

#. type: Plain text
#: getting_started_in_kicad.adoc:192
msgid ""
"The first time the schematic editor is opened, a dialog will appear asking "
"how to configure the global symbol library table. The symbol library table "
"tells KiCad which symbol libraries to use and where they are located. If you "
"have installed the default libraries with KiCad, which is recommended, "
"select the default option: **Copy default global symbol library table "
"(recommended)**."
msgstr ""
"第一次打开原理图编辑器时，会出现一个对话框询问如何配置全局符号库表。符号库表"
"告诉 KiCad 要使用哪些符号库以及它们的位置。如果你已经安装了 KiCad 的默认库，"
"建议你选择默认选项。**复制默认的全局符号库表（推荐）**。"

#. type: Plain text
#: getting_started_in_kicad.adoc:199
msgid ""
"If KiCad cannot find the libraries in their expected installation location, "
"this option will be disabled. In this case, the user should choose the "
"second option, **Copy custom global symbol library table**. Click the folder "
"button at the bottom, and browse to the location given below. Select the "
"`sym-lib-table` file."
msgstr ""
"如果 KiCad 无法在其预期的安装位置找到库，该选项将被禁用。在这种情况下，用户应"
"该选择第二个选项，**复制自定义全局符号库表**。点击底部的文件夹按钮，并浏览到"
"下面给出的位置。选择 `sym-lib-table` 文件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:203
msgid ""
"The location of the default library table files depends on operating system "
"and may vary based on installation location. Below are the defaults for each "
"operating system:"
msgstr ""
"默认库表文件的位置取决于操作系统，并可能根据安装位置而有所不同。下面是每个操"
"作系统的默认值："

#. type: Plain text
#: getting_started_in_kicad.adoc:205
msgid "Windows: `C:\\Program Files\\KiCad\\7.0\\share\\kicad\\template\\`"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:206
msgid "Linux: `/usr/share/kicad/template/`"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:207
msgid "macOS: `/Applications/KiCad/KiCad.app/Contents/SharedSupport/template/`"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:208
#, no-wrap
msgid "Symbol Library Table Configuration"
msgstr "符号库表配置"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:208
#, no-wrap
msgid "images/symbol-lib-table-configuration.png"
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:210
#, no-wrap
msgid "Schematic Editor Basics"
msgstr "原理图编辑器基础知识"

#. type: Plain text
#: getting_started_in_kicad.adoc:216
msgid ""
"To pan around the schematic, click and drag with the middle mouse button or "
"right mouse button. Zoom in and out with the mousewheel or kbd:[F1] and kbd:"
"[F2]. Laptop users may find it useful to change the mouse controls to be "
"better suited to a touchpad; the mouse controls are configurable in "
"**Preferences** -> **Preferences...** -> **Mouse and Touchpad**."
msgstr ""
"要在原理图上移动，用鼠标中键或鼠标右键点击并拖动。用鼠标滚轮或 kbd:[F1] 和 "
"kbd:[F2] 进行放大和缩小。笔记本电脑用户可能会发现，改变鼠标控制，使其更适合于"
"触摸板；鼠标控制可在 **偏好设置** -> **偏好设置...** -> **鼠标和触摸板** 中配"
"置。"

#. type: Plain text
#: getting_started_in_kicad.adoc:224
msgid ""
"By default, KiCad enables a mouse setting called **Center and Warp Cursor on "
"Zoom**. When this feature is enabled, the mouse cursor is automatically "
"moved to the center of the screen when the user zooms in or out. This keeps "
"the zoomed region centered at all times. This feature is unusual, but many "
"users find it useful once they get used to it. Try zooming in and out with "
"the mouse cursor in different areas of the canvas. If the default zoom "
"behavior is uncomfortable, disable the feature in the Mouse and Touchpad "
"preferences."
msgstr ""
"默认情况下，KiCad 启用了一个名为 **缩放时的中心和经纬光标的鼠标设置**。启用该"
"功能后，当用户放大或缩小时，鼠标光标会自动移动到屏幕中央。这使缩放区域始终保"
"持在中心位置。这个功能是不寻常的，但许多用户一旦习惯了它就会发现它很有用。试"
"着用鼠标光标在画布的不同区域进行放大和缩小。如果默认的缩放行为让人不舒服，请"
"在鼠标和触摸板偏好设置中禁用该功能。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:225
#, no-wrap
msgid "Mouse and Touchpad Preferences"
msgstr "鼠标和触摸板偏好设置"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:225
#, no-wrap
msgid "images/mouse-and-touchpad-prefs.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:230
msgid ""
"The toolbar at the left side of the screen contains basic display settings. "
"The toolbar at the right side of the screen contains tools for editing the "
"schematic."
msgstr ""
"屏幕左侧的工具栏包含基本的显示设置。屏幕右侧的工具栏包含了编辑原理图的工具。"

#. type: Plain text
#: getting_started_in_kicad.adoc:234
msgid ""
"Most tools in KiCad either have default hotkeys assigned, or can have custom "
"hotkeys assigned. To view all hotkeys, go to **Help** -> **List Hotkeys..."
"**.  Hotkeys can be changed in **Preferences** -> **Preferences...** -> "
"**Hotkeys**."
msgstr ""
"KiCad 中的大多数工具要么有默认的快捷键，要么可以分配自定义的快捷键。要查看所"
"有快捷键，请进入 **帮助** -> **列出快捷键...**。 快捷键可以在 **偏好设置** -"
"> **偏好设置...** -> **快捷键** 进行更改。"

#. type: Title ===
#: getting_started_in_kicad.adoc:235
#, no-wrap
msgid "Schematic Sheet Setup"
msgstr "原理图图框设置"

#. type: Plain text
#: getting_started_in_kicad.adoc:240
msgid ""
"Before drawing anything in the schematic, set up the schematic sheet "
"itself.  Click **File** -> **Page Settings**. Give the schematic a title and "
"date, and change the paper size if desired."
msgstr ""
"在绘制原理图中的任何内容之前，先对原理图页面本身进行设置。 点击 **文件** -> "
"**页面设置**。给原理图一个标题和日期，如果需要的话，改变原理图大小。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:241
#, no-wrap
msgid "Schematic Page Settings"
msgstr "图框设置"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:241
#, no-wrap
msgid "images/schematic-page-setup.png"
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:244
#, no-wrap
msgid "Adding Symbols to the Schematic"
msgstr "将符号添加到原理图中"

#. type: Plain text
#: getting_started_in_kicad.adoc:249
msgid ""
"Start making the circuit by adding some symbols to the schematic. Open the "
"Choose Symbol dialog by clicking the **Add a Symbol** button image:images/"
"add_component_24.png[] on the right side of the window or pressing kbd:[A]."
msgstr ""
"通过在原理图上添加一些符号开始制作电路。点击窗口右侧的 **添加符号** 按钮 "
"image:images/add_component_24.png[] 或按 kbd:[A]，打开选择符号对话框。"

#. type: Plain text
#: getting_started_in_kicad.adoc:253
msgid ""
"This action will trigger the Footprint Library Table Setup dialog. This "
"dialog is equivalent to the <<sym-lib-table-setup,Symbol Library Table Setup "
"dialog explained earlier>>, but for footprints instead of symbols."
msgstr ""
"这个动作将触发 \"封装库表设置\" 对话框。这个对话框等同于前面解释过的《符号库"
"表设置，符号库表设置》对话框，但是是针对封装而不是符号。"

#. type: Plain text
#: getting_started_in_kicad.adoc:260
msgid ""
"Again, select the default option: **Copy default global footprint library "
"table (recommended)**. If this is option is disabled, select the second "
"option, **Copy custom global footprint library table**. Click the folder "
"button at the bottom, and browse to the location given in <<sym-lib-table-"
"default-location,the symbol library table setup instructions>>.  Select the "
"`fp-lib-table` file and click **OK**."
msgstr ""
"同样，选择默认选项。**复制默认全局封装库表（推荐）**。如果这个选项被禁用，请"
"选择第二个选项，**复制自定义全局封装库表**。点击底部的文件夹按钮，浏览到《符"
"号库表默认位置，符号库表设置说明》中给出的位置。 选择 `fp-lib-table` 文件并点"
"击 **OK**。"

#. type: Plain text
#: getting_started_in_kicad.adoc:265
msgid ""
"The Choose Symbol dialog lists the available symbol libraries and the "
"component symbols contained within them. Basic devices like passive "
"components, diodes, and other generic symbols are found in the `Device` "
"library. Specific devices, such as a particular LED, may be found in other "
"libraries."
msgstr ""
"选择符号对话框列出了可用的符号库和其中包含的元件符号。基本设备如无源元件、二"
"极管和其他通用符号在 `Device` 库中找到。特定的设备，如一个特定的 LED，可能在"
"其他库中找到。"

#. type: Plain text
#: getting_started_in_kicad.adoc:268
msgid ""
"Scroll down to the `Device` library, expand it, and select the `LED` "
"symbol.  Click **OK**, and click again to place the symbol in the schematic."
msgstr ""
"向下滚动到 `Device` 库，展开它，并选择 `LED` 符号。 点击 **确定**，然后再次点"
"击，将该符号放入原理图中。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:269
#, no-wrap
msgid "LED Symbol in Choose Symbol Dialog"
msgstr "选择符号对话框中的 LED 符号"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:269
#, no-wrap
msgid "images/symbol-led.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:277
msgid ""
"Next, add a current-limiting resistor. Go back to the symbol chooser, but "
"this time try searching for a resistor by entering `R` in the filter box at "
"the top.  Again, it is found in the `Device` library. The `R` device is an "
"IEC-style rectangular resistor symbol. An `R_US` symbol is also available "
"for users who prefer the ANSI-style zigzag symbol. Select a resistor symbol "
"and add it to the schematic."
msgstr ""
"接下来，添加一个限流电阻。回到符号选择器，但这次尝试通过在顶部的过滤框中输入 "
"`R` 来搜索一个电阻。 同样，它可以在 `Device` 库中找到。`R` 设备是一个 IEC 风"
"格的矩形电阻符号。对于喜欢 ANSI 风格人字形符号的用户，也有一个 `R_US` 符号。"
"选择一个电阻符号并将其添加到原理图中。"

#. type: Plain text
#: getting_started_in_kicad.adoc:280
msgid ""
"Finally, add a battery to power the LED. The `Device` library has a suitable "
"`Battery_Cell` symbol."
msgstr ""
"最后，添加一个电池为LED供电。`Device` 库有一个合适的 `Battery_Cell` 符号。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:281
#, no-wrap
msgid "Schematic with Symbols Placed"
msgstr "放置了符号的原理图"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:281
#, no-wrap
msgid "images/symbols-placed.png"
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:283
#, no-wrap
msgid "Selecting and Moving Objects"
msgstr "选择和移动对象"

#. type: Plain text
#: getting_started_in_kicad.adoc:286
msgid ""
"Next, position the symbols correctly relative to each other, as shown in the "
"screenshot. Do this by selecting, moving, and rotating the symbols."
msgstr ""
"接下来，如截图所示，正确定位符号之间的关系。通过选择、移动和旋转符号来做到这"
"一点。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:287
#, no-wrap
msgid "Schematic with Symbols Moved and Rotated"
msgstr "符号移动和旋转的原理图"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:287
#, no-wrap
msgid "images/symbols-moved.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:293
msgid ""
"In KiCad 7.0, objects are selected by clicking on them. Additional objects "
"can be added to the selection with kbd:[Shift]+click, or removed with kbd:"
"[Ctrl+Shift]+click (macOS: kbd:[Cmd+Shift]+click). You can toggle an item's "
"selection state with kbd:[Ctrl]+click (macOS: kbd:[Cmd]+click)."
msgstr ""
"在 KiCad 7.0 中，对象是通过点击来选择的。可以用 kbd:[Shift] + 单击 将其他对象"
"添加到选择中，或用 kbd:[Ctrl+Shift] + 单击（macOS：kbd:[Cmd+Shift] + 单击）将"
"其删除。你可以用 kbd:[Ctrl] + 单击（macOS：kbd:[Cmd] + 单击）来切换一个项目的"
"选择状态。"

#. type: Plain text
#: getting_started_in_kicad.adoc:300
msgid ""
"Drag selection is also possible; dragging from left-to-right selects objects "
"that are entirely enclosed by the selection box, while dragging right-to-"
"left also selects objects that are partially enclosed by the selection box.  "
"kbd:[Shift], kbd:[Ctrl+Shift] (kbd:[Cmd+Shift]), and kbd:[Ctrl] (kbd:[Cmd]) "
"can also be used with drag selection to add, subtract, or toggle from the "
"selection, respectively."
msgstr ""
"拖动选择也是可以的；从左到右拖动可以选择完全被选择框包围的对象，而从右到左拖"
"动也可以选择部分被选择框包围的对象。 kbd:[Shift], kbd:[Ctrl+Shift] (kbd:"
"[Cmd+Shift]), 和 kbd:[Ctrl] (kbd:[Cmd]) 也可以和拖动选择一起使用，分别从选择"
"中增加、减少或切换。"

#. type: Plain text
#: getting_started_in_kicad.adoc:306
msgid ""
"Note that it is possible to select an entire symbol (by clicking on the "
"symbol shape itself) or to select one text field in the symbol without "
"selecting the rest of the symbol (by clicking the text). When just a text "
"field is selected, any actions performed will act only on the selected text "
"and not on the rest of the symbol."
msgstr ""
"注意，可以选择整个符号（通过点击符号形状本身）或选择符号中的一个文本字段而不"
"选择符号的其他部分（通过点击文本）。当只选择一个文本字段时，所执行的任何操作"
"将只作用于所选择的文本，而不作用于符号的其他部分。"

#. type: Plain text
#: getting_started_in_kicad.adoc:313
msgid ""
"Selected objects are moved by pressing kbd:[M] and rotated by pressing kbd:"
"[R].  The kbd:[G] hotkey (drag) can also be used to move objects. For moving "
"unconnected symbols, kbd:[G] and kbd:[M] behave identically, but for symbols "
"with wires attached, kbd:[G] moves the symbol and keeps the wires attached, "
"while kbd:[M] moves the symbol and leaves the wires behind. Selected objects "
"can be deleted with the kbd:[Del] key."
msgstr ""
"按 kbd:[M] 可以移动选中的对象，按 kbd:[R] 可以旋转。 kbd:[G] 热快捷键（拖动）"
"也可用于移动对象。对于移动未连接的符号，kbd:[G] 和 kbd:[M] 的行为是相同的，但"
"对于连接有导线的符号，kbd:[G] 移动符号并保持导线连接，而 kbd:[M] 移动符号并留"
"下导线。选定的对象可以用 kbd:[Del] 键删除。"

#. type: Title ===
#: getting_started_in_kicad.adoc:314
#, no-wrap
msgid "Wiring the Schematic"
msgstr "为原理图布线"

#. type: Plain text
#: getting_started_in_kicad.adoc:323
msgid ""
"The symbol pins all have small circles on them, indicating that they are not "
"connected. Fix that by drawing wires between symbol pins as shown in the "
"screenshot. Click the **Add a Wire** button image:images/add_line_24.png[] "
"on the right-hand toolbar or use the kbd:[W] hotkey. Click to start drawing "
"a wire, and finish drawing the wire by clicking on a symbol pin or double "
"clicking anywhere. Pressing Escape will cancel drawing the wire."
msgstr ""
"符号引脚上都有小圆圈，表明它们没有连接。通过在符号引脚之间画导线来解决这个问"
"题，如截图中所示。点击右侧工具栏上的 **添加导线** 按钮 image:images/"
"add_line_24.png[] 或使用 kbd:[W] 快捷键。点击开始画导线，通过点击符号引脚或双"
"击任何地方完成画导线。按 Escape 键将取消画导线。"

#. type: Plain text
#: getting_started_in_kicad.adoc:327
msgid ""
"Another convenient method of drawing wires is to hover over an unconnected "
"pin.  The mouse cursor will change to indicate that a wire can be drawn "
"starting from that location. Clicking on the pin will then begin drawing a "
"wire automatically."
msgstr ""
"另一种方便的画导线方法是将鼠标悬停在一个未连接的引脚上。 鼠标指针会改变，表示"
"可以从该位置开始画导线。点击该引脚就会自动开始画导线。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:328
#, no-wrap
msgid "Schematic with Nets Wired"
msgstr "带网络线的原理图"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:328
#, no-wrap
msgid "images/symbols-wired.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:332
msgid ""
"Next, add power and ground symbols to the schematic. While not strictly "
"necessary in such a simple schematic, these make it easier to understand "
"large schematics."
msgstr ""
"接下来，在原理图上添加电源和接地符号。虽然在这样一个简单的原理图中没有严格意"
"义上的必要，但这些符号使大型原理图更容易理解。"

#. type: Plain text
#: getting_started_in_kicad.adoc:338
msgid ""
"A number of power and ground symbols are available in the `Power` symbol "
"library.  However, there is a shortcut for adding these symbols: click the "
"**Add a Power Symbol** button image:images/add_power_24.png[] or use the kbd:"
"[P] hotkey. This brings up the **Choose a Symbol** dialog, but only displays "
"symbol libraries that contain power symbols."
msgstr ""
"在 `Power` 符号库中，有许多电源和地线符号。 然而，有一个添加这些符号的快捷方"
"式：点击 **添加电源符号* *按钮 image:images/add_power_24.png[] 或使用 kbd:"
"[P] 快捷键。这将弹出 **选择符号** 对话框，但只显示包含电源符号的符号库。"

#. type: Plain text
#: getting_started_in_kicad.adoc:340
msgid ""
"Add a VCC symbol and GND symbol and then connect them to the circuit with "
"wires."
msgstr "添加一个 VCC 符号和 GND 符号，然后用导线将它们连接到电路上。"

#. type: Plain text
#: getting_started_in_kicad.adoc:347
msgid ""
"Finally, add a label to the wire between the LED and resistor. Again, this "
"may not be necessary in a simple circuit, but it is good practice to label "
"important nets.  Click the **Net Label** button image:images/add_label_24."
"png[] in the right toolbar (kbd:[L]), type a label name (`led`), and place "
"the label into the schematic so that the square attachment point overlaps "
"with the wire. Rotate and align the label as necessary."
msgstr ""
"最后，在 LED 和电阻之间的导线上加一个标签。同样，在一个简单的电路中可能没有必"
"要这样做，但给重要的网络贴上标签是个好的做法。 点击右侧工具栏（kbd:[L]）中的 "
"**网络标签** 按钮，输入标签名称（`led`），并将标签放入原理图中，使方形连接点"
"与导线重合。根据需要旋转和对齐标签。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:348
#, no-wrap
msgid "Schematic with Nets Labeled"
msgstr "带有网络标签的原理图"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:348
#, no-wrap
msgid "images/symbols-labeled.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:353
msgid ""
"Note that labels and power symbols with the same name are connected "
"together.  Another GND symbol or wire labeled `led` on this schematic page "
"would be shorted to the existing one, even without wires visually connecting "
"them."
msgstr ""
"请注意，同名的标签和电源符号是连接在一起的。 在这个原理图页面上，另一个 GND "
"符号或标记为` led` 的导线将与现有的导线短路，即使没有导线将它们直观地连接起"
"来。"

#. type: Title ===
#: getting_started_in_kicad.adoc:354
#, no-wrap
msgid "Annotation, Symbol Properties, and Footprints"
msgstr "批注、符号属性和封装"

#. type: Title ====
#: getting_started_in_kicad.adoc:356
#, no-wrap
msgid "Annotation"
msgstr "批注"

#. type: Plain text
#: getting_started_in_kicad.adoc:359
msgid ""
"Each symbol needs a unique reference designator assigned to it. This process "
"is also known as annotation."
msgstr "每个符号都需要为其分配一个独特的位号。这个过程也被称为注解。"

#. type: Plain text
#: getting_started_in_kicad.adoc:363
msgid ""
"By default in KiCad 7.0, symbols are automatically annotated when they are "
"added to the schematic. Automatic annotation can be enabled or disabled "
"using the image:images/annotate_24.png[] button in the left toolbar."
msgstr ""
"在 KiCad 7.0 中，默认情况下，符号被添加到原理图中时，会自动进行批注。可以使用"
"左侧工具栏中的 image:images/annotate_24.png[] 按钮来启用或禁用自动批注。"

#. type: Plain text
#: getting_started_in_kicad.adoc:367
msgid ""
"While it is not necessary for this guide, symbols can be manually annotated "
"or reannotated using the **Fill in schematic symbol reference designators** "
"button (image:images/annotate_24.png[]) in the top toolbar."
msgstr ""
"虽然在本指南中没有必要，但可以使用顶部工具栏中的 **填写原理图符号位号** 按钮"
"（image:images/annotate_24.png[]）对符号进行手动批注或重新批注。"

#. type: Title ====
#: getting_started_in_kicad.adoc:368 getting_started_in_kicad.adoc:939
#, no-wrap
msgid "Symbol Properties"
msgstr "符号属性"

#. type: Plain text
#: getting_started_in_kicad.adoc:374
msgid ""
"Next, fill in values for each component. Select the LED, right-click, and "
"select Properties... (kbd:[E]). This project will use a red LED, so change "
"the `Value` field to be `red`. In a real project, it might be better to "
"write the LED manufacturer's part number here instead. Note that it's "
"possible to edit reference designators individually in each symbol's "
"properties."
msgstr ""
"接下来，填入每个元件的数值。选择 LED，右键单击，并选择属性...（kbd:[E]）。这"
"个工程将使用一个红色的 LED，所以将 `值` 字段改为 `红色`。在一个真正的工程中，"
"在这里写上 LED 制造商的零件编号可能会更好。注意，可以在每个符号的属性中单独编"
"辑位号。"

#. type: Plain text
#: getting_started_in_kicad.adoc:377
msgid ""
"This project will use a 3V lithium coin cell battery, so change the `Value` "
"field of `BT1` to `3V`. Change the resistor's value to `1k`."
msgstr ""
"这个工程将使用一个 3V 的纽扣电池，所以把 `BT1` 的 `值` 字段改为 `3V'。将电阻"
"的值改为 `1k`。"

#. type: Title ====
#: getting_started_in_kicad.adoc:379
#, no-wrap
msgid "Footprint Assignment"
msgstr "封装分配"

#. type: Plain text
#: getting_started_in_kicad.adoc:384
msgid ""
"Finally, assign a footprint to each component. This defines how each "
"component will attach to the PCB. Some symbols come with footprints pre-"
"assigned, but for many components there are multiple possible footprints, so "
"the user needs to select the appropriate one."
msgstr ""
"最后，给每个元件指定一个封装。这定义了每个元件将如何连接到 PCB 上。有些符号预"
"留了封装，但对许多元件来说，有多种可能的封装，所以用户需要选择适当的一个。"

#. type: Plain text
#: getting_started_in_kicad.adoc:388
msgid ""
"There are several ways to assign footprints, but one convenient way is to "
"use the footprint assignment tool by clicking the image:images/"
"icon_cvpcb_24_24.png[] button in the top toolbar."
msgstr ""
"有几种分配封装的方法，但有一种方便的方法是使用封装分配工具，点击顶部工具栏的 "
"image:images/icon_cvpcb_24_24.png[] 按钮。"

#. type: Plain text
#: getting_started_in_kicad.adoc:394
msgid ""
"The left pane of this window lists the available footprint libraries. The "
"middle pane shows the symbols in the schematic. All of these symbols will "
"get footprints assigned to them. The right pane shows the footprints that "
"can be chosen for the symbol selected in the middle pane. Footprints can be "
"previewed by right-clicking a footprint and selecting **View selected "
"footprint**."
msgstr ""
"该窗口的左窗格列出了可用的封装库。中间的窗格显示原理图中的符号。所有这些符号"
"都会被分配到封装。右边的窗格显示了可以为中间窗格中的符号选择的封装。右键点击"
"一个封装，选择 **查看所选封装**，就可以预览封装了。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:395
#, no-wrap
msgid "Assign Footprint Tool"
msgstr "分配封装工具"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:395
#, no-wrap
msgid "images/footprint-assignment-tool.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:400
msgid ""
"Many footprints are included with KiCad, so the footprint assignment tool "
"offers several ways to filter out footprints that aren't relevant to the "
"symbol in question."
msgstr ""
"KiCad 中包含了许多封装，因此封装分配工具提供了几种方法来筛选掉与有关符号不相"
"关的封装。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:401
#, no-wrap
msgid "Footprint Filter Buttons"
msgstr "封装筛选按钮"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:401
#, no-wrap
msgid "images/footprint-assignment-filters.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:409
msgid ""
"[[footprint-filters]] The leftmost button image:images/"
"module_filtered_list_24.png[] activates filters that can be defined in each "
"symbol. For example, an opamp symbol might define filters that show only "
"SOIC and DIP footprints. Sometimes those predefined filters are missing or "
"too restrictive, so it can be useful to turn this filter off in some "
"situations."
msgstr ""
"[[封装筛选器]] 最左边的按钮 image:images/module_filtered_list_24.png[] 可以激"
"活每个符号中可以定义的筛选器。例如，一个运算放大器符号可以定义筛选器，只显示 "
"SOIC 和 DIP 封装。有时，这些预定义的筛选器缺失或限制性太强，所以在某些情况"
"下，关闭这个筛选器可能会很有用。"

#. type: Plain text
#: getting_started_in_kicad.adoc:412
msgid ""
"The middle button image:images/module_pin_filtered_list_24.png[] filters by "
"pin count, so that only 8-pad footprints are shown for 8-pin symbols. This "
"filter is almost always useful."
msgstr ""
"中间的按钮 image:images/module_pin_filtered_list_24.png[] 按引脚数筛选，所以"
"只有 8 个引脚的符号才会显示 8 个引脚的封装。这个筛选器几乎总是有用的。"

#. type: Plain text
#: getting_started_in_kicad.adoc:417
msgid ""
"The right button image:images/module_library_list_24.png[] filters by "
"selected library. Libraries are selected in the left pane; footprints not in "
"the selected library will be filtered out. This filter is useful as long as "
"it is known which library contains the right footprint. Often it's best to "
"use this filter or the symbol filters, but not both."
msgstr ""
"右边的按钮 image:images/module_library_list_24.png[] 按所选库筛选。库在左侧窗"
"格中被选中；不在所选库中的封装将被筛选掉。只要知道哪个库包含正确的封装，这个"
"筛选器就很有用。通常情况下，最好使用这个筛选器或符号筛选器，但不能同时使用。"

#. type: Plain text
#: getting_started_in_kicad.adoc:419
msgid ""
"The text box filters out footprints that don't match the text in the box.  "
"This filter is disabled when the box is empty."
msgstr "文本框筛选掉与框中文本不匹配的封装。 当方框为空时，这个筛选器被禁用。"

#. type: Plain text
#: getting_started_in_kicad.adoc:422
msgid ""
"Using the filters, find and assign the footprints shown in the central "
"column in the screenshot above. Click **OK**."
msgstr "使用筛选器，找到并分配上面截图中中央栏所示的封装。点击 **确定**。"

#. type: Plain text
#: getting_started_in_kicad.adoc:426
msgid ""
"There are other ways to assign footprints; one way is through the symbol "
"properties window. For more information on assigning footprints, see the "
"xref:../eeschema/eeschema_assigning_footprints.adoc#assigning-"
"footprints[manual]."
msgstr ""
"还有其他方法来分配封装；一种方法是通过符号属性窗口。关于分配封装的更多信息，"
"请参见 xref:../eeschema/eeschema_assigning_footprints.adoc#assigning-"
"footprints[手册]。"

#. type: Title ===
#: getting_started_in_kicad.adoc:427
#, no-wrap
msgid "Electrical Rules Check"
msgstr "电气规则检查"

#. type: Plain text
#: getting_started_in_kicad.adoc:438
msgid ""
"The last remaining thing to do in the schematic is to check for electrical "
"errors. KiCad's Electrical Rules Checker (ERC) cannot make sure that the "
"design in the schematic will work, but it can check for some common "
"connection issues such as unconnected pins, two power outputs shorted "
"together, or a power input that isn't powered by anything. It also checks "
"for some other mistakes like symbols that aren't annotated and typos in net "
"labels. To see the full list of electrical rules and to adjust their "
"severity, go to **Schematic Setup** -> **Electrical Rules** -> **Violation "
"Severity**. It is a good idea to run ERC before starting layout."
msgstr ""
"原理图中剩下的最后一件事是检查电气错误。KiCad 的电气规则检查器（ERC）不能确保"
"原理图中的设计能够工作，但它可以检查一些常见的连接问题，如未连接的引脚、两个"
"电源输出短路，或没有任何电源的电源输入。它还能检查其他一些错误，如没有批注的"
"符号和网络标签中的错别字。要查看电气规则的完整列表并调整其严重性，请到 **原理"
"图设置** -> **电气规则** -> **违规严重性**。在开始布局之前，运行 ERC 是一个好"
"主意。"

#. type: Plain text
#: getting_started_in_kicad.adoc:441
msgid ""
"Run an electrical rules check by clicking the **ERC** button (image:images/"
"erc_24.png[]) in the top toolbar and then clicking **Run ERC**."
msgstr ""
"通过点击顶部工具栏的 **ERC** 按钮（image:images/erc_24.png[]），然后点击 **运"
"行 ERC**，运行电气规则检查。"

#. type: Plain text
#: getting_started_in_kicad.adoc:446
msgid ""
"Even in this simple schematic, KiCad has found two potential errors. The "
"errors are listed in the ERC window, and arrows point to the violation "
"locations in the schematic. Selecting a violation in the ERC window "
"highlights the corresponding arrow."
msgstr ""
"即使在这个简单的原理图中，KiCad 也发现了两个潜在的错误。这些错误列在 ERC 窗口"
"中，箭头指向原理图中的违规位置。在 ERC 窗口中选择一个错误，就会显示出相应的箭"
"头。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:447
#, no-wrap
msgid "ERC Violation Messages"
msgstr "ERC 违规消息"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:447
#, no-wrap
msgid "images/erc-messages.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:453
msgid ""
"You can exclude individual violations or ignore entire classes of violations "
"by right clicking on each error message. However, it's usually worth "
"addressing the violations, even if they aren't actual design errors, in "
"order to get a clean ERC report and avoid missing real problems."
msgstr ""
"你可以通过右键点击每条错误信息来排除个别违规行为或忽略整个违规类别。然而，为"
"了得到一份干净的 ERC 报告，避免遗漏真正的问题，通常值得处理这些违规行为，即使"
"它们不是实际的设计错误。"

#. type: Plain text
#: getting_started_in_kicad.adoc:460
msgid ""
"In this case, KiCad reports \"Input Power pin not driven by any Output Power "
"pins\" for both the `VCC` and `GND` nets. This is a common KiCad ERC error.  "
"Power symbols are set up to require a power output pin, such as the output "
"of a voltage regulator, on the same net; otherwise KiCad thinks the net is "
"undriven.  To a human, it is obvious that `VCC` and `GND` are driven by the "
"battery, but it's necessary to explicitly show that in the schematic."
msgstr ""
"在这种情况下，KiCad 对 `VCC` 和 `GND` 网络报告 \"输入电源引脚没有被任何输出电"
"源引脚驱动\"。这是一个常见的 KiCad ERC 错误。 电源符号被设置为需要一个电源输"
"出引脚，如电压调节器的输出，在同一网络上；否则 KiCad 认为该网络未被驱动。 对"
"人来说，`VCC` 和 `GND` 显然是由电池驱动的，但有必要在原理图中明确显示。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:461
#, no-wrap
msgid "PWR_FLAG Added to Schematic"
msgstr "PWR_FLAG 添加到原理图中"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:461
#, no-wrap
msgid "images/symbols-pwr-flag.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:467
msgid ""
"There is a special `PWR_FLAG` symbol in the `Power` symbol library that is "
"used to solve this problem by telling KiCad that the nets are actually "
"driven. Add this symbol to the `VCC` and `GND` nets and re-run ERC. When ERC "
"passes without any violations, the schematic is complete."
msgstr ""
"在 `Power` 符号库中有一个特殊的 `PWR_FLAG` 符号，用于解决这个问题，告诉 "
"KiCad 这些网络实际上是被驱动的。将这个符号添加到 `VCC` 和 `GND` 网络上，然后"
"重新运行 ERC。当 ERC 通过而没有任何违反时，原理图就完成了。"

#. type: Title ===
#: getting_started_in_kicad.adoc:468
#, no-wrap
msgid "Bill of Materials"
msgstr "物料清单"

#. type: Plain text
#: getting_started_in_kicad.adoc:471
msgid ""
"A final optional step is to generate a Bill of Materials listing all "
"components used in the project. Click **Tools** -> **Generate BOM...**."
msgstr ""
"最后一个可选的步骤是生成一个 BOM，列出工程中使用的所有元件。点击 **工具** -> "
"**生成 BOM...**。"

#. TODO: replace screenshot once running released v7
#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:473
#, no-wrap
msgid "BOM Dialog"
msgstr "BOM 对话框"

#. TODO: replace screenshot once running released v7
#. type: Target for macro image
#: getting_started_in_kicad.adoc:473
#, no-wrap
msgid "images/bom-generator.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:478
msgid ""
"KiCad 7.0 uses Python scripts to generate BOMs. Three BOM scripts are "
"included, and users can also create their own scripts to generate BOMs in "
"whatever format is desired."
msgstr ""
"KiCad 7.0 使用 Python 脚本来生成 BOM。包括三个 BOM 脚本，用户也可以创建自己的"
"脚本，以任何需要的格式生成 BOM。"

#. type: Plain text
#: getting_started_in_kicad.adoc:482
msgid ""
"Select the `bom_csv_grouped_extra` script, and click generate. A CSV file "
"containing BOM information is created in the project directory. The BOM "
"generator also generates an intermediate XML file, which can be safely "
"deleted."
msgstr ""
"选择 `bom_csv_grouped_extra` 脚本，并点击生成。一个包含 BOM 信息的 CSV 文件会"
"在工程目录中被创建。BOM 生成器也会生成一个中间的 XML 文件，这个文件可以安全地"
"删除。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:483
#, no-wrap
msgid "Generated BOM"
msgstr "生成 BOM"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:483
#, no-wrap
msgid "images/bom.png"
msgstr ""

#. type: Title ==
#: getting_started_in_kicad.adoc:485
#, no-wrap
msgid "Tutorial Part 3: Circuit Board"
msgstr "教程第 3 部分：电路板"

#. type: Plain text
#: getting_started_in_kicad.adoc:488
msgid ""
"With the schematic completed, go back to the Project Window and open the PCB "
"Editor, either by clicking the PCB Editor button or opening the board file."
msgstr ""
"原理图完成后，回到工程窗口并打开 PCB 编辑器，可以通过点击 PCB 编辑器按钮或打"
"开电路板文件。"

#. type: Title ===
#: getting_started_in_kicad.adoc:489
#, no-wrap
msgid "PCB Editor Basics"
msgstr "PCB 编辑器基础知识"

#. type: Plain text
#: getting_started_in_kicad.adoc:493
msgid ""
"Navigation in the PCB Editor is the same as the Schematic editor: pan by "
"dragging with the middle mouse button or right mouse button, and zoom with "
"the scrollwheel or kbd:[F1]/kbd:[F2]."
msgstr ""
"PCB 编辑器中的导航与原理图编辑器相同：用鼠标中键或右键拖动平移，用滚轮或 kbd:"
"[F1] / kbd:[F2] 缩放。"

#. type: Plain text
#: getting_started_in_kicad.adoc:499
msgid ""
"The main part of the PCB Editor is a canvas where the board will be "
"designed.  The toolbar on the left side has various display options for the "
"board, including units and toggles for outline/filled display modes for "
"tracks, vias, pads, and zones. The toolbar just to the right of the canvas "
"contains tools for designing the PCB."
msgstr ""
"PCB 编辑器的主要部分是一块画布，将在这里设计电路板。 左边的工具栏有各种板子的"
"显示选项，包括单位和布线、过孔、焊盘和区域的边框/填充显示模式的切换。画布右边"
"的工具条包含了设计 PCB 的工具。"

#. type: Plain text
#: getting_started_in_kicad.adoc:508
#, no-wrap
msgid ""
"Some buttons on the right toolbar have a small triangle in the bottom\n"
"      right corner image:images/pcbnew_palette_buttons.png[]. The triangle\n"
"      indicates that the button has an expanding palette containing several\n"
"      related tools, for example different kinds of dimensions. To select an\n"
"      alternate tool, click and hold on the button until the palette appears,\n"
"      then click on the alternate tool. Another way to use the palettes is to\n"
"      click on the button and drag to the left until the palette appears, then\n"
"      release the mouse button when the desired tool is highlighted.\n"
msgstr "右边工具栏上的一些按钮在右下角有一个小三角形 image:images/pcbnew_palette_buttons.png[]。这个三角形表示该按钮有一个扩展的调色板，包含几个相关的工具，比如说不同种类的尺寸。要选择一个备用工具，请点击并按住按钮直到调色板出现，然后点击备用工具。另一种使用调色板的方法是点击按钮并向左拖动，直到调色板出现，然后在所需的工具被突出显示时释放鼠标按钮。\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:512
msgid ""
"At far right is the Appearance Panel and Selection Filter. The Appearance "
"panel is used to change visibility, colors, and opacity of PCB layers, "
"objects, and nets. The active layer is changed by clicking on the name of a "
"layer."
msgstr ""
"最右边的是外观面板和选择筛选器。外观面板用于改变 PCB 层、对象和网络的可见性、"
"颜色和不透明度。通过点击层的名称可以改变活动层。"

#. type: Plain text
#: getting_started_in_kicad.adoc:516
msgid ""
"Below the Appearance Panel is the Selection Filter, which enables and "
"disables selection of various types of PCB objects. This is useful to select "
"specific items in a crowded layout."
msgstr ""
"在外观面板下面是选择筛选器，它可以启用和禁用各种类型的 PCB 对象的选择。这对于"
"在拥挤的布局中选择特定的项目很有用。"

#. type: Title ===
#: getting_started_in_kicad.adoc:517
#, no-wrap
msgid "Board Setup and Stackup"
msgstr "板子的设置和压层"

#. type: Plain text
#: getting_started_in_kicad.adoc:521
msgid ""
"Before designing the board, set the page size and add information to the "
"title block. Click **File** -> **Page Settings...**, then choose an "
"appropriate paper size and enter a date, revision, and title."
msgstr ""
"在设计电路板报之前，先设置页面大小，并在标题栏中添加信息。点击 **文件** -> **"
"页面设置...**，然后选择一个合适的纸张尺寸，并输入日期、修订和标题。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:522
#, no-wrap
msgid "Layout Page Settings"
msgstr "布局页面设置"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:522
#, no-wrap
msgid "images/layout-page-setup.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:528
msgid ""
"Next, go to **File** -> **Board Setup...** to define how the PCB will be "
"manufactured. The most important settings are the stackup, i.e. what copper "
"and dielectric layers the PCB will have (and their thicknesses), and the "
"design rules, e.g. sizes and spacing for tracks and vias."
msgstr ""
"接下来，进入 **文件** -> **电路板设置...**，定义如何制造 PCB。最重要的设置是"
"压层，即 PCB 将有哪些铜层和介质层（以及它们的厚度），以及设计规则，例如布线和"
"过孔的尺寸和间距。"

#. type: Plain text
#: getting_started_in_kicad.adoc:532
msgid ""
"To set the stackup, open the **Board Stackup** -> **Physical Stackup** page "
"of the Board Setup window. For this guide, leave the number of copper layers "
"at 2, but more complicated projects might require more layers."
msgstr ""
"要设置压层，打开电路板设置窗口的 **电路板压层** -> **物理压层** 页面。在本指"
"南中，将铜层的数量定为 2，但更复杂的工程可能需要更多的铜层。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:533
#, no-wrap
msgid "Physical Stackup"
msgstr "物理压层"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:533
#, no-wrap
msgid "images/board-setup-stackup.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:540
msgid ""
"Next, go to the **Design Rules** -> **Constraints** page. The settings on "
"this page specify the overriding design rules for everything in the board "
"design. For the purposes of this guide, the defaults are fine. However, for "
"a real project these should be set according to the capabilities of the PCB "
"fab house so that the PCB design is manufacturable."
msgstr ""
"接下来，进入 **设计规则** -> **约束** 页面。这个页面上的设置为电路板设计中的"
"所有内容指定了首要的设计规则。就本指南的目的而言，默认值是好的。然而，对于一"
"个真正的工程来说，应该根据 PCB 工厂的能力来设置这些规则，这样才能使 PCB 设计"
"具有可制造性。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:541
#, no-wrap
msgid "Constraints"
msgstr "约束"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:541
#, no-wrap
msgid "images/board-setup-constraints.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:547
msgid ""
"Finally, open the **Design Rules** -> **Net Classes** page. A net class is a "
"set of design rules associated with a specific group of nets. This page "
"lists the design rules for each net class in the design and allows assigning "
"nets to each net class."
msgstr ""
"最后，打开 **设计规则** -> **网络类** 页面。网络类是一组与特定网络组相关的设"
"计规则。这个页面列出了设计中每个网络类的设计规则，并允许将网络类分配给每个网"
"络类。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:548
#, no-wrap
msgid "Net Classes"
msgstr "网络类"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:548
#, no-wrap
msgid "images/board-setup-net-classes.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:553
msgid ""
"Track width and spacing can be managed manually by the designer during "
"layout, but net classes are recommended because they provide an automatic "
"way to manage and check design rules."
msgstr ""
"布线的宽度和间距可以由设计者在布局过程中手动管理，但推荐使用网络类，因为它们"
"提供了一种自动管理和检查设计规则的方法。"

#. type: Plain text
#: getting_started_in_kicad.adoc:560
msgid ""
"In this design, no net classes are specified, so all nets will belong to the "
"`Default` net class. The default design rules for this net class are "
"acceptable for this project, but other designs may have multiple net "
"classes, each with different design rules. For example a board might have a "
"`High Current` netclass with wide traces, or a `50 ohm` netclass with "
"specific width and clearance rules for 50 ohm controlled-impedance traces."
msgstr ""
"在这个设计中，没有指定网络类，所以所有的网络都属于 `默认` 网络类。这个网络类"
"的默认设计规则对这个工程来说是可以接受的，但是其他设计可能有多个网络类，每个"
"网络类有不同的设计规则。例如，一块板子可能有一个宽线 `高电流` 网络类，有，或"
"者一个 `50 ohm` 网络类，有特定的宽度和 50 欧姆控制阻抗线的间隙规则。"

#. type: Title ===
#: getting_started_in_kicad.adoc:561
#, no-wrap
msgid "Importing Changes From Schematic"
msgstr "从原理图中导入更改"

#. type: Plain text
#: getting_started_in_kicad.adoc:566
msgid ""
"The schematic is complete, but there are not yet any components in the "
"layout.  To import design data from the schematic into the layout, click "
"**Tools** -> **Update PCB from Schematic...**, or press kbd:[F8]. There is "
"also a button image:images/update_pcb_from_sch_24.png[] in the top toolbar."
msgstr ""
"原理图已经完成，但布局中还没有任何元件。 要从原理图中导入设计数据到布局中，请"
"点击 **工具** -> **从原理图更新 PCB...**，或按 kbd:[F8]。在顶部的工具栏上还有"
"一个按钮 image:images/update_pcb_from_sch_24.png[] 。"

#. type: Plain text
#: getting_started_in_kicad.adoc:572
msgid ""
"Read through the messages in the **Changes To Be Applied** window, which "
"will say that the three components in the schematic will be added to the "
"board. Click **Update PCB**, **Close**, and click on the canvas to place the "
"three footprints. The location of each footprint relative to the others will "
"be changed later."
msgstr ""
"仔细阅读 **要应用的改变** 窗口中的信息，其中会说原理图中的三个元件将被添加到"
"电路板上。点击 **更新 PCB**，**关闭**，然后点击画布来放置这三个封装。每个封装"
"相对于其他封装的位置将在以后被改变。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:573
#, no-wrap
msgid "Update PCB from Schematic"
msgstr "从原理图更新 PCB"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:573
#, no-wrap
msgid "images/update-pcb-from-schematic.png"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:574
#, no-wrap
msgid "Footprints Added"
msgstr "添加的封装"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:574
#, no-wrap
msgid "images/footprints-added.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:580
msgid ""
"In KiCad, updating the PCB with changes in the schematic is a manual "
"process: the designer decides when it is appropriate to update the PCB with "
"modifications in the schematic. Each time the schematic is edited, the "
"designer must use the **Update PCB from Schematic** tool to keep the "
"schematic and layout in sync."
msgstr ""
"在 KiCad 中，根据原理图的变化更新 PCB 是一个手动过程：设计者决定何时适合根据"
"原理图的修改来更新 PCB。每次编辑原理图时，设计者必须使用 **从原理图更新 "
"PCB** 工具来保持原理图和布局的同步。"

#. type: Title ===
#: getting_started_in_kicad.adoc:581
#, no-wrap
msgid "Drawing A Board Outline"
msgstr "绘制电路板边框"

#. type: Plain text
#: getting_started_in_kicad.adoc:585
msgid ""
"Now the three components have been placed, but the board itself has not been "
"defined. The board is defined by drawing a board outline on the `Edge.Cuts` "
"layer."
msgstr ""
"现在这三个元件已经被放置好了，但是电路板本身还没有被定义。通过在 `Edge.Cuts` "
"层上画一个板的边框来定义电路板。"

#. type: Plain text
#: getting_started_in_kicad.adoc:589
msgid ""
"It's often useful to draw the board outline with a coarse grid, which makes "
"it easy to get round numbers for the board size. Switch to a coarse grid by "
"selecting 1mm in the Grid dropdown menu above the canvas."
msgstr ""
"用粗大的网格来绘制电路的板框通常是很有用的，这样可以很容易得到画布尺寸的整"
"数。在画布上方的网格下拉菜单中选择 1 毫米，就可以切换到粗略的网格。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:590
#, no-wrap
msgid "1mm grid"
msgstr "1mm 网格"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:590
#, no-wrap
msgid "images/coarse-grid.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:601
msgid ""
"To draw on the `Edge.Cuts` layer, click **Edge.Cuts** in the Layers tab of "
"the Appearance panel at right. Choose the rectangle tool image:images/"
"add_rectangle_24.png[]in the right toolbar, and use it to draw a rectangle "
"roughly surrounding the three footprints. The other graphic tools (line "
"image:images/add_line_24.png[], arc image:images/add_arc_24.png[], circle "
"image:images/add_circle_24.png[], or polygon image:images/"
"add_graphical_polygon_24.png[]) could also be used to define the board "
"outline; the only requirement is that the outline is a single closed shape "
"that doesn't intersect itself."
msgstr ""
"要在 `Edge.Cuts` 图层上绘制，在右侧的外观面板的图层标签中点击 **Edge.Cuts**。"
"在右边的工具栏中选择矩形工具 image:images/add_rectangle_24.png[]，用它来画一"
"个大致围绕三个封装的矩形。其他图形工具（直线 image:images/add_line_24.png[], "
"圆弧 image:images/add_arc_24.png[], 圆形 image:images/add_circle_24.png[], 或"
"多边形 image:images/add_graphical_polygon_24.png[]）也可以用来定义板的边框；"
"唯一的要求是，这个边框是一个不与自身相交的单一封闭形状。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:602
#, no-wrap
msgid "Edge Cuts"
msgstr "板框"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:602
#, no-wrap
msgid "images/select-edge-cuts.png"
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:604
#, no-wrap
msgid "Placing Footprints"
msgstr "放置封装"

#. type: Plain text
#: getting_started_in_kicad.adoc:607
msgid ""
"The next step in the layout process is to arrange the footprints on the "
"board.  In general, there are a several considerations for positioning "
"footprints:"
msgstr ""
"布局过程中的下一步是在电路板上安排封装。 一般来说，在定位封装时有几个考虑因"
"素："

#. type: Plain text
#: getting_started_in_kicad.adoc:610
msgid ""
"Some footprints may have exact requirements for their locations, such as "
"connectors, indicators, or buttons and switches."
msgstr "有些封装可能对其位置有确切的要求，如连接器、指示灯或按钮和开关。"

#. type: Plain text
#: getting_started_in_kicad.adoc:613
msgid ""
"Some components may need to be placed according to electrical "
"considerations.  Bypass capacitors should be close to the power pins of the "
"associated IC and sensitive analog components should be far from digital "
"interference."
msgstr ""
"一些元件可能需要根据电气方面的考虑来放置。 旁路电容应靠近相关 IC 的电源引脚，"
"敏感的模拟元件应远离数字干扰。"

#. type: Plain text
#: getting_started_in_kicad.adoc:615
msgid ""
"Almost all components have a \"Courtyard\" (or two if both Front and Back "
"are defined). Generally Courtyards should not intersect."
msgstr ""
"几乎所有的元件都有一个 \"边框\"（或两个，如果前面和后面都有定义）。一般来说，"
"边框不应该相交。"

#. type: Plain text
#: getting_started_in_kicad.adoc:620
msgid ""
"Otherwise components should be positioned for ease of routing. Connected "
"components should generally be close together, and arranged to minimize "
"routing complexity. The ratsnest (the thin lines indicating connections "
"between pads) is useful for determining how best position footprints "
"relative to other footprints."
msgstr ""
"否则元件的位置应便于布线。连接的元件一般应紧靠在一起，并将布线的复杂性降到最"
"低。飞线（表示焊盘之间连接的细线）对于确定如何将封装相对于其他封装的最佳位置"
"很有用。"

#. type: Plain text
#: getting_started_in_kicad.adoc:623
msgid ""
"For the purposes of this guide, the only placement goal is to make the "
"routing process as simple as possible."
msgstr "在本指南中，唯一的放置目标是使布线过程尽可能简单。"

#. type: Plain text
#: getting_started_in_kicad.adoc:628
msgid ""
"Start by moving the battery holder `BT1` onto the back side of the board. "
"Click it to select it, then press kbd:[M] to move it. Press kbd:[F] to flip "
"it to the opposite side; it now appears mirrored and its pads have changed "
"from red to blue."
msgstr ""
"首先将电池座 `BT1` 移到电路板的背面。点击它来选择它，然后按 kbd:[M] 来移动"
"它。按 kbd:[F] 将其翻转到另一侧；现在它看起来是镜像的，它的焊盘从红色变成了蓝"
"色。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:629
#, no-wrap
msgid "BT1 flipped to the back"
msgstr "BT1 翻到后面"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:629
#, no-wrap
msgid "images/bt1-flipped.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:633
msgid ""
"All PCB layers are viewed from front side of the board. Footprints on the "
"bottom of the board are therefore upside down and appear mirrored."
msgstr ""
"所有的 PCB 层都是从板子的正面看的。因此，电路板底部的封装是颠倒的，看起来是镜"
"像的。"

#. type: Plain text
#: getting_started_in_kicad.adoc:637
msgid ""
"Each PCB layer has a unique color, which is shown by the swatches in the "
"Layers tab of the Appearance panel. In the default color scheme, items on "
"the `F.Cu` (Front Copper) layer are red, while items on the `B.Cu` (Back "
"Copper) are blue."
msgstr ""
"每个 PCB 层都有一个独特的颜色，由外观面板的层标签中的色板显示。在默认的颜色方"
"案中，`F.Cu` （正面铜）层上的项目是红色的，而 `B.Cu`（背面铜）上的项目是蓝"
"色。"

#. type: Plain text
#: getting_started_in_kicad.adoc:643
msgid ""
"Now place the other two components. One at a time, select each component, "
"then move and rotate it with kbd:[M] and kbd:[R]. Watch the ratsnest lines "
"between each pad to choose the simplest arrangement of components; a good "
"arrangement will leave the lines untangled. One possible arrangement is "
"shown in the screenshot below."
msgstr ""
"现在放置另外两个元件。一次一个，选择每个元件，然后用 kbd:[M] 和 kbd:[R] 移动"
"和旋转它。观察每个焊盘之间的飞线，以选择最简单的元件排列；一个好的排列将使这"
"些线不被缠住。一个可能的安排显示在下面的截图中。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:644
#, no-wrap
msgid "Footprints positioned optimally"
msgstr "封装的最佳位置"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:644
#, no-wrap
msgid "images/footprints-positioned.png"
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:646
#, no-wrap
msgid "Routing Tracks"
msgstr "布线"

#. type: Plain text
#: getting_started_in_kicad.adoc:648
msgid ""
"With the components in place, it's time to connect the pads with copper "
"traces."
msgstr "元件就位后，现在是用铜线连接焊盘的时候了。"

#. type: Plain text
#: getting_started_in_kicad.adoc:651
msgid ""
"The first trace will be drawn on the front of the board, so change the "
"active layer to `F.Cu` in the Layers tab of the Appearance panel."
msgstr ""
"第一条布线将被画在电路板的正面，所以在外观面板的层标签中把活动层改为 `F.Cu`。"

#. type: Plain text
#: getting_started_in_kicad.adoc:658
msgid ""
"Click **Route Tracks** image:images/add_tracks_24.png[] in the right-hand "
"toolbar or press kbd:[X]. Click on the `led` pad of `D1`. The ratsnest line "
"indicates there is an unrouted connection to the `led` pad of `R1`, so click "
"on that pad to draw a trace connecting the two pads. Clicking on the second "
"pad completes the trace. The ratsnest line between the `led` pins is no "
"longer drawn because the connection has been made in copper."
msgstr ""
"点击右侧工具栏中的 **布线** image:images/add_tracks_24.png[] 或按 kbd:[X]。点"
"击 `D1` 的 `led` 焊盘。鼠窝线表明有一个与 `R1` 的 `led` 焊盘的飞线布线连接，"
"所以点击该焊盘来画一个连接这两个焊盘的布线。点击第二个焊盘就完成了布线。"
"`led` 引脚之间的飞线不再被画出，因为连接已经在铜中完成。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:659
#, no-wrap
msgid "First connection routed"
msgstr "第一个连接的布线"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:659
#, no-wrap
msgid "images/route-first-connection.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:665
msgid ""
"Now draw a trace between the `GND` pads of `BT1` and `D1`, starting with the "
"`BT1` pad on the back of the board. Notice that the active layer "
"automatically changed to `B.Cu` after clicking on the `BT1` pad. Click on "
"the `D1` pad to finish the track."
msgstr ""
"现在在 `BT1` 和 `D1` 的 `GND` 焊盘之间布线，从电路板背面的 `BT1` 焊盘开始。注"
"意在点击 `BT1` 焊盘后，活动层自动变成了 `B.Cu`。点击 `D1` 焊盘来完成这个布"
"线。"

#. type: Plain text
#: getting_started_in_kicad.adoc:671
msgid ""
"While `BT1` has surface mount pads that are only on the bottom of the board, "
"`D1` has through hole pads that can connect to tracks on both the front and "
"back. Through hole pads are one way to make a connection between multipl "
"layers. In this case, `D1` is a component on the front side of the board, "
"but its through hole pads are used to connect to a trace on the back of the "
"board."
msgstr ""
"`BT1` 的表面贴装焊盘只在电路板的底部，而 `D1` 的通孔焊盘可以连接到前面和后面"
"的布线。过孔焊盘是在多层板之间进行连接的一种方式。在这种情况下，`D1` 是电路板"
"正面的一个元件，但它的通孔焊盘被用来连接到电路板背面的布线上。"

#. type: Plain text
#: getting_started_in_kicad.adoc:677
msgid ""
"Another way to make a connection across layers is with a via. Start routing "
"at the `VCC` pad of `BT1` on the back of the board. Press kbd:[V] and click "
"halfway between `BT1` and `R1` to insert a via, which also switches the "
"active layer to `F.Cu`. Complete the track on the top side of the board by "
"clicking on the `VCC` pad of `R1`."
msgstr ""
"另一种跨层连接的方法是用过孔。在电路板背面的 `BT1` 的 `VCC` 焊盘上开始布线。"
"按 kbd:[V] 并在 `BT1` 和 `R1` 之间点击，插入一个过孔，同时将活动层切换到 `F."
"Cu`。通过点击 `R1` 的 `VCC` 焊盘完成电路板顶部的布线。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:678
#, no-wrap
msgid "All connections routed"
msgstr "所有连接的布线"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:678
#, no-wrap
msgid "images/routing-complete.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:683
msgid ""
"At this point, all connections are routed. This can be confirmed by looking "
"at the status screen in the bottom left of the window, where the number of "
"unrouted nets is given as 0."
msgstr ""
"在这一点上，所有的连接都被布线了。这可以通过查看窗口左下方的状态屏幕来确认，"
"其中未被布线的网络数量为 0。"

#. type: Title ===
#: getting_started_in_kicad.adoc:684
#, no-wrap
msgid "Placing Copper Zones"
msgstr "放置敷铜"

#. type: Plain text
#: getting_started_in_kicad.adoc:687
msgid ""
"Copper zones are often used for ground and power connections because they "
"provide a lower impedance connection than traces."
msgstr "敷铜通常用于接地和电源连接，因为它们提供了比导线更低的阻抗连接。"

#. type: Plain text
#: getting_started_in_kicad.adoc:692
msgid ""
"Add a `GND` zone on the bottom of the board by switching to the bottom "
"copper layer and clicking the **Add a filled zone** button image:images/"
"add_zone_24.png[] in the right toolbar. Click on the PCB to place the first "
"corner of the zone."
msgstr ""
"通过切换到底部铜层并点击右侧工具栏中的 **添加敷铜** 按钮 image:images/"
"add_zone_24.png[]，在电路板的底部添加一个 `GND` 敷铜。在 PCB 上点击，放置该敷"
"铜的第一个角。"

#. type: Plain text
#: getting_started_in_kicad.adoc:697
msgid ""
"In the Copper Zone Properties dialog that appears, select the `GND` net and "
"make sure that the `B.Cu` layer is selected. Click **OK**, then click to "
"place the other three corners of the zone. Double click when placing the "
"last corner to complete the zone."
msgstr ""
"在出现的 \"敷铜属性\" 对话框中，选择 `GND` 网络并确保 `B.Cu` 层被选中。点击 "
"**确定**，然后点击放置该敷铜的其他三个角。在放置最后一个角时，双击来完成该敷"
"铜。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:698
#, no-wrap
msgid "Zone outline"
msgstr "敷铜边框"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:698
#, no-wrap
msgid "images/zone-outline.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:709
msgid ""
"The zone outline is displayed on the canvas, but the zone is not yet filled "
"-- there is no copper in the zone area, and therefore the zone is not making "
"any electrical connections. Fill the zone with **Edit** -> **Fill All "
"Zones** (kbd:[B]). Copper has been added to the zone, but it doesn't connect "
"to the `VCC` or `led` pads and traces, and is clipped by the board edge. It "
"overlaps with the `GND` trace drawn earlier, and it connects to the `GND` "
"pads through thin traces. These are thermal reliefs, which make the pads "
"easier to solder.  Thermal reliefs and other zone settings can be modified "
"in the zone properties dialog."
msgstr ""
"敷铜边框显示在画布上，但区还没有被填满 -- 在敷铜的范围内没有铜，因此敷铜没有"
"进行任何电气连接。用 **编辑** -> **填充所有敷铜** (kbd:[B])填充该敷铜。铜已经"
"被添加到该敷铜，但是它没有连接到 `VCC` 或 `led` 焊盘和导线，并且被板子的边缘"
"剪掉。它与前面画的 `GND` 线重叠，并通过细线与 `GND` 焊盘连接。这些是散热条，"
"使焊盘更容易焊接。 散热条和其他敷铜设置可以在敷铜属性对话框中修改。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:710
#, no-wrap
msgid "Filled copper zone"
msgstr "填充敷铜"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:710
#, no-wrap
msgid "images/zone-filled.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:716
msgid ""
"In KiCad, zones are not filled automatically when they are first drawn or "
"modified, or when footprints within them are moved. Zones are refilled by "
"manually filling them and when running <<drc,DRC>>. Make sure zone fills are "
"up-to-date before generating <<fab,fabrication outputs>>."
msgstr ""
"在 KiCad 中，当第一次绘制或修改敷铜时，或移动敷铜内的封装时，敷铜不会被自动填"
"充。敷铜是通过手动填充和运行《DRC，DRC》时重新填充。在生成《制造，制造输出》"
"之前，请确保敷铜填充是最新的。"

#. type: Plain text
#: getting_started_in_kicad.adoc:722
msgid ""
"Sometimes filled zones can make it hard to see other objects in a crowded "
"board design. Zones can be hidden except for their boundaries using the "
"**Show only zone boundaries** button image:images/show_zone_disable_24.png[] "
"on the left-hand toolbar. Zones retain their filled status when only their "
"outlines are shown -- hiding a zone fill is not the same as unfilling it."
msgstr ""
"有时，在一个拥挤的画布设计中，填满的敷铜会让人很难看到其他的对象。可以使用左"
"侧工具栏上的 **只显示敷铜边界** 按钮隐藏敷铜，image:images/"
"show_zone_disable_24.png[] 。当只显示敷铜的边框时，敷铜会保留其填充状态--隐藏"
"敷铜的填充与取消填充是不同的。"

#. type: Plain text
#: getting_started_in_kicad.adoc:726
msgid ""
"Zones can also be made transparent using the Appearance panel, and inactive "
"layers can also be hidden or dimmed using the **Layer Display Options** in "
"the Appearance Panel."
msgstr ""
"敷铜也可以使用外观面板使之透明，非活动层也可以使用外观面板中的 **层显示选项"
"** 隐藏或调暗。"

#. type: Title ===
#: getting_started_in_kicad.adoc:728
#, no-wrap
msgid "Design Rule Checking"
msgstr "设计规则检查"

#. type: Plain text
#: getting_started_in_kicad.adoc:737
msgid ""
"Design Rule Checking is the layout equivalent of Electrical Rule Checking "
"for the schematic. DRC looks for design mistakes like mismatches between the "
"schematic and layout, copper regions that have insufficient clearance or are "
"shorted together, and traces that do not connect to anything. Custom rules "
"can also be written in KiCad 7.0. To view the full list of design rules that "
"are checked and to adjust their severity, go to **Board Setup** -> **Design "
"Rules** -> **Violation Severity**. Running DRC and fixing all errors is "
"strongly advised before generating <<fab,fabrication outputs>>."
msgstr ""
"设计规则检查相当于原理图上的电气规则检查的布局。DRC 寻找设计错误，如原理图和"
"布局之间的不匹配，敷铜间隙不足或被短路，以及没有连接到任何东西的布线。自定义"
"规则也可以在 KiCad 7.0 中编写。要查看被检查的设计规则的完整列表并调整其严重程"
"度，请进入 **电路板设置** -> **设计规则** -> **违反严重程度**。强烈建议在生成"
"《制造，制造输出》之前运行 DRC 并修复所有错误。"

#. type: Plain text
#: getting_started_in_kicad.adoc:742
msgid ""
"Run a DRC check with **Inspect** -> **Design Rules Checker**, or use the "
"button image:images/erc_24.png[] in the top toolbar. Click **Run DRC**. When "
"the checks are complete, no errors or warnings should be reported. Close the "
"DRC window."
msgstr ""
"用 **检查** -> **设计规则检查** 来运行 DRC 检查，或者使用顶部工具栏的 image:"
"images/erc_24.png[] 按钮。单击 **运行 DRC**。当检查完成后，不应该有错误或警告"
"报告。关闭 DRC 窗口。"

#. type: Plain text
#: getting_started_in_kicad.adoc:749
msgid ""
"Now intentionally cause a DRC error by moving the resistor footprint to "
"overlap the filled area of the zone. Use kbd:[D] (Drag) to move the resistor "
"footprint slightly while keeping the traces attached to its pads. This "
"creates a clearance violation because the `VCC` and `led` pads of the "
"resistor are shorted to the `GND` zone fill. Ordinarily this would be fixed "
"by refilling the zone, but don't refill the zone yet."
msgstr ""
"现在故意造成 DRC 错误，将电阻的封装移动到与该敷铜的填充区域重叠。使用 kbd:[D]"
"（拖动）稍微移动电阻的封装，同时保持导线连接到其焊盘上。这就产生了间隙违规，"
"因为电阻的 `VCC` 和 `led` 焊盘与 `GND` 区的填充物短路了。通常情况下，这可以通"
"过重新填充敷铜来解决，但现在不要重新填充敷铜。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:750
#, no-wrap
msgid "Resistor footprint moved to violate clearance"
msgstr "电阻的封装被移动以违反间隙"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:750
#, no-wrap
msgid "images/resistor-moved.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:758
msgid ""
"Run DRC again, but make sure to uncheck the **Refill all zones before "
"performing DRC** checkbox. DRC reports 4 violations: for each pad of `R1`, "
"there is a clearance violation between the pad and the zone and another "
"clearance violation between the pad's through hole and the zone. Arrows "
"point to each violation in the canvas. Clicking on each violation message "
"zooms in on the respective violation."
msgstr ""
"再次运行 DRC，但要确保取消勾选 **在执行 DRC 之前重新填充所有敷铜** 的复选框。"
"DRC 报告了 4 个违规情况：对于 `R1` 的每个焊盘，在焊盘和敷铜之间有一个间隙违"
"规，在焊盘的通孔和敷铜之间有一个间隙违规。箭头指向画布上的每个违规行为。点击"
"每个违规信息，就会放大相应的违规行为。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:759
#, no-wrap
msgid "DRC errors due to clearance violation between R1 and GND"
msgstr "由于 `R1` 和 `GND` 之间的间隙违反，导致 DRC 错误"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:759
#, no-wrap
msgid "images/drc-errors.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:764
msgid ""
"Close the DRC dialog, press kbd:[B] to refill the zone, and re-run DRC.  "
"Alternatively, check the **Refill all zones before performing DRC** checkbox "
"and re-run DRC. All violations are fixed."
msgstr ""
"关闭 DRC 对话框，按 kbd:[B] 重新填充敷铜，并重新运行 DRC。 或者，勾选 **在执"
"行 DRC 之前重新填充所有敷铜** 复选框并重新运行 DRC。所有的违规行为都被修复。"

#. type: Title ===
#: getting_started_in_kicad.adoc:765
#, no-wrap
msgid "3D Viewer"
msgstr "3D 查看器"

#. type: Plain text
#: getting_started_in_kicad.adoc:770
msgid ""
"KiCad offers a 3D viewer that is useful for inspecting the PCB. Open the 3D "
"viewer with **View** -> **3D Viewer**. Pan by dragging with the middle mouse "
"button, and orbit by dragging with the left mouse button. Orbit around the "
"PCB to see the LED and resistor on the top, and the battery holder on the "
"bottom."
msgstr ""
"KiCad 提供了一个 3D 查看器，对检查 PCB 很有用。用 **查看** -> **3D 查看器** "
"打开 3D 查看器。用鼠标中键拖动进行平移，用鼠标左键拖动进行绕行。绕着 PCB 板运"
"行，可以看到顶部的 LED 和电阻，以及底部的电池座。"

#. type: Plain text
#: getting_started_in_kicad.adoc:774
msgid ""
"A raytracing mode is available, which is slower but offers more accurate "
"rendering. Switch to the raytracing mode with **Preferences** -> "
"**Raytracing**."
msgstr ""
"有一种光线追踪模式，它比较慢，但能提供更精确的渲染。用 **偏好设置** -> **光线"
"追踪** 切换到光线追踪模式。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:775
#, no-wrap
msgid "Raytraced view of the PCB"
msgstr "PCB 的光线追踪视图"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:775
#, no-wrap
msgid "images/raytracing.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:780
msgid ""
"Many of the footprints in KiCad's library come with 3D models, including all "
"of the footprints used in this guide. Some footprints do not come with 3D "
"models, <<footprints-and-3d-models,but users can add their own>>."
msgstr ""
"KiCad 库中的许多封装都带有 3D 模型，包括本指南中使用的所有封装。有些封装没有"
"附带 3D 模型，《封装和 3D 模型，但用户可以添加自己的模型》。"

#. type: Title ===
#: getting_started_in_kicad.adoc:782
#, no-wrap
msgid "Fabrication Outputs"
msgstr "制造输出"

#. type: Plain text
#: getting_started_in_kicad.adoc:785
msgid ""
"With the board design finished, the final step is to generate fabrication "
"outputs so the board can be manufactured."
msgstr ""
"随着电路板设计的完成，最后一步是生成制造输出，这样电路板就可以被制造出来。"

#. type: Plain text
#: getting_started_in_kicad.adoc:789
msgid ""
"Open the Plot dialog with **File** -> **Plot...**. This dialog can plot the "
"design in several formats, but Gerber is usually the right format for "
"ordering from a PCB fabricator."
msgstr ""
"用 **文件** -> **绘制...** 打开绘制对话框。这个对话框可以将设计绘制成几种格"
"式，但 Gerber 通常是向 PCB 制造厂家制造的正确格式。"

#. type: Plain text
#: getting_started_in_kicad.adoc:798
msgid ""
"Specify an output directory so that the plotted files will be collected in a "
"folder. Otherwise, the default settings are fine, but make sure all the "
"necessary layers are checked: include the copper layers (`++*++.Cu`), board "
"outline (`Edge.Cuts`), soldermask (`++*++.Mask`), and silkscreen (`++*++."
"Silkscreen`).  The paste layers (`++*++.Paste`) are useful for manufacturing "
"solder paste stencils. The Adhesive layers (`++*++.Adhesive`) are needed "
"only if any components will be glued to the board during assembly. Other "
"layers may be useful to plot, but are not typically necessary for PCB "
"fabrication."
msgstr ""
"指定一个输出目录，这样绘制的文件就会被收集到一个文件夹中。否则，默认设置就可"
"以了，但要确保所有必要的层都被选中：包括铜层（`++*++.Cu`）、电路板边框"
"（`Edge.Cuts`）、阻焊层（`++*++.Mask`）和丝印（`++*++.Silkscreen`）。 锡膏层"
"（`++*++.Paste`）对于制造锡膏模版（钢网）很有用。粘合层（`++*++.Adhesive`）只"
"有在组装过程中任何元件将被粘在电路板上时才需要。其他层可能对绘图有帮助，但通"
"常对 PCB 的制作没有必要。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:799
#, no-wrap
msgid "Plot dialog"
msgstr "绘制对话框"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:799
#, no-wrap
msgid "images/fabrication-outputs.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:805
msgid ""
"Click **Plot** to generate the Gerber files. Also click **Generate Drill "
"Files...** and then **Generate Drill File** to create files specifying the "
"location of all holes that will be drilled in the board. Finally, close the "
"Plot dialog. The design is finished."
msgstr ""
"点击 **绘制** 来生成 Gerber 文件。同时点击 **生成钻孔文件...**，然后点击 **生"
"成钻孔文件** 来创建文件，指定所有将在电路板上钻孔的位置。最后，关闭 \"绘制\" "
"对话框。设计就完成了。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:806
#, no-wrap
msgid "Generate Drill Files dialog"
msgstr "生成钻孔文件对话框"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:806
#, no-wrap
msgid "images/generate-drill-files.png"
msgstr ""

#. type: Title ==
#: getting_started_in_kicad.adoc:808
#, no-wrap
msgid "Tutorial Part 4: Custom Symbols and Footprints"
msgstr "教程第 4 部分：自定义符号和封装"

#. type: Plain text
#: getting_started_in_kicad.adoc:813
msgid ""
"The circuit would be improved by adding a switch to turn the LED on and off. "
"The process to add this switch will require creating a new symbol and "
"footprint library, drawing a switch symbol, and creating a footprint for the "
"switch."
msgstr ""
"通过添加一个开关来打开和关闭 LED，该电路将得到改善。添加这个开关的过程需要创"
"建一个新的符号和封装库，绘制一个开关符号，并为开关创建一个封装。"

#. type: Plain text
#: getting_started_in_kicad.adoc:818
msgid ""
"The specific switch that will be used in this guide is the https://www."
"nkkswitches.com/pdf/MtogglesBushing.pdf[NKK M2011S3A1W03], an SPST toggle "
"switch. Many other switches could be used, but the pin numbering and "
"footprint dimensions may need to be adjusted."
msgstr ""
"本指南将使用的具体开关是 https://www.nkkswitches.com/pdf/MtogglesBushing."
"pdf[NKK M2011S3A1W03]，一种 SPST（单刀单置） 拨动开关。许多其他开关也可以使"
"用，但引脚编号和封装尺寸可能需要调整。"

#. type: Title ===
#: getting_started_in_kicad.adoc:819
#, no-wrap
msgid "Library and Library Table Basics"
msgstr "库和库表的基础知识"

#. type: Plain text
#: getting_started_in_kicad.adoc:823
msgid ""
"Symbols and footprints are organized into libraries. A library can hold "
"symbols or footprints, but not both."
msgstr "符号和封装被组织到库中。一个库可以容纳符号或封装，但不能同时容纳。"

#. type: Plain text
#: getting_started_in_kicad.adoc:828
msgid ""
"KiCad keeps track of the user's symbol libraries and footprint libraries in "
"the symbol library table and footprint library table, respectively. Each "
"library table is a list of library names and the location of where each "
"library exists on disk."
msgstr ""
"KiCad 在符号库表和封装库表中分别记录了用户的符号库和封装库。每个库表都是一个"
"库名的列表，以及每个库在硬盘上存在的位置。"

#. type: Plain text
#: getting_started_in_kicad.adoc:835
msgid ""
"In addition to global symbol and footprint library tables, there are also "
"project library tables for symbols and footprints. Symbols and footprints "
"that are added to the global tables are available in all projects, while "
"symbols and footprints in the project-specific tables are available only for "
"that specific project. Users can add their own libraries to the global "
"library tables or to project-specific tables."
msgstr ""
"除了全局的符号和封装库表，还有用于符号和封装的工程库表。添加到全局表的符号和"
"封装在所有工程中都可用，而专用工程表中的符号和封装只对该专用工程有效。用户可"
"以将自己的库添加到全局库表或工程专用表中。"

#. type: Plain text
#: getting_started_in_kicad.adoc:841
msgid ""
"The symbol library tables can be viewed or edited with **Preferences** -> "
"**Manage Symbol Libraries...** in the Schematic Editor or Symbol Editor "
"windows.  The footprint library tables can be viewed or edited with "
"**Preferences** -> **Manage Footprint Libraries...** in the Board Editor or "
"Footprint Editor. Both library tables can also be accessed from the Project "
"Manager."
msgstr ""
"符号库表可以在原理图编辑器或符号编辑器窗口中通过 **偏好设置** -> **管理符号"
"库...** 来查看或编辑。 封装库表可以在电路板编辑器或封装编辑器中通过 **偏好设"
"置** -> **管理封装库...** 查看或编辑。这两个库表也可以从工程管理器中访问。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:842
#, no-wrap
msgid "symbol library table"
msgstr "符号库表"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:842
#, no-wrap
msgid "images/symbol-library-table.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:850
msgid ""
"Often, paths to libraries are defined with path substitution variables. This "
"enables a user to move all of their libraries to a new location without "
"modifying the library tables. The only thing that needs to change is to "
"redefine the variable to point to the new location. KiCad's path subsitution "
"variables are edited with **Preferences** -> **Configure Paths...** in the "
"Project Manager or any of the Editor windows."
msgstr ""
"通常，库的路径是用路径替换变量来定义的。这使用户能够在不修改库表的情况下将所"
"有的库移到一个新的位置。唯一需要改变的是重新定义变量以指向新的位置。KiCad 的"
"路径替代变量可以在工程管理器或任何编辑器窗口中通过 **偏好设置** -> **配置路"
"径...** 进行编辑。"

#. type: Plain text
#: getting_started_in_kicad.adoc:854
msgid ""
"One useful path substitution variable is `${KIPRJMOD}`. This variable always "
"points at the current project directory, so it can be used for including "
"project-specific libraries that are stored inside the project directory."
msgstr ""
"一个有用的路径替换变量是 `${KIPRJMOD}`。这个变量总是指向当前的工程目录，所以"
"它可以用来包括存储在工程目录内的工程专用库。"

#. type: Plain text
#: getting_started_in_kicad.adoc:860
msgid ""
"On first run, KiCad <<sym-lib-table-setup,prompts the user to set up the "
"symbol library table>> and <<fp-lib-table-setup,footprint library table>>. "
"To go through this setup again, delete or rename the symbol library table or "
"footprint library table files. Make a backup of the tables before deleting "
"them."
msgstr ""
"在第一次运行时，KiCad 《符号库表设置，提示用户设置符号库表》和《封装库表设"
"置，提示用户设置封装库表》。要再次进行这种设置，请删除或重命名符号库表或封装"
"库表文件。在删除这些表之前，请对它们进行备份。"

#. type: Plain text
#: getting_started_in_kicad.adoc:863
msgid ""
"The location of the symbol and footprint library table files depends on "
"operating system."
msgstr "符号和封装库表文件的位置取决于操作系统。"

#. type: Plain text
#: getting_started_in_kicad.adoc:865
msgid ""
"Windows: `%APPDATA%\\kicad\\7.0\\sym-lib-table` and `%APPDATA%"
"\\kicad\\7.0\\fp-lib-table`"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:866
msgid ""
"Linux: `~/.config/kicad/7.0/sym-lib-table` and `~/.config/kicad/7.0/fp-lib-"
"table`"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:868
msgid ""
"macOS: `~/Library/Preferences/kicad/7.0/sym-lib-table` and `~/Library/"
"Preferences/kicad/7.0/fp-lib-table`"
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:869
#, no-wrap
msgid "Creating New Global or Project Libraries"
msgstr "创建新的全局库或工程库"

#. type: Plain text
#: getting_started_in_kicad.adoc:874
msgid ""
"The first step in drawing a new symbol or footprint is to choose a library "
"in which to store it. For this guide, the switch symbol and footprint will "
"go into new project-specific libraries."
msgstr ""
"绘制一个新的符号或封装的第一步是选择一个库来存储它。在本指南中，开关符号和封"
"装将进入新的工程专用库。"

#. type: Plain text
#: getting_started_in_kicad.adoc:881
msgid ""
"Open the Symbol Editor from the Project Manager. Click **File** -> **New "
"Library**, and select **Project**. Choose a name for the new library (e.g.  "
"`getting-started.kicad_sym`) and save it in the project directory. The empty "
"new library is now selected in the Libraries pane at left, and has been "
"automatically added to the project library table (check the Project Specific "
"Libraries tab in **Preferences** -> **Manage Symbol Libraries...**)."
msgstr ""
"从工程管理器中打开符号编辑器。点击 **文件** -> **新建库**，并选择 **工程**。"
"为新库选择一个名字（例如：`getting-started.kicad_sym`）并保存在工程目录中。空"
"的新库现在在左边的库窗格中被选中，并被自动添加到工程库表中（在 **偏好设置** -"
"> **管理符号库...** 中检查工程专用库标签）。"

#. type: Title ===
#: getting_started_in_kicad.adoc:882
#, no-wrap
msgid "Creating New Symbols"
msgstr "新建符号"

#. type: Plain text
#: getting_started_in_kicad.adoc:890
msgid ""
"Now create the switch symbol in the new library. With the `getting-started` "
"library selected in the Libraries pane, click **File** -> **New Symbol...**. "
"In the **Symbol name** field, enter the part number: `M2011S3A1W03`. Switch "
"symbols should have reference designators that start with `SW`, so change "
"the **Default reference designator** field to `SW`. All other fields can "
"remain as the defaults."
msgstr ""
"现在在新库中创建开关符号。在 \"库\" 窗格中选择 `getting-started` 库，点击 **"
"文件** -> **新建符号...**。在 **符号名称** 栏中，输入元件编号："
"`M2011S3A1W03`。开关符号的位号应以 `SW` 开头，所以将 **默认位号** 字段改为 "
"`SW`。所有其他字段可以保持默认值。"

#. type: Plain text
#: getting_started_in_kicad.adoc:896
msgid ""
"In the Libraries pane, the `M2011S3A1W03` symbol now appears under the "
"`getting-started` library. In the canvas, a cross indicates the center of "
"the footprint, and text has been added for the symbol name and reference "
"designator. For now, move the text away from the center of the footprint to "
"get it out of the way."
msgstr ""
"在 \"库\" 窗格中，`M2011S3A1W03` 符号现在出现在 `getting-started` 库下。在画"
"布上，一个十字表示封装的中心，并添加了符号名称和位号的文字。现在，将文本从封"
"装的中心移开，使其不碍事。"

#. type: Title ====
#: getting_started_in_kicad.adoc:897
#, no-wrap
msgid "Symbol Pins"
msgstr "符号引脚"

#. type: Plain text
#: getting_started_in_kicad.adoc:907
msgid ""
"Start drawing the symbol by adding a pin. Click the **Add a pin** button "
"image:images/pin_24.png[] on the right toolbar. The Pin Properties dialog "
"will appear. Set **Pin name** to `A`, **Pin number** to `2`, **Electrical "
"type** to `Passive`, and **Orientation** to `Right`. Set **X Position** to "
"`-5.08 mm` and **Y Position** to `0`. Click **OK**, then click on the canvas "
"to place the pin.  If the pin moved after clicking **OK**, it might be "
"necessary to edit the pin's properties again (double click the pin, or right "
"click on the pin -> **Properties...**) to set the position correctly."
msgstr ""
"通过添加一个引脚开始绘制符号。点击右侧工具栏上的 **添加引脚** 按钮 image:"
"images/pin_24.png[] 。会出现 \"引脚属性\" 对话框。将 **引脚名称** 为 `A`，**"
"引脚数量** 为 `2`，**电气类型** 为 `无源`，**方向** 为 `右`。设置 **X 位置** "
"为 `-5.08 mm`，**Y 位置** 为`0`。点击 **确定**，然后点击画布来放置引脚。 如果"
"在点击 **确认** 后，引脚移动了，可能需要再次编辑引脚的属性（双击引脚，或右击"
"引脚 -> **属性...**）来正确设置位置。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:908
#, no-wrap
msgid "pin properties"
msgstr "引脚属性"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:908
#, no-wrap
msgid "images/pin-properties.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:912
msgid ""
"Add a second pin, but this time don't use the **Add a pin** tool. Instead, "
"press kbd:[Insert]. A new pin numbered 3 is added to the symbol, just below "
"pin 2."
msgstr ""
"添加第二个引脚，但这次不要使用 **添加引脚** 工具。相反，按 kbd:[Insert]。一个"
"编号为 3 的新引脚被添加到符号中，就在引脚 2 下面。"

#. type: Plain text
#: getting_started_in_kicad.adoc:920
#, no-wrap
msgid ""
"In many places in KiCad, pressing kbd:[Insert] will repeat the last action.\n"
"     The location of the new item will be shifted and the numbering incremented\n"
"     automatically, as applicable. In the Symbol Editor, this can be used to\n"
"     place a large number of pins quickly. In the Schematic Editor, it can be\n"
"     used to repeatedly place a component, or to label a large component's pins\n"
"     with numbered labels. kbd:[Insert] can be useful in the Footprint and Board\n"
"     Editors as well.\n"
msgstr "在 KiCad 的许多地方，按 kbd:[Insert] 会重复上次的操作。新项目的位置将被移位，并根据情况自动增加编号。在符号编辑器中，这可以用来快速放置大量的引脚。在原理图编辑器中，它可以用来重复放置一个元件，或者用编号标签标记一个大元件的引脚。 kbd:[Insert] 在封装和电路板编辑器中也很有用。\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:924
msgid ""
"We want Pin 3 to be on the right side of the switch symbol, so edit the "
"properties of pin 3 and change **X position** to `5.08`, **Y position** to "
"`0`, and **Orientation** to `Left`. Also, change **Pin name** to `B`."
msgstr ""
"我们希望引脚 3 在开关符号的右边，所以编辑引脚 3 的属性，将 **X 位置** 改为 "
"`5.08`，**Y 位置** 改为 `0`，**方向** 改为 `左`。另外，将 **引脚名称** 改为 "
"`B`。"

#. type: Title ====
#: getting_started_in_kicad.adoc:925
#, no-wrap
msgid "Graphical Features"
msgstr "图形特征"

#. type: Plain text
#: getting_started_in_kicad.adoc:932
msgid ""
"With the pins placed, use the circle image:images/add_circle_24.png[] and "
"line image:images/add_line_24.png[] tools to make the symbol look like an "
"SPST switch. For this step, it will be useful to switch to a finer grid: "
"right click the canvas and select a smaller grid in the **Grid** submenu. "
"After adding the graphical shapes, switch back to a 50 mil grid."
msgstr ""
"放好引脚后，使用圆圈 image:images/add_circle_24.png[] 和直线 image:images/"
"add_line_24.png[] 工具，使符号看起来像一个 SPST （单刀单置）开关。对于这一"
"步，切换到一个更小的网格将是有用的：右击画布，在 **网格** 子菜单中选择一个更"
"小的网格。添加图形后，再切换回 50 mil 的网格。"

#. type: Plain text
#: getting_started_in_kicad.adoc:936
msgid ""
"Small grids are useful for graphical features, but **symbol pins must always "
"be placed on a 50 mil (1.27 mm) grid**. Pins which are not aligned to a 50 "
"mil grid will not be able to connect to wires in the schematic."
msgstr ""
"小网格对图形特征很有用，但 **符号引脚必须始终放在 50 mil（1.27 mm）的网格上"
"**。没有对准 50 mil 网格的引脚将无法与原理图中的导线连接。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:937
#, no-wrap
msgid "symbol drawn"
msgstr "绘制符号"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:937
#, no-wrap
msgid "images/symbol-drawn.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:947
msgid ""
"Now edit the properties for the whole symbol with **File** -> **Symbol "
"Properties**, or by double clicking on the canvas. Change the **Value** "
"field to `M2011S3A1W03`, and add `spst switch toggle` to the **Keyword** "
"field to make it easier to find the symbol by searching. For this symbol, "
"the pin names do not add any useful information, so uncheck **Show pin "
"name** to make the symbol visually simpler."
msgstr ""
"现在用 **文件** -> **符号属性** 编辑整个符号的属性，或者在画布上双击。将 **值"
"** 字段改为 `M2011S3A1W03'，并在 **关键字** 字段中添加 `spst switch toggle'，"
"以便通过搜索更容易找到该符号。对于这个符号，引脚名称并没有增加任何有用的信"
"息，所以取消勾选 **显示引脚名称**，使符号在视觉上更简单。"

#. type: Plain text
#: getting_started_in_kicad.adoc:950
msgid ""
"After clicking **OK**, move the value field's text lower so that it does not "
"overlap with the symbol graphics."
msgstr "点击 **确定** 后，将值的文字移至较低位置，使其不与符号图形重叠。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:951
#, no-wrap
msgid "symbol properties"
msgstr "符号属性"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:951
#, no-wrap
msgid "images/symbol-properties.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:954
msgid ""
"The symbol is now complete. Save it and move on to creating a footprint."
msgstr "符号现在已经完成。保存它并继续创建一个封装。"

#. type: Title ===
#: getting_started_in_kicad.adoc:955
#, no-wrap
msgid "Creating New Footprints"
msgstr "新建封装"

#. type: Plain text
#: getting_started_in_kicad.adoc:963
msgid ""
"Open the Footprint Editor and create a new project-specific footprint "
"library named `getting-started.pretty` (**File** -> **New Library...**). As "
"with symbol libraries, the new footprint library is added to the project "
"library table. With the new library selected in the Libraries pane, create a "
"new footprint (**File** -> **New Footprint...**). Set the name to "
"`Switch_Toggle_SPST_NKK_M2011S3A1x03` and the type to `Through hole`."
msgstr ""
"打开封装编辑器，创建一个新的工程专用封装库，命名为 `getting-started.pretty`"
"（**文件** -> **新建库...**）。和符号库一样，新的封装库被添加到工程库表中。"
"在 \"库\" 窗格中选择新的库，创建一个新的封装（**文件** -> **新建封装...**）。"
"设置名称为 `Switch_Toggle_SPST_NKK_M2011S3A1x03`，类型为 \"通孔\"。"

#. type: Title ====
#: getting_started_in_kicad.adoc:964
#, no-wrap
msgid "Footprint Pads"
msgstr "封装焊盘"

#. type: Plain text
#: getting_started_in_kicad.adoc:971
msgid ""
"The switch has two pins, numbered in the datasheet as 2 and 3, and spaced "
"4.7 mm apart. For ease of placement, adjust the grid to match the pad "
"spacing. Click **View** -> **Grid Properties...** and change the **User "
"Defined Grid** sizes to `4.7 mm`. Accept the dialog, then switch to the user "
"grid at the bottom of the **Grid:** dropdown in the top toolbar."
msgstr ""
"该开关有两个引脚，在数据手册中编号为 2 和 3，间隔为 4.7 mm。为了便于放置，调"
"整网格以配合焊盘的间距。点击 **视图** -> **网格属性...**，将 **用户定义的网格"
"** 尺寸改为 `4.7 mm`。接受该对话框，然后切换到顶部工具栏中 **网格：** 下拉菜"
"单的用户网格。"

#. type: Plain text
#: getting_started_in_kicad.adoc:977
msgid ""
"By convention, through-hole footprints have pin 1 located at (0,0) and are "
"oriented with pin 1 in the top left. The SPST version of this switch does "
"not have pin 1, so the footprint will leave (0,0) empty and place pads 2 and "
"3 at (0, 4.7 mm) and (0, 9.4 mm). Note that in KiCad's default coordinate "
"system, the positive Y-axis is oriented downwards."
msgstr ""
"按照惯例，通孔封装的引脚 1 位于(0,0)处，并以引脚 1 在左上方的方向排列。这个开"
"关的 SPST 版本没有引脚 1，所以封装会把 (0,0) 空出来，把焊盘 2 和 3 放在 (0, "
"4.7 mm) 和 (0, 9.4 mm) 处。请注意，在 KiCad 的默认坐标系中，正 Y 轴的方向是向"
"下的。"

#. type: Plain text
#: getting_started_in_kicad.adoc:986
msgid ""
"Use the **Add a pad** tool image:images/pad_24.png[] in the right toolbar to "
"place a pad one grid division below the origin, which is (0, 4.7 mm). Press "
"Escape to exit the pad tool, then double click on the pad to edit its "
"properties. Change the pad number to `2` and verify that the position is "
"correct. The switch pins are 1.17 mm x 0.8 mm, which gives a diagonal "
"(maximum pin dimension) of 1.42 mm. Therefore set the hole diameter to 1.42 "
"mm + 0.2 mm = `1.62 mm`, and the pad diameter to 1.62 mm + 2*0.15 mm = `1.92 "
"mm` to provide a sufficient annular ring."
msgstr ""
"使用右侧工具栏中的 **添加焊盘** 工具 image:images/pad_24.png[]，在原点下方的"
"一个网格划分上放置一个焊盘，即 (0, 4.7 mm)。按 Escape 键退出焊盘工具，然后双"
"击焊盘来编辑其属性。将焊盘编号改为 `2`，并验证其位置是否正确。开关的引脚是 "
"1.17 mm × 0.8 mm，这使得对角线（最大引脚尺寸）为 1.42 mm。因此，将通孔的直径"
"设置为 1.42 mm + 0.2 mm =`1.62 mm`，将焊盘直径设置为 1.62 mm + 2 * 0.15 mm "
"=`1.92 mm`，以提供足够的圆环形圈。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:987
#, no-wrap
msgid "pad properties"
msgstr "焊盘属性"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:987
#, no-wrap
msgid "images/pad-properties.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:992
msgid ""
"Now use the **Add a pad** tool again to place the other pad at (0, 9.4 mm).  "
"Notice that the pad number is automatically incremented and the properties "
"including pad size and hole size are copied from the previous pad."
msgstr ""
"现在再次使用 **添加焊盘** 工具，将另一个焊盘放在 (0, 9.4mm) 处。 注意，焊盘的"
"编号会自动递增，包括焊盘尺寸和通孔的大小在内的属性会从前一个焊盘上复制下来。"

#. type: Plain text
#: getting_started_in_kicad.adoc:999
msgid ""
"With both pads placed, the annular rings look slightly small. The switch "
"will be easier to solder and mechanically more robust if the annular rings "
"are made larger. Increase the annular ring thickness from 0.15 mm to 0.3 mm "
"by editing pad 2 and changing the pad size to 1.62 mm + 2*0.3 mm = `2.22 "
"mm`. Do not change the hole size. Note that the pad size field accepts "
"mathematical expressions, so `1.62+2*0.3` can be entered directly and will "
"evaluate to 2.22 mm."
msgstr ""
"在放置了两个焊盘后，圆环形环看起来略小。如果将圆环形环做大，开关将更容易焊"
"接，机械上也更坚固。通过编辑焊盘 2 并将焊盘尺寸改为 1.62 mm + 2 * 0.3 mm = "
"`2.22 mm`，将圆环形环的厚度从 0.15 mm 增加到 0.3 mm。不要改变通孔的尺寸。请注"
"意，焊盘尺寸字段接受数学表达式，所以 `1.62 + 2 * 0.3` 可以直接输入，并将评估"
"为 2.22 mm。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1002
#, no-wrap
msgid ""
"Many text boxes in KiCad support mathematical expressions, including unit\n"
"     conversions.\n"
msgstr "KiCad 中的许多文本框支持数学表达，包括单位转换。\n"

#. type: Plain text
#: getting_started_in_kicad.adoc:1006
msgid ""
"Make the same annular ring modification to the other pad as well. As a "
"shortcut, right click on pad 2, click **Push Pad Properties to Other Pads..."
"**, and then click **Change Pads on Current Footprint**."
msgstr ""
"对另一个焊盘也做同样的圆环形圈修改。作为一个快捷方式，在焊盘 2 上点击右键，点"
"击 **将焊盘属性推到其它焊盘上...**，然后点击 **改变当前封装上的焊盘**。"

#. type: Title ====
#: getting_started_in_kicad.adoc:1007
#, no-wrap
msgid "Footprint Graphics"
msgstr "封装图形"

#. type: Plain text
#: getting_started_in_kicad.adoc:1012
msgid ""
"A good footprint will have the exact part outline drawn on the fabrication "
"layer (`F.Fab`), a slightly larger outline on the silkscreen layer (`F."
"Silkscreen`), and a courtyard (`F.Courtyard`) surrounding the entire "
"footprint to prevent overlaps with other footprints."
msgstr ""
"一个好的封装会在制造层（`F.Fab`）上画出准确的元件边框，在丝印层（`F."
"Silkscreen`）上画出稍大的边框，并在整个封装周围有一个边框（`F.Courtyard`）以"
"防止与其他封装重叠。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1020
msgid ""
"Switch to the front fabrication layer by clicking **F.Fab** in the Layers "
"panel at right. The fabrication outline should precisely match the physical "
"dimensions of the part, which is 7.9 mm wide and 13 mm tall. Use the line "
"image:images/add_line_24.png[], rectangle image:images/add_rectangle_24."
"png[], or polygon image:images/add_graphical_polygon_24.png[] tools to draw "
"the outline of the part as shown in the screenshot below. One way to "
"precisely place the outline is to set the user grid as follows:"
msgstr ""
"通过点击右边的图层面板中的 **F.Fab** 切换到顶层的制造层。制造的边框应该与元件"
"的物理尺寸精确匹配，即 7.9 mm 宽，13 mm 高。使用直线 image:images/"
"add_line_24.png[], 矩形 image:images/add_rectangle_24.png[], 或多边形 image:"
"images/add_graphical_polygon_24.png[] 工具来绘制元件的边框，如下截图所示。精"
"确放置边框的一个方法是设置用户网格，如下所示:"

#. type: Plain text
#: getting_started_in_kicad.adoc:1022
msgid "X grid: `7.9 mm`"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1023
msgid "Y grid: `13 mm`"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1024
msgid "X origin: 7.9 mm / 2 = `3.95 mm`"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1025
msgid "Y origin: 4.7 mm - (13 mm / 2) = `-1.8 mm`"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1026
#, no-wrap
msgid "fab outline coordinates"
msgstr "制造边框坐标"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1026
#, no-wrap
msgid "images/fab-outline.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1033
msgid ""
"Next, switch to the `F.Silkscreen` layer. The silkscreen outline should be "
"just outside of the part outline, so the silkscreen lines are moved outwards "
"from the fabrication drawing by 0.11 mm (half of 0.10 mm fab line width, "
"plus half of the 0.12 mm silkscreen line width). The exact coordinates are "
"shown in the screenshot below, and helpful grid settings are:"
msgstr ""
"接下来，切换到 `F.Silkscreen` 层。丝网的边框应该正好在元件边框之外，所以丝网"
"线要从制造图中向外移动 0.11 mm（0.10 mm 制造线宽度的一半，加上 0.12 mm 丝网线"
"宽度的一半）。准确的坐标显示在下面的截图中，有用的网格设置是:"

#. type: Plain text
#: getting_started_in_kicad.adoc:1035
msgid "X grid: 7.9 mm + 2 * 0.11 mm = `8.12 mm`"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1036
msgid "Y grid: 13 mm + 2 * 0.11 mm = `13.22 mm`"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1037
msgid "X origin: 8.12 mm / 2 = `4.06 mm`"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1038
msgid "Y origin: -1.8 mm - 0.11 mm = `-1.91 mm`"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1039
#, no-wrap
msgid "silk outline coordinates"
msgstr "丝印边框坐标"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1039
#, no-wrap
msgid "images/silk-outline.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1043
msgid ""
"Finally, select the `F.Courtyard` layer. The courtyard outline should "
"surround the part with a 0.25 mm clearance."
msgstr ""
"最后，选择 `F.Courtyard` 层。边框的边框应该以 0.25 mm 的间隙围绕着这个元件。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1048
msgid ""
"Use a different strategy to draw this layer. Switch to a 1mm grid instead of "
"the User grid, and draw a rectangle roughly surrounding the footprint. "
"Double click on the rectangle to edit its properties, and enter the corner "
"coordinates of the rectangle directly -- they are shown in the screenshot "
"below."
msgstr ""
"使用不同的策略来绘制这个图层。切换到 1 mm 的网格，而不是用户网格，并画一个大"
"致围绕封装的矩形。双击矩形来编辑其属性，并直接输入矩形的角坐标--它们显示在下"
"面的截图中。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1049
#, no-wrap
msgid "courtyard outline coordinates"
msgstr "边框坐标"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1049
#, no-wrap
msgid "images/courtyard-outline.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1053
msgid ""
"After completing the outlines, position the text as shown below. The "
"footprint is complete."
msgstr "完成边框后，将文字定位如下图所示。封装就完成了。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1054
#, no-wrap
msgid "completed switch footprint"
msgstr "完成的开关封装"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1054
#, no-wrap
msgid "images/switch-footprint.png"
msgstr ""

#. type: Title ====
#: getting_started_in_kicad.adoc:1056
#, no-wrap
msgid "Kicad Library Conventions"
msgstr "Kicad 库公约"

#. type: Plain text
#: getting_started_in_kicad.adoc:1065
msgid ""
"To maintain high-quality symbol and footprint libraries, KiCad has a https://"
"klc.kicad.org/[KiCad Library Conventions] document, which is a set of "
"guidelines for symbols and footprints. It is not necessary to follow these "
"conventions for personal libraries, but they are a good starting point.  "
"Footprints and symbols in the https://gitlab.com/kicad/libraries[official "
"library] are required to follow KLC. KLC is used as a basis for the symbol "
"and footprint in this guide."
msgstr ""
"为了维护高质量的符号和封装库，KiCad 有一个 https://klc.kicad.org/[KiCad 库公"
"约] 文件，这是一套符号和封装的准则。个人库不一定要遵循这些约定，但它们是一个"
"很好的出发点。 https://gitlab.com/kicad/libraries[官方库] 中的封装和符号都需"
"要遵循 KLC。KLC 被用作本指南中的符号和封装的基础。"

#. type: Title ====
#: getting_started_in_kicad.adoc:1066
#, no-wrap
msgid "Add Switch to Schematic"
msgstr "在原理图中添加开关"

#. type: Plain text
#: getting_started_in_kicad.adoc:1071
msgid ""
"Now that the footprint is complete, the switch symbol can be modified so "
"that the matching footprint is used for it by default."
msgstr "现在，封装已经完成，可以修改开关符号，以便默认为其使用匹配的封装。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1076
msgid ""
"Go back to the symbol editor and open the switch symbol. Edit the Symbol "
"Properties. Click in the `Footprint` field, then click the library book icon "
"image:images/small_library_16.png[] that appears. Browse to the project "
"footprint library and double click on the switch footprint. Save the symbol."
msgstr ""
"回到符号编辑器中，打开开关符号。编辑符号属性。点击 `封装` 字段，然后点击出现"
"的库图标 image:images/small_library_16.png[] 。浏览到工程封装库，双击开关封"
"装。保存该符号。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1079
msgid ""
"The switch footprint is now assigned to this symbol by default; the "
"footprint does not need to be manually selected each time the symbol is "
"added to a schematic."
msgstr ""
"现在，开关封装被默认分配给该符号；每次将该符号添加到原理图中时，都不需要手动"
"选择封装。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1080
#, no-wrap
msgid "switch footprint set as default for symbol"
msgstr "开关封装设置为符号的默认值"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1080 getting_started_in_kicad.adoc:1127
#, no-wrap
msgid "images/switch-symbol-footprint.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1084
msgid ""
"Open the schematic, add a new symbol, and select the new switch symbol. Wire "
"it to connect or disconnect the LED and the battery."
msgstr ""
"打开原理图，添加一个新符号，并选择新的开关符号。给它接线以连接或断开 LED 和电"
"池。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1089
msgid ""
"Reannotate the schematic to set the switch's reference designator to `SW1`. "
"It isn't necessary to manually choose a footprint for the switch, because "
"the switch symbol already specifies a footprint. Run ERC to make sure that "
"the modified schematic doesn't violate any electrical rules."
msgstr ""
"重新批注原理图，将开关的位号设为 `SW1`。没有必要为开关手动选择一个封装，因为"
"开关符号已经指定了一个封装。运行 ERC 以确保修改后的原理图不违反任何电气规则。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1090
#, no-wrap
msgid "schematic edited to include switch"
msgstr "编辑了原理图以包括开关"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1090
#, no-wrap
msgid "images/schematic-with-switch.png"
msgstr ""

#. type: Title ====
#: getting_started_in_kicad.adoc:1092
#, no-wrap
msgid "Add Switch to Layout"
msgstr "在布局中添加开关"

#. type: Plain text
#: getting_started_in_kicad.adoc:1098
msgid ""
"Make sure the schematic is saved, then open the Board Editor to add the "
"symbol to the layout. Update the PCB with the schematic changes using "
"**Tools** -> **Update PCB from Schematic...** and place the switch footprint "
"onto the board as shown."
msgstr ""
"确保原理图被保存，然后打开电路板编辑器，将符号添加到布局中。使用 **工具** -> "
"**从原理图更新 PCB...** 更新 PCB，并将开关的封装放到电路板上，如图所示。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1099 getting_started_in_kicad.adoc:1115
#, no-wrap
msgid "board with switch added, before routing"
msgstr "添加了开关的板子，在布线之前"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1099
#, no-wrap
msgid "images/board-with-switch-unrouted.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1103
msgid ""
"The ratsnest shows the new connections that need to be routed. Additionally, "
"the connection between the battery and the resistor needs to be deleted."
msgstr "飞线显示了需要布线的新连接。此外，电池和电阻之间的连接也需要删除。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1108
msgid ""
"First, delete the unneeded traces. Select one of the traces between the the "
"battery and the resistor -- it doesn't matter which. Press kbd:[U] several "
"times to expand the selection to include all the segments between the "
"battery and resistor. Press kbd:[Delete] to remove the connection."
msgstr ""
"首先，删除不需要的布线段。选择电池和电阻之间的一条布线 -- 哪条线并不重要。按 "
"kbd:[U] 几次，扩大选择范围，包括电池和电阻之间的所有布线段。按 kbd:[Delete] "
"来删除连接。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1111
msgid ""
"Route the new traces between the battery and the switch, and between the "
"switch and the resistor. Press kbd:[B] to refill the zones."
msgstr ""
"在电池和开关之间，以及开关和电阻之间布局新的导线。按 kbd:[B] 键，重新填充各敷"
"铜。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1114
msgid ""
"Finally, re-run DRC to make sure the modified board doesn't violate any "
"design rules."
msgstr "最后，重新运行 DRC 以确保修改后的电路板不违反任何设计规则。"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1115
#, no-wrap
msgid "images/board-with-switch-routed.png"
msgstr ""

#. type: Title ===
#: getting_started_in_kicad.adoc:1118
#, no-wrap
msgid "Linking Symbols, Footprints, and 3D Models"
msgstr "链接符号、封装和 3D 模型"

#. type: Title ====
#: getting_started_in_kicad.adoc:1120
#, no-wrap
msgid "Symbols and Footprints"
msgstr "符号和封装"

#. type: Plain text
#: getting_started_in_kicad.adoc:1126
msgid ""
"As described in <<footprint-assignment,the footprint assignment section>>, "
"each symbol in the schematic needs to have a footprint assigned to it during "
"the schematic entry process. The name of the footprint assigned to each "
"symbol is stored in the `Footprint` field of the symbol's properties."
msgstr ""
"正如《封装分配，封装分配部分》中所述，在原理图输入过程中，原理图中的每个符号"
"都需要为其分配一个封装。分配给每个符号的封装名称被存储在符号属性的 `封装` 字"
"段中。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1127
#, no-wrap
msgid "footprint field in symbol properties"
msgstr "符号属性中的封装字段"

#. type: Plain text
#: getting_started_in_kicad.adoc:1136
msgid ""
"Symbols can specify a preselected footprint. Footprints do not need to be "
"manually assigned to such symbols, because a footprint was chosen when the "
"symbol was created. Users can override the preselected footprint during the "
"footprint assignment process as normal. Defining a default footprint is a "
"good idea for symbols that will usually or always have the same footprint "
"assigned to it, for example a component which is only available in one "
"package. The switch footprint <<default-footprint,was set as the default for "
"its matching symbol.>>"
msgstr ""
"符号可以指定一个预选的封装。封装不需要手动分配给这些符号，因为在创建符号的时"
"候就已经选择了一个封装。用户可以在封装分配过程中正常覆盖预选的封装。定义一个"
"默认的封装对于那些通常或总是被分配相同封装的符号来说是个好主意，例如一个只在"
"一个包中可用的元件。开关封装《默认封装，被设置为其匹配符号的默认封装》"

#. type: Plain text
#: getting_started_in_kicad.adoc:1141
msgid ""
"Symbols can also specify footprint filters, which can be used to hide "
"footprints that are incompatible with the symbol. For example, the `74HC00` "
"symbol has footprint filters that result in only the applicable DIP and SO14 "
"footprints being displayed in the <<footprint-filters,assign footprints "
"tool>>."
msgstr ""
"符号也可以指定封装筛选器，可以用来隐藏与符号不兼容的封装。例如，`74HC00` 符号"
"有封装过滤器，导致只有适用的 DIP 和 SO14 封装显示在《封装筛选器，分配封装工"
"具》中。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1142
#, no-wrap
msgid "footprint filters for 74HC00"
msgstr "用于 74HC00 的封装筛选器"

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1142
#, no-wrap
msgid "images/footprint-filters.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1146
msgid ""
"The https://klc.kicad.org/symbol/s5/s5.2/[KLC requirements for footprint "
"filters] contain some useful tips for effective footprint filters."
msgstr ""
"这个 https://klc.kicad.org/symbol/s5/s5.2/[KLC 对封装筛选器的要求] 包含一些有"
"效的封装筛选器的提示。"

#. type: Title ====
#: getting_started_in_kicad.adoc:1148
#, no-wrap
msgid "Footprints and 3D Models"
msgstr "封装和 3D 模型"

#. type: Plain text
#: getting_started_in_kicad.adoc:1155
msgid ""
"3D models for components are stored in separate files. Filenames for the "
"component's 3D model(s) are saved in the footprint. Any number of 3D models "
"can be added to each footprint. 3D model filenames, along with model scale, "
"rotation, offset, and opacity, are set in the **3D Models** tab of the "
"Footprint Properties."
msgstr ""
"元件的 3D 模型被保存在单独的文件中。元件的 3D 模型的文件名被保存在封装中。每"
"个封装可以添加任何数量的 3D 模型。3D 模型的文件名，以及模型的比例、旋转、偏移"
"和不透明度，都在 \"封装属性\" 的 **3D 模型** 标签中设置。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: getting_started_in_kicad.adoc:1156
#, no-wrap
msgid "footprint 3D model properties"
msgstr ""

#. type: Target for macro image
#: getting_started_in_kicad.adoc:1156
#, no-wrap
msgid "images/footprint-3d-model.png"
msgstr ""

#. type: Plain text
#: getting_started_in_kicad.adoc:1165
msgid ""
"Both STEP (`.step`) and VRML (`.wrl`) 3D model formats are supported. STEP "
"files are useful where dimensional accuracy is needed, while VRML files can "
"be used for more visually attractive renders. Many footprints in KiCad's "
"library have associated 3D models; these models are provided in both VRML "
"and STEP formats.  Only one of the two models needs to be listed in the "
"footprint (typically the VRML filename is given). KiCad can automatically "
"substitute the STEP version when exporting a 3D model of the board for "
"mechanical CAD purposes."
msgstr ""
"支持 STEP（`.step`）和 VRML（`.wrl`）两种 3D 模型格式。STEP 文件在需要尺寸精"
"度的情况下非常有用，而 VRML 文件可以用来制作更具视觉吸引力的渲染图。KiCad 库"
"中的许多封装都有相关的 3D 模型；这些模型都以 VRML 和 STEP 格式提供。 两种模型"
"中只有一种需要在封装中列出（通常是给出 VRML 文件名）。在为机械 CAD 目的导出电"
"路板的 3D 模型时，KiCad 可以自动替换 STEP 版本。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1170
msgid ""
"Not all footprints in KiCad's library are provided with 3D models, but all "
"footprints list a 3D model filename even if the 3D model does not exist. "
"This is so 3D models can be added at a later date without needing to edit "
"the footprint."
msgstr ""
"并非所有 KiCad 库中的封装都提供了 3D 模型，但所有封装都列出了 3D 模型的文件"
"名，即使 3D 模型不存在。这样做是为了以后可以添加 3D 模型，而不需要编辑封装。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1176
msgid ""
"https://www.freecadweb.org/[FreeCAD] together with the https://github.com/"
"easyw/kicadStepUpMod/[StepUp Workbench] are useful for creating component 3D "
"models; they are used for many of the models in KiCad's library. StepUp is "
"used to generate STEP and VRML files with correct placement, scaling, and "
"rotation."
msgstr ""
"https://www.freecadweb.org/[FreeCAD] 与 https://github.com/easyw/"
"kicadStepUpMod/[StepUp Workbench] 一起对创建元件式 3D 模型很有用；KiCad 库中"
"的许多模型都使用了它们。StepUp 用于生成具有正确位置、缩放和旋转的 STEP 和 "
"VRML 文件。"

#. type: Title ==
#: getting_started_in_kicad.adoc:1177
#, no-wrap
msgid "Where To Go From Here"
msgstr "今后的发展方向"

#. type: Title ===
#: getting_started_in_kicad.adoc:1179
#, no-wrap
msgid "More Learning Resources"
msgstr "更多学习资源"

#. type: Plain text
#: getting_started_in_kicad.adoc:1182
msgid ""
"For more information on how to use KiCad, see the https://docs.kicad.org/"
"[manual]."
msgstr "关于如何使用 KiCad 的更多信息，请参阅 https://docs.kicad.org/[手册]。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1188
msgid ""
"Other resources include the https://forum.kicad.info/[official KiCad user "
"forum], https://www.kicad.org/community/chat/[Discord or IRC], and "
"additional https://www.kicad.org/help/learning-resources/[learning "
"resources] from the KiCad community."
msgstr ""
"其他资源包括 https://forum.kicad.info/[KiCad 官方用户论坛]，https://www."
"kicad.org/community/chat/[Discord 或 IRC]，以及来自 KiCad 社区的其他 https://"
"www.kicad.org/help/learning-resources/[学习资源]。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1193
msgid ""
"To see more of what's possible with KiCad, browse the https://www.kicad.org/"
"made-with-kicad/[Made With KiCad] section of the website, or open the demo "
"projects included with KiCad (**File** -> **Open Demo Project...**)."
msgstr ""
"要想了解 KiCad 的更多功能，请浏览网站的 https://www.kicad.org/made-with-"
"kicad/[用 KiCad 设计] 部分，或打开 KiCad 附带的演示工程（**文件** -> **打开演"
"示工程...**）。"

#. type: Title ===
#: getting_started_in_kicad.adoc:1194
#, no-wrap
msgid "Help Improve KiCad"
msgstr "帮助改进 KiCad"

#. type: Plain text
#: getting_started_in_kicad.adoc:1198
msgid ""
"To report a bug or request a feature, please use **Help** -> **Report a "
"Bug** or open an issue on https://gitlab.com/kicad/code/kicad/-/"
"issues[Gitlab]."
msgstr ""
"要报告一个错误或要求一个功能，请使用 **帮助** -> **报告一个错误** 或在 "
"https://gitlab.com/kicad/code/kicad/-/issues[Gitlab] 上打开一个问题。"

#. type: Plain text
#: getting_started_in_kicad.adoc:1206
msgid ""
"To contribute to KiCad's development, please see the https://dev-docs.kicad."
"org/en/contribute/[Developer Contribution page]. Users can also help by "
"contributing to the https://www.kicad.org/libraries/contribute/[libraries] "
"or https://www.kicad.org/contribute/docs-team/[documentation and "
"translation].  Finally, consider https://www.kicad.org/donate/faq/"
"[financially supporting] continued development of KiCad."
msgstr ""
"要为 KiCad 的发展做出贡献，请参见 https://dev-docs.kicad.org/en/contribute/"
"[开发者贡献页面]。用户也可以通过为 https://www.kicad.org/libraries/"
"contribute/[库] 或 https://www.kicad.org/contribute/docs-team/[文档和翻译] 提"
"供帮助。 最后，请考虑 https://www.kicad.org/donate/faq/[捐赠支持] 继续开发 "
"KiCad。"

#, no-wrap
#~ msgid "Overview"
#~ msgstr "概述"

#~ msgid ""
#~ "The typical KiCad workflow is comprised of two main tasks: drawing the "
#~ "schematic and laying out the board. Both a schematic component library "
#~ "and a PCB footprint library are necessary for these two tasks. KiCad "
#~ "includes many components and footprints, and also has the tools to create "
#~ "new ones."
#~ msgstr ""
#~ "典型的 KiCad 工作流程由两项主要任务组成：绘制原理图和布局电路板。这两项任"
#~ "务都需要一个原理图元件库和一个 PCB 封装库。KiCad 包括许多元件和封装，也有"
#~ "创建新元件和封装的工具。"

#~ msgid ""
#~ "In the picture below, you see a flowchart representing the KiCad "
#~ "workflow. The flowchart explains which steps you need to take, and in "
#~ "which order. When applicable, the icon is added for convenience."
#~ msgstr ""
#~ "在下图中，你可以看到一个代表 KiCad 工作流程的流程图。流程图解释了你需要采"
#~ "取哪些步骤，以及按什么顺序进行。在适用的情况下，为了方便起见，还添加了图"
#~ "标。"

#, no-wrap
#~ msgid "KiCad Flowchart"
#~ msgstr "KiCad 流程图"

#~ msgid ""
#~ "For more information about creating a component, read <<make-schematic-"
#~ "symbols-in-kicad,Making schematic symbols>>.  And for information about "
#~ "how to create a new footprint, see <<make-component-footprints,Making "
#~ "component footprints>>."
#~ msgstr ""
#~ "有关创建元件的详细信息, 请阅读 《make-schematic-symbols-in-kicad,Making "
#~ "schematic symbols 》。 有关如何创建新封装的信息, 请参阅 《 make-component-"
#~ "footprints,Making component footprints 》。"

#, no-wrap
#~ msgid "Forward and backward annotation"
#~ msgstr "向前和向后批注"

#~ msgid ""
#~ "Once an electronic schematic has been fully drawn, the next step is to "
#~ "transfer it to a PCB. Often, additional components might need to be "
#~ "added, parts changed to a different size, net renamed, etc. This can be "
#~ "done in two ways: Forward Annotation or Backward Annotation."
#~ msgstr ""
#~ "完成电子原理图绘制后，下一步就是将其传输到 PCB。 通常，可能需要添加其他元"
#~ "件，将部件更改为不同的大小，进行网络重命名等。这可以通过两种方式完成：向前"
#~ "批注或向后批注。"

#~ msgid ""
#~ "Forward Annotation is the process of sending schematic information to a "
#~ "corresponding PCB layout. This is a fundamental feature because you must "
#~ "do it at least once to initially import the schematic into the PCB.  "
#~ "Afterwards, forward annotation allows sending incremental schematic "
#~ "changes to the PCB. Details about Forward Annotation are discussed in the "
#~ "section <<forward-annotation-in-kicad,Forward Annotation>>."
#~ msgstr ""
#~ "向前批注是将原理图信息发送到相应 PCB 布局的过程。 这是一个基本功能，因为您"
#~ "必须至少执行一次才能将原理图初始导入 PCB。 之后，向前批注允许向 PCB 发送增"
#~ "量原理图更改。 有关向前批注的详细信息，请参阅《 forward-annotation-in-"
#~ "kicad，Forward Annotation 》部分。"

#~ msgid ""
#~ "Backward Annotation is the process of sending a PCB layout change back to "
#~ "its corresponding schematic. Two common causes for Backward Annotation "
#~ "are gate swaps and pin swaps. In these situations, there are gates or "
#~ "pins which are functionally equivalent, but it may only be during layout "
#~ "that there is a strong case for choosing the exact gate or pin. Once the "
#~ "choice is made in the PCB, this change is then pushed back to the "
#~ "schematic."
#~ msgstr ""
#~ "向后批注是将 PCB 布局更改发送回其相应原理图的过程。 向后批注的两个常见原因"
#~ "是门交换和引脚交换。 在这些情况下，存在功能相同的门或引脚，但可能仅在布局"
#~ "期间存在选择精确栅极或引脚的强有力的情况。 一旦在 PCB 中做出选择，则该更改"
#~ "将被推回原理图。"

#, no-wrap
#~ msgid "Using KiCad"
#~ msgstr "使用 KiCad"

#, no-wrap
#~ msgid "Shortcut keys"
#~ msgstr "快捷键"

#~ msgid ""
#~ "KiCad has two kinds of related but different shortcut keys: accelerator "
#~ "keys and hotkeys. Both are used to speed up working in KiCad by using the "
#~ "keyboard instead of the mouse to change commands."
#~ msgstr ""
#~ "KiCad 有两种相关但不同的快捷键: 快捷键(accelerator keys) 和热键(hotkeys)。"
#~ "两者都用于通过使用键盘而不是鼠标来执行命令以提高使用 KiCad 的生产效率。"

#, no-wrap
#~ msgid "Accelerator keys"
#~ msgstr "快捷键"

#~ msgid ""
#~ "Accelerator keys have the same effect as clicking on a menu or toolbar "
#~ "icon: the command will be entered but nothing will happen until the left "
#~ "mouse button is clicked. Use an accelerator key when you want to enter a "
#~ "command mode but do not want any immediate action."
#~ msgstr ""
#~ "快捷键的效果与单击菜单或工具栏图标的效果相同: 将输入该命令, 但在单击鼠标左"
#~ "键之前不会发生任何情况。如果要进入命令模式, 但不希望立即执行任何操作, 请使"
#~ "用快捷键。"

#~ msgid "Accelerator keys are shown on the right side of all menu panes:"
#~ msgstr "快捷键显示在所有菜单窗格的右侧:"

#, no-wrap
#~ msgid "images/gsik_accelerator_keys.png"
#~ msgstr "images/zh/gsik_accelerator_keys.png"

#, no-wrap
#~ msgid "Hotkeys"
#~ msgstr "快捷键"

#~ msgid ""
#~ "A hotkey is equal to an accelerator key plus a left mouse click. Using a "
#~ "hotkey starts the command immediately at the current cursor location. Use "
#~ "a hotkey to quickly change commands without interrupting your workflow."
#~ msgstr ""
#~ "热键等于加速器键加上鼠标左键单击。使用热键会立即在当前光标位置启动该命令。"
#~ "使用热键可以在不中断工作流的情况下快速更改命令。"

#~ msgid ""
#~ "To view hotkeys within any KiCad tool go to *_Help -> List Hotkeys_* or "
#~ "press Ctrl+F1:"
#~ msgstr ""
#~ "要查看任何 KiCad 工具中的热键，请转到 *_ 帮助 -> 列出热键 _* 或按 _Ctrl+ "
#~ "F1_："

#~ msgid ""
#~ "You can edit the assignment of hotkeys, and import or export them, from "
#~ "the *_Preferences -> Hotkeys Options_* menu."
#~ msgstr ""
#~ "您可以从 *_偏好设置 -> 热键选项_* 菜单编辑热键的分配，并导入或导出它们。"

#~ msgid ""
#~ "In this document, hotkeys are expressed with brackets like this: [a].  If "
#~ "you see [a], just type the \"a\" key on the keyboard."
#~ msgstr ""
#~ "在本文档中，热键用括号表示，如下所示：[a]。 如果看到 [a]，只需在键盘上键"
#~ "入 _a_ 键即可。"

#~ msgid "Consider the simple example of adding a wire in a schematic."
#~ msgstr "考虑在原理图中添加走线的简单示例。"

#~ msgid ""
#~ "To use an accelerator key, press \"Shift + W\" to invoke the \"Add wire\" "
#~ "command (note the cursor will change). Next, left click on the desired "
#~ "wire start location to begin drawing the wire."
#~ msgstr ""
#~ "要使用快捷键, 请按 _Shift + W_ 调用 _添加导线_ 命令 (请注意光标将会更改)。"
#~ "接下来, 左键单击所需的导线开始位置, 开始绘制导线。"

#~ msgid ""
#~ "With a hotkey, simply press [w] and the wire will immediately start from "
#~ "the current cursor location."
#~ msgstr "使用热键，只需按 [w]，线将立即从当前光标位置开始。"

#, no-wrap
#~ msgid "Draw electronic schematics"
#~ msgstr "绘制电路原理图"

#~ msgid ""
#~ "In this section we are going to learn how to draw an electronic schematic "
#~ "using KiCad."
#~ msgstr "在本节中, 我们将学习如何使用 KiCad 绘制电路原理图。"

#, no-wrap
#~ msgid "Using Eeschema"
#~ msgstr "使用 Eeschema"

#~ msgid ""
#~ "Under Windows run kicad.exe. Under Linux type 'kicad' in your Terminal. "
#~ "You are now in the main window of the KiCad project manager.  From here "
#~ "you have access to eight stand-alone software tools: __Eeschema__, "
#~ "__Schematic Library Editor__, __Pcbnew__, __PCB Footprint Editor__, "
#~ "__GerbView__, __Bitmap2Component__, __PCB Calculator__ and __Pl Editor__. "
#~ "Refer to the work-flow chart to give you an idea how the main tools are "
#~ "used."
#~ msgstr ""
#~ "在 Windows 下运行 kicad.exe。 在 Linux 下，在终端中键入 _kicad_。 您现在位"
#~ "于 KiCad 工程管理器的主窗口中。 从这里您可以访问八个独立的软件工具："
#~ "__Eeschema__， __原理图库编辑器__，__Pcbnew__，__PCB 封装编辑器__，"
#~ "__Pcbnew__，__GerbView__，__Bitmap2Component__，__PCB 计算器__ 和 __Pl 编"
#~ "辑器__。请参阅工作流程图，了解如何使用主要工具。"

#, no-wrap
#~ msgid "KiCad Main Window"
#~ msgstr "KiCad 主窗口"

#, no-wrap
#~ msgid "images/kicad_main_window.png"
#~ msgstr "images/zh/kicad_main_window.png"

#~ msgid ""
#~ "Create a new project: *File* -> **New** -> **Project**.  Name the project "
#~ "file 'tutorial1'. The project file will automatically take the extension "
#~ "\".pro\". The exact appearance of the dialog depends on the used "
#~ "platform, but there should be a checkbox for creating a new directory. "
#~ "Let it stay checked unless you already have a dedicated directory.  All "
#~ "your project files will be saved there."
#~ msgstr ""
#~ "创建一个新工程： *文件* -> **新建** -> **工程**。 将工程文件命名为 _教程"
#~ "1_。 工程文件将自动采用扩展名 _.pro_。 对话框的确切外观取决于使用的平台，"
#~ "但应该有一个用于创建新目录的复选框。 除非您已有专用目录，否则请保持检查状"
#~ "态。 您的所有工程文件都将保存在那里。"

#~ msgid ""
#~ "Let's begin by creating a schematic. Start the schematic editor "
#~ "__Eeschema__, image:images/icons/eeschema.png[Eeschema]. It is the first "
#~ "button from the left."
#~ msgstr ""
#~ "从创建原理图开始。开始原理图编辑器 _ eeschema _, image:images/icons/"
#~ "eeschema.png[Eeschema]。它是左边的第一个按钮。"

#~ msgid ""
#~ "Click on the 'Page Settings' icon image:images/icons/sheetset.png[Sheet "
#~ "settings icon] on the top toolbar. Set the appropriate 'paper "
#~ "size' ('A4','8.5x11' etc.)  and enter the Title as 'Tutorial1'.  You will "
#~ "see that more information can be entered here if necessary. Click OK. "
#~ "This information will populate the schematic sheet at the bottom right "
#~ "corner. Use the mouse wheel to zoom in.  Save the whole schematic: *File* "
#~ "-> **Save**"
#~ msgstr ""
#~ "单击顶部工具栏上的 _页面设置_ 图标 image:images/icons/sheetset.png[Sheet "
#~ "settings icon]。 设置适当的 _纸张尺寸_（'A4'，'8.5x11'等）并输入标题为 _教"
#~ "程1_。 如有必要，您将在此处看到可以输入更多信息。 单击确定。 此信息将填充"
#~ "右下角的原理图表。 使用鼠标滚轮放大。保存整个原理图：*文件* - > **保存**"

#~ msgid ""
#~ "We will now place our first component. Click on the 'Place symbol' icon "
#~ "image:images/icons/add_component.png[Add component Icon] in the right "
#~ "toolbar. You may also press the 'Add Symbol' hotkey [a]."
#~ msgstr ""
#~ "我们现在将放置第一个元件。 单击右侧工具栏中的 _放置符号_ 图标 image:"
#~ "images/icons/add_component.png[Add component Icon]。 您也可以按 _添加符号"
#~ "_ 热键 [a]。"

#~ msgid ""
#~ "Click on the middle of your schematic sheet. A __Choose Symbol__ window "
#~ "will appear on the screen.  We're going to place a resistor. Search / "
#~ "filter on the 'R' of **R**esistor.  You may notice the 'Device' heading "
#~ "above the Resistor. This 'Device' heading is the name of the library "
#~ "where the component is located, which is quite a generic and useful "
#~ "library."
#~ msgstr ""
#~ "单击原理图工作表的中间部分。 屏幕上将出现 __选择符号__ 窗口。 我们要放一个"
#~ "电阻器。 搜索/过滤 **R** esistor的 _R_。 您可能会注意到电阻器上方的 _设备"
#~ "_ 标题。 此 _设备_ 标题是元件所在库的名称，这是一个非常通用且有用的库。"

#, no-wrap
#~ msgid "Choose Symbol"
#~ msgstr "选择符号"

#~ msgid ""
#~ "Double click on it. This will close the 'Choose Symbol' window.  Place "
#~ "the component in the schematic sheet by clicking where you want it to be."
#~ msgstr ""
#~ "双击它。这将关闭 _选择符号_ 窗口。 通过单击元件在原理图中的的位置将其放置"
#~ "在原理图中。"

#~ msgid ""
#~ "Click on the magnifier icon to zoom in on the component.  Alternatively, "
#~ "use the mouse wheel to zoom in and zoom out. Press the wheel (central)  "
#~ "mouse button to pan horizontally and vertically."
#~ msgstr ""
#~ "单击放大镜图标可放大元件。 也可以使用使用鼠标滚轮进行放大和缩小。按下滚轮 "
#~ "(中央) 鼠标按钮将可以水平和垂直平移。"

#~ msgid ""
#~ "Try to hover the mouse over the component 'R' and press [r]. The "
#~ "component should rotate. You do not need to actually click on the "
#~ "component to rotate it."
#~ msgstr ""
#~ "尝试将鼠标悬停在元件 _R_ 上, 然后按 [r]。元件应旋转。您不需要实际单击元件"
#~ "来旋转它。"

#~ msgid ""
#~ "Sometimes, if your mouse is also over something else, a menu will "
#~ "appear.  You will see the Clarify Selection menu often in KiCad; it "
#~ "allows working on objects that are on top of each other. In this case, "
#~ "tell KiCad you want to perform the action on the 'Symbol ...R...' if the "
#~ "menu appears."
#~ msgstr ""
#~ "有时，如果您的鼠标也在其他地方，则会出现一个菜单。 您将在 KiCad 中经常看到"
#~ "澄清选择菜单; 它允许处理彼此重叠的对象。 在这种情况下，如果出现菜单，请告"
#~ "诉 KiCad 您要对 _符号... R..._执行操作。"

#~ msgid ""
#~ "Right click in the middle of the component and select *Properties* -> "
#~ "**Edit Value**. You can achieve the same result by hovering over the "
#~ "component and pressing [v]. Alternatively, [e] will take you to the more "
#~ "general Properties window. Notice how the right-click menu below shows "
#~ "the hotkeys for all available actions."
#~ msgstr ""
#~ "右键单击元件的中间, 然后选择 *属性* > **编辑值**。您可以通过将鼠标悬停在元"
#~ "件上并按 [v] 来实现相同的结果。或者，按下[e] 将打开到更通用的 _属性_ 窗"
#~ "口。请注意, 下面的右键单击菜单显示所有可用操作的热键。"

#, no-wrap
#~ msgid "Edit component menu"
#~ msgstr "编辑元件菜单"

#, no-wrap
#~ msgid "images/edit_component_dropdown.png"
#~ msgstr "images/zh/edit_component_dropdown.png"

#~ msgid ""
#~ "The Edit Value Field window will appear. Replace the current value 'R' "
#~ "with '1 k'. Click OK."
#~ msgstr "将出现 _编辑值字段_ 窗口。 用 _1k_ 替换当前值 _R_。 单击确定。"

#~ msgid ""
#~ "Do not change the Reference field (R?), this will be done automatically "
#~ "later on. The value above the resistor should now be '1 k'."
#~ msgstr ""
#~ "不要更改参考字段（R?），稍后会自动完成。 电阻器上方的值现在应为 _1k_。"

#, no-wrap
#~ msgid "Resistor Value"
#~ msgstr "电阻值"

#~ msgid ""
#~ "To place another resistor, simply click where you want the resistor to "
#~ "appear. The symbol selection window will appear again."
#~ msgstr ""
#~ "要放置另一个电阻，只需单击要显示电阻的位置。 符号选择窗口将再次出现。"

#~ msgid ""
#~ "The resistor you previously chose is now in your history list, appearing "
#~ "as 'R'. Click OK and place the component."
#~ msgstr ""
#~ "您之前选择的电阻现在位于历史列表中，显示为 _R_。 单击 _确定_ 并放置元件。"

#, no-wrap
#~ msgid "Component history"
#~ msgstr "元件历史记录"

#~ msgid ""
#~ "In case you make a mistake and want to delete a component, right click on "
#~ "the component and click 'Delete'. This will remove the component from the "
#~ "schematic. Alternatively, you can hover over the component you want to "
#~ "delete and press [Delete]."
#~ msgstr ""
#~ "如果您想要删除一个元件, 右键单击该元件, 然后单击 \"删除\"。或者, 您可以将"
#~ "鼠标悬停在要删除的元件上, 然后按下键盘上的 [delete]键。"

#~ msgid ""
#~ "You can also duplicate a component already on your schematic sheet by "
#~ "hovering over it and pressing [c]. Click where you want to place the new "
#~ "duplicated component."
#~ msgstr ""
#~ "您还可以通过将鼠标悬停在原理图页上并按[C]来复制已经存在于原理图页上的元"
#~ "件。单击要放置新复制元件的位置。"

#~ msgid ""
#~ "Right click on the second resistor. Select 'Drag'.  Reposition the "
#~ "component and left click to drop. The same functionality can be achieved "
#~ "by hovering over the component and by pressing [g].  [r] will rotate the "
#~ "component while [x] and [y] will flip it about its x- or y-axis."
#~ msgstr ""
#~ "右键单击第二个电阻。 选择 _拖动_。 重新定位元件并左键单击以放下。 将鼠标悬"
#~ "停在元件上并按[g]可以实现相同的功能。 [r]将旋转元件，而[x]和[y]将围绕其x轴"
#~ "或y轴翻转。"

#, no-wrap
#~ msgid ""
#~ "*Right-Click* -> *Move* or [m] is also a valuable option\n"
#~ "for moving anything around, but it is better to use this only for component\n"
#~ "labels and components yet to be connected. We will see later on why this is the case.\n"
#~ msgstr ""
#~ "*右键单击* -> *移动*或[m]也是一个有价值的选项\n"
#~ "移动任何东西，但最好只将它用于元件\n"
#~ "标签和元件尚未连接。 我们稍后会看到为什么会这样。\n"
#~ "\n"

#~ msgid ""
#~ "Edit the second resistor by hovering over it and pressing [v]. Replace "
#~ "'R' with '100'. You can undo any of your editing actions with Ctrl+Z."
#~ msgstr ""
#~ "将鼠标悬停在第二个电阻上，然后按[V]键编辑该电阻。将 _R_ 替换为 _100_。可以"
#~ "使用 _Ctrl+Z_ 撤消任何编辑操作。"

#~ msgid ""
#~ "Change the grid size. You have probably noticed that on the schematic "
#~ "sheet all components are snapped onto a large pitch grid. You can easily "
#~ "change the size of the grid by *Right-Click* -> **Grid**.  __In general, "
#~ "it is recommended to use a grid of 50.0 mils for the schematic sheet__."
#~ msgstr ""
#~ "更改网格大小。 您可能已经注意到，在原理图表上，所有元件都被捕捉到大间距网"
#~ "格上。 您可以通过 *右键单击* -> **网格** 轻松更改网格的大小。 __通常，建议"
#~ "使用 50.0mils 的网格作为原理图表___。"

#~ msgid ""
#~ "We are going to add a component from a library that may not be configured "
#~ "in the default project. In the menu, choose *Preferences* -> **Manage "
#~ "Symbol Libraries**.  In the Symbol Libraries window you can see two tabs: "
#~ "Global Libraries and Project Specific Libraries. Each one has one sym-lib-"
#~ "table file. For a library (.lib file) to be available it must be in one "
#~ "of those sym-lib-table files.  If you have a library file in your file "
#~ "system and it's not yet available, you can add it to either one of the "
#~ "sym-lib-table files.  For practice we will now add a library which "
#~ "already is available."
#~ msgstr ""
#~ "我们将从库中添加一个可能未在默认工程中配置的元件。 在菜单中，选择 *偏好设"
#~ "置* -> **管理符号库** 。 在符号库窗口中，您可以看到两个选项卡：全局库和工"
#~ "程专有库。 每个都有一个符号表库文件。 要使库（.lib文件）可用，它必须位于其"
#~ "中一个符号表库文件中。 如果文件系统中有库文件但尚未提供，则可以将其添加到"
#~ "其中一个符号表库文件中。 为了练习，我们现在将添加一个已经可用的库。"

#~ msgid ""
#~ "Select the Project Specific table.  Click the file browser button below "
#~ "the table.  You need to find where the official KiCad libraries are "
#~ "installed on your computer. Look for a `library` directory containing a "
#~ "hundred of `.dcm` and `.lib` files. Try in `C:\\Program Files "
#~ "(x86)\\KiCad\\share\\` (Windows) and `/usr/share/kicad/library/` (Linux). "
#~ "When you have found the directory, choose and add the "
#~ "'MCU_Microchip_PIC12.lib' library and close the window.  It will be added "
#~ "to the end of of the list.  Now click its nickname and change it to "
#~ "'microchip_pic12mcu'.  Close the Symbol Libraries window with OK."
#~ msgstr ""
#~ "选择工程专用表。 单击表下方的文件浏览器按钮。 您需要找到计算机上安装官方 "
#~ "KiCad 库的位置。 查找包含一百个 _.dcm_ 和 _.lib_ 文件的 _库_目录。 试试 "
#~ "_C:\\Program Files (x86)\\KiCad\\share\\_ (Windows)和 _/usr/share/kicad/"
#~ "library/_ (Linux)。 找到目录后，选择并添加 _MCU_Microchip_PIC12.lib_ 库并"
#~ "关闭窗口。 它将添加到列表的末尾。 现在单击其昵称并将其更改为 "
#~ "_microchip_pic12mcu_。 单击确定关闭符号库窗口。"

#~ msgid ""
#~ "Repeat the add-component steps, however this time select the "
#~ "'microchip_pic12mcu' library instead of the 'Device' library and pick the "
#~ "'PIC12C508A-ISN' component."
#~ msgstr ""
#~ "重复添加元件步骤，但这次选择 _microchip_pic12mcu_ 库而不是 _设备_ 库并选"
#~ "择 _PIC12C508A-ISN_ 元件。"

#~ msgid ""
#~ "Hover the mouse over the microcontroller component. Notice that [x] and "
#~ "[y] again flip the component. Keep the symbol mirrored around the Y axis "
#~ "so that the pins G0 and G1 point to right."
#~ msgstr ""
#~ "将鼠标悬停在微控制器元件上。 请注意，[x] 和 [y] 再次翻转元件。 保持符号围"
#~ "绕 Y 轴镜像，使引脚 G0 和 G1 指向右侧。"

#~ msgid ""
#~ "Repeat the add-component steps, this time choosing the 'Device' library "
#~ "and picking the 'LED' component from it."
#~ msgstr "重复添加元件步骤，这次选择 _设备_ 库并从中选择 _LED_ 元件。"

#~ msgid "Organise all components on your schematic sheet as shown below."
#~ msgstr "组织原理图纸上的所有元件，如下所示。"

#, no-wrap
#~ msgid "gsik_tutorial1_010_png"
#~ msgstr "gsik_tutorial1_010_png"

#, no-wrap
#~ msgid "images/gsik_tutorial1_010.png"
#~ msgstr "images/gsik_tutorial1_010.png"

#~ msgid ""
#~ "We now need to create the schematic component 'MYCONN3' for our 3-pin "
#~ "connector. You can jump to the section titled <<make-schematic-symbols-in-"
#~ "kicad,Make Schematic Symbols in KiCad>> to learn how to make this "
#~ "component from scratch and then return to this section to continue with "
#~ "the board."
#~ msgstr ""
#~ "我们现在需要为我们的3针连接器创建原理图元件“MYCONN3”。 您可以跳转到标题"
#~ "为“make-schematic-symbols-in-kicad，在KiCad中制作原理图符号”的部分，了解如"
#~ "何从头开始制作该元件，然后返回本节继续使用该板。"

#~ msgid ""
#~ "You can now place the freshly made component. Press [a] and pick the "
#~ "'MYCONN3' component in the 'myLib' library."
#~ msgstr ""
#~ "您现在可以放置新制作的元件。 按 [a] 并选择 _myLib_ 库中的 _MYCONN3_ 元件。"

#~ msgid ""
#~ "The component identifier 'J?' will appear under the 'MYCONN3' label.  If "
#~ "you want to change its position, right click on 'J?' and click on 'Move "
#~ "Field' (equivalent to [m]). It might be helpful to zoom in before/while "
#~ "doing this. Reposition 'J?' under the component as shown below. Labels "
#~ "can be moved around as many times as you please."
#~ msgstr ""
#~ "元件标识符 _J?_ 将出现在 _MYCONN3_ 标签下。 如果要更改其位置，请右键单击 "
#~ "_J?_ 然后单击 _移动字段_（相当于[m]）。 在执行此操作之前/之后放大可能会有"
#~ "所帮助。 重新定位 _J?_ 在如下所示的元件下。 标签可以随意移动多次。"

#, no-wrap
#~ msgid "gsik_myconn3_s_png"
#~ msgstr "gsik_myconn3_s_png"

#, no-wrap
#~ msgid "images/gsik_myconn3_s.png"
#~ msgstr "images/gsik_myconn3_s.png"

#~ msgid ""
#~ "It is time to place the power and ground symbols. Click on the 'Place "
#~ "power port' button image:images/icons/add_power.png[add_power_png] on the "
#~ "right toolbar. Alternatively, press [p]. In the component selection "
#~ "window, scroll down and select 'VCC' from the 'power' library.  Click OK."
#~ msgstr ""
#~ "是时候放置电源和接地符号了。 单击右侧工具栏上的 _放置电源端口_ 按钮 image:"
#~ "images/icons/add_power.png[add_power_png]。 或者，按[p]。 在元件选择窗口"
#~ "中，向下滚动并从 _电源_ 库中选择 _VCC_。 单击确定。"

#~ msgid ""
#~ "Click above the pin of the 1 k resistor to place the VCC part. Click on "
#~ "the area above the microcontroller 'VDD'. In the 'Component Selection "
#~ "history' section select 'VCC' and place it next to the VDD pin. Repeat "
#~ "the add process again and place a VCC part above the VCC pin of "
#~ "'MYCONN3'. Move references and values out of the way if needed."
#~ msgstr ""
#~ "单击 1k 电阻的引脚上方以放置 VCC 部件。 单击微控制器 _VDD_ 上方的区域。 "
#~ "在 _元件选择历史记录_ 部分中，选择 _VCC_ 并将其放在 VDD 引脚旁边。 再次重"
#~ "复添加过程，并将 VCC 部分放在 _MYCONN3_ 的 VCC 引脚上方。 如果需要，可以移"
#~ "动引用和值。"

#~ msgid ""
#~ "Repeat the add-pin steps but this time select the GND part. Place a GND "
#~ "part under the GND pin of 'MYCONN3'. Place another GND symbol on the left "
#~ "of the VSS pin of the microcontroller. Your schematic should now look "
#~ "something like this:"
#~ msgstr ""
#~ "重复添加引脚步骤，但这次选择 GND 部分。 将 GND 部分放在 _MYCONN3_ 的 GND "
#~ "引脚下。 在微控制器的 VSS 引脚左侧放置另一个 GND 符号。 您的原理图现在应该"
#~ "如下所示："

#, no-wrap
#~ msgid "gsik_tutorial1_020_png"
#~ msgstr "gsik_tutorial1_020_png"

#, no-wrap
#~ msgid "images/gsik_tutorial1_020.png"
#~ msgstr "images/gsik_tutorial1_020.png"

#~ msgid ""
#~ "Next, we will wire all our components. Click on the 'Place wire' icon "
#~ "image:images/icons/add_line.png[Place wire] on the right toolbar."
#~ msgstr ""
#~ "接下来，我们将连接所有元件。 单击右侧工具栏上的 _放置电线_ 图标 image:"
#~ "images/icons/add_line.png[Place wire]。"

#~ msgid ""
#~ "Be careful not to pick 'Place bus', which appears directly beneath this "
#~ "button but has thicker lines. The section <<bus-connections-in-kicad,Bus "
#~ "Connections in KiCad>> will explain how to use a bus section."
#~ msgstr ""
#~ "小心不要选择 _放置总线_，它位于此按钮的正下方，但线条较粗。《bus-"
#~ "connections-in-kicad，KiCad 中的总线连接》部分将解释如何使用总线部分。"

#~ msgid ""
#~ "Click on the little circle at the end of pin 7 of the microcontroller and "
#~ "then click on the little circle on pin 1 of the LED.  Click once when you "
#~ "are drawing the wire to create a corner.  You can zoom in while you are "
#~ "placing the connection."
#~ msgstr ""
#~ "单击微控制器引脚7末端的小圆圈，然后单击 LED 引脚1上的小圆圈。 在绘制导线时"
#~ "单击一次以创建拐角。 您可以在放置连接时放大。"

#~ msgid ""
#~ "If you want to reposition wired components, it is important to use [g] "
#~ "(to grab) and not [m] (to move). Using grab will keep the wires "
#~ "connected. Review step 24 in case you have forgotten how to move a "
#~ "component."
#~ msgstr ""
#~ "如果要重新定位连线元件，重要的是使用[g]（抓取）而不是[m]（移动）。 使用抓"
#~ "取将保持电线连接。 如果您忘记了如何移动元件，请查看步骤 24。"

#, no-wrap
#~ msgid "gsik_tutorial1_030_png"
#~ msgstr "gsik_tutorial1_030_png"

#, no-wrap
#~ msgid "images/gsik_tutorial1_030.png"
#~ msgstr "images/gsik_tutorial1_030.png"

#~ msgid ""
#~ "Repeat this process and wire up all the other components as shown below. "
#~ "To terminate a wire just double-click. When wiring up the VCC and GND "
#~ "symbols, the wire should touch the bottom of the VCC symbol and the "
#~ "middle top of the GND symbol. See the screenshot below."
#~ msgstr ""
#~ "重复此过程并连接所有其他元件，如下所示。 要双击终止电线。 当连接 VCC 和 "
#~ "GND 符号时，导线应接触 VCC 符号的底部和 GND 符号的中间顶部。 请参见下面的"
#~ "截图。"

#, no-wrap
#~ msgid "gsik_tutorial1_040_png"
#~ msgstr "gsik_tutorial1_040_png"

#, no-wrap
#~ msgid "images/gsik_tutorial1_040.png"
#~ msgstr "images/gsik_tutorial1_040.png"

#~ msgid ""
#~ "We will now consider an alternative way of making a connection using "
#~ "labels. Pick a net labelling tool by clicking on the 'Place net label' "
#~ "icon image:images/icons/add_line_label.png[add_line_label_png] on the "
#~ "right toolbar. You can also use [l]."
#~ msgstr ""
#~ "我们现在将考虑使用标签建立连接的另一种方法。 通过单击右侧工具栏上的 _放置"
#~ "网络标签_ 图标 image:images/icons/add_line_label.png[add_line_label_png] "
#~ "来选择网络标签工具。 你也可以用 [l]。"

#~ msgid ""
#~ "Click in the middle of the wire connected to pin 6 of the "
#~ "microcontroller. Name this label 'INPUT'. The label is still an "
#~ "independent item which you can for example move, rotate and delete. The "
#~ "small anchor rectangle of the label must be exactly on a wire or a pin "
#~ "for the label to take effect."
#~ msgstr ""
#~ "单击连接到微控制器引脚6的导线中间。 将此标签命名为“INPUT”。 标签仍然是一个"
#~ "独立的工程，您可以移动，旋转和删除。 标签的小锚矩形必须正好在导线或引脚上"
#~ "才能使标签生效。"

#~ msgid ""
#~ "Follow the same procedure and place another label on line on the right of "
#~ "the 100 ohm resistor. Also name it 'INPUT'. The two labels, having the "
#~ "same name, create an invisible connection between pin 6 of the PIC and "
#~ "the 100 ohm resistor. This is a useful technique when connecting wires in "
#~ "a complex design where drawing the lines would make the whole schematic "
#~ "messier. To place a label you do not necessarily need a wire, you can "
#~ "simply attach the label to a pin."
#~ msgstr ""
#~ "遵循相同的顺序, 在100欧姆电阻器右侧的线上放置另一个标签，并同样命名"
#~ "为“INPUT\"。此时，存在两个标签具有相同的名称, 在 pic 的引脚6和100欧姆电阻"
#~ "之间会创建一个不可见的连接。在复杂的设计中连接走线时, 逐条绘制走线将使整个"
#~ "原理图变得混乱。此时，就可以使用标签连接 。要放置标签, 您不一定需要走线, "
#~ "您只需将同名的标签连接到引脚即可。"

#~ msgid ""
#~ "Labels can also be used to simply label wires for informative purposes. "
#~ "Place a label on pin 7 of the PIC. Enter the name 'uCtoLED'.  Name the "
#~ "wire between the resistor and the LED as 'LEDtoR'. Name the wire between "
#~ "'MYCONN3' and the resistor as 'INPUTtoR'."
#~ msgstr ""
#~ "标签也可用于简单地标记电线以用于提供信息。 在 PIC 的引脚7上放置一个标签。 "
#~ "输入名称 _uCtoLED_。 将电阻和 LED 之间的导线命名为 _LEDtoR_。 将 "
#~ "_MYCONN3_ 和电阻之间的导线命名为 _INPUTtoR_。"

#~ msgid ""
#~ "You do not have to label the VCC and GND lines because the labels are "
#~ "implied from the power objects they are connected to."
#~ msgstr ""
#~ "您不必标记 VCC 和 GND 线，因为标签是从它们所连接的电源对象中隐含的。"

#~ msgid "Below you can see what the final result should look like."
#~ msgstr "下面是最终的结果。"

#, no-wrap
#~ msgid "gsik_tutorial1_050_png"
#~ msgstr "gsik_tutorial1_050_png"

#, no-wrap
#~ msgid "images/gsik_tutorial1_050.png"
#~ msgstr "images/gsik_tutorial1_050.png"

#~ msgid ""
#~ "Let's now deal with unconnected wires. Any pin or wire that is not "
#~ "connected will generate a warning when checked by KiCad. To avoid these "
#~ "warnings you can either instruct the program that the unconnected wires "
#~ "are deliberate or manually flag each unconnected wire or pin as "
#~ "unconnected."
#~ msgstr ""
#~ "我们现在处理未连接的电线。 当 KiCad 检查时，任何未连接的引脚或电线都会产生"
#~ "警告。 为了避免这些警告，您可以指示程序未经连接的电线是故意的，也可以手动"
#~ "将每个未连接的电线或引脚标记为未连接。"

#~ msgid ""
#~ "Click on the 'Place no connection flag' icon image:images/icons/noconn."
#~ "png[noconn_png] on the right toolbar. Click on pins 2, 3, 4 and 5. An X "
#~ "will appear to signify that the lack of a wire connection is intentional."
#~ msgstr ""
#~ "单击右侧工具栏上的 _放置无连接标志_ 图标 image:images/icons/noconn."
#~ "png[noconn_png] 。 单击引脚2,3,4和5，X似乎表示缺少有线连接是故意的。"

#, no-wrap
#~ msgid "gsik_tutorial1_060_png"
#~ msgstr "gsik_tutorial1_060_png"

#, no-wrap
#~ msgid "images/gsik_tutorial1_060.png"
#~ msgstr "images/gsik_tutorial1_060.png"

#~ msgid ""
#~ "Some components have power pins that are invisible. You can make them "
#~ "visible by clicking on the 'Show hidden pins' icon image:images/icons/"
#~ "hidden_pin.png[hidden_pin_png] on the left toolbar. Hidden power pins get "
#~ "automatically connected if VCC and GND naming is respected. Generally "
#~ "speaking, you should try not to make hidden power pins."
#~ msgstr ""
#~ "某些元件具有不可见的电源引脚。 您可以通过单击左侧工具栏上的 _显示隐藏的引"
#~ "脚_ 图标 image:images/icons/hidden_pin.png[hidden_pin_png] 使其可见。 如果"
#~ "遵守 VCC 和 GND 命名，隐藏的电源引脚会自动连接。 一般来说，你应该尽量不要"
#~ "制作隐藏的电源引脚。"

#~ msgid ""
#~ "It is now necessary to add a 'Power Flag' to indicate to KiCad that power "
#~ "comes in from somewhere. Press [a] and search for 'PWR_FLAG' which is in "
#~ "'power' library. Place two of them.  Connect them to a GND pin and to VCC "
#~ "as shown below."
#~ msgstr ""
#~ "现在需要添加一个 _Power Flag_ 来向 KiCad 表明电源是从某个地方进来的。 按"
#~ "[a] 并搜索 _电源_ 库中的 _PWR_FLAG_。 放置其中两个。 将它们连接到 GND 引脚"
#~ "和 VCC，如下所示。"

#, no-wrap
#~ msgid "gsik_tutorial1_070_png"
#~ msgstr "gsik_tutorial1_070_png"

#, no-wrap
#~ msgid "images/gsik_tutorial1_070.png"
#~ msgstr "images/gsik_tutorial1_070.png"

#~ msgid ""
#~ "This will avoid the classic schematic checking warning: _Pin connected to "
#~ "some other pins but no pin to drive it_."
#~ msgstr ""
#~ "这将避免经典的原理图检查警告： _ 引脚连接到其他一些引脚但没有引脚来驱动"
#~ "它。"

#~ msgid ""
#~ "Sometimes it is good to write comments here and there. To add comments on "
#~ "the schematic use the 'Place text' icon image:images/icons/text."
#~ "png[text_png] on the right toolbar."
#~ msgstr ""
#~ "有时候在这里和那里写批注是件好事。 要在原理图上添加批注，请使用右侧工具栏"
#~ "上的 _放置文本_ 图标 image:images/icons/text.png[text_png] 。"

#~ msgid ""
#~ "All components now need to have unique identifiers. In fact, many of our "
#~ "components are still named 'R?' or 'J?'. Identifier assignation can be "
#~ "done automatically by clicking on the 'Annotate schematic symbols' icon "
#~ "image:images/icons/annotate.png[annotate_png] on the top toolbar."
#~ msgstr ""
#~ "现在，所有元件都需要具有唯一标识符。 事实上，我们的许多元件仍被命名为 _R?"
#~ "_ 还是 _J?_。 通过单击顶部工具栏上的 _批注原理图符号_ 图标 image:images/"
#~ "icons/annotate.png[annotate_png] ，可以自动完成标识符分配。"

#~ msgid ""
#~ "In the Annotate Schematic window, select 'Use the entire schematic' and "
#~ "click on the 'Annotate' button. Click 'Close'.  Notice how all the '?' "
#~ "have been replaced with numbers. Each identifier is now unique. In our "
#~ "example, they have been named 'R1', 'R2', 'U1', 'D1' and 'J1'."
#~ msgstr ""
#~ "在批注原理图窗口中，选择 _使用整个原理图_ 并单击 _批注_ 按钮。 点击 _关闭"
#~ "_。 注意所有 _?_ 已被数字取代。 每个标识符现在都是唯一的 在我们的例子中，"
#~ "它们被命名为 _R1_，_R2_，_U1_，_D1_ 和 _J1_。"

#~ msgid ""
#~ "We will now check our schematic for errors. Click on the 'Perform "
#~ "electrical rules check' icon image:images/icons/erc.png[erc_png] on the "
#~ "top toolbar. Click on the 'Run' button. A report informing you of any "
#~ "errors or warnings such as disconnected wires is generated. You should "
#~ "have 0 Errors and 0 Warnings. In case of errors or warnings, a small "
#~ "green arrow will appear on the schematic in the position where the error "
#~ "or the warning is located. Check 'Create ERC file report' and press the "
#~ "'Run' button again to receive more information about the errors."
#~ msgstr ""
#~ "我们现在将检查原理图的错误。 单击顶部工具栏上的 _执行电气规则检查_ 图标 "
#~ "image:images/icons/erc.png[erc_png] 。 单击 _运行_ 按钮。 生成一个报告，通"
#~ "知您任何错误或警告，例如断开的电线。 你应该有 0个错误 和 0个警告。 如果出"
#~ "现错误或警告，原理图中将出现一个小绿色箭头，指示错误或警告所在的位置。 选"
#~ "中 _创建ERC文件报告_ 并再次按 _运行_ 按钮以接收有关错误的更多信息。"

#~ msgid ""
#~ "If you have a warning with \"No default editor found, you must choose "
#~ "it\", try setting the path to `c:\\windows\\notepad.exe` (windows) or `/"
#~ "usr/bin/gedit` (Linux)."
#~ msgstr ""
#~ "如果您收到 _未找到默认编辑器，则必须选择它_ 的警告，请尝试将路径设置为 "
#~ "__c:\\windows\\notepad.exe__（windows）或 __/usr/bin/gedit__（Linux）。"

#~ msgid ""
#~ "The schematic is now finished. We can now create a Netlist file to which "
#~ "we will add the footprint of each component. Click on the 'Generate "
#~ "netlist' icon image:images/icons/netlist.png[netlist_png] on the top "
#~ "toolbar. Click on the 'Generate Netlist' button and save under the "
#~ "default file name."
#~ msgstr ""
#~ "原理图现已完成。 我们现在可以创建一个网表文件，我们将添加每个元件的封装。 "
#~ "单击顶部工具栏上的 _生成网表_ 图标 image:images/icons/netlist."
#~ "png[netlist_png] 。 单击 _生成网表_ 按钮并保存在默认文件名下。"

#~ msgid ""
#~ "Netlist was necessary in previous versions of KiCad.  In the recent "
#~ "versions you can ignore it and instead use *Tools* -> *Update PCB from "
#~ "Schematic*. If you do that you have to assign footprints to symbols first."
#~ msgstr ""
#~ "在以前版本的 KiCad 中，网表是必要的。 在最近的版本中，您可以忽略它，而是使"
#~ "用* 工具 * -> *从原理图* 更新PCB。 如果这样做，您必须首先为符号指定封装。"

#~ msgid ""
#~ "After generating the Netlist file, click on the 'Run Cvpcb' icon image:"
#~ "images/icons/cvpcb.png[cvpcb_png] on the top toolbar. If a missing file "
#~ "error window pops up, just ignore it and click OK."
#~ msgstr ""
#~ "生成网表文件后，单击顶部工具栏上的 _运行Cvpcb_ 图标 image:images/icons/"
#~ "cvpcb.png[cvpcb_png] 。 如果弹出丢失的文件错误窗口，请忽略它并单击 _确定"
#~ "_。"

#~ msgid "There are many more ways to add footprints to symbols."
#~ msgstr "还有很多方法可以为符号添加封装。"

#~ msgid ""
#~ "Double click on a symbol, or right click on a symbol -> *Properties* -> "
#~ "*Edit Properties* -> Footprint"
#~ msgstr "双击符号，或右键单击符号 -> *属性* -> *编辑属性* -> 封装"

#, no-wrap
#~ msgid "*Tools* -> *Edit Symbol Fields*\n"
#~ msgstr "*工具* -> *编辑符号字段*\n"

#, no-wrap
#~ msgid ""
#~ "Check _Show footprint previews in symbol chooser_ in Eeschema's preferences\n"
#~ "and select the footprint when you select a new symbol to place\n"
#~ msgstr ""
#~ "在 Eeschema 的偏好设置中，检查符号选择器中的显示封装预览\n"
#~ "并在选择要放置的新符号时选择封装\n"

#~ msgid ""
#~ "_Cvpcb_ allows you to link all the components in your schematic with "
#~ "footprints in the KiCad library. The pane on the center shows all the "
#~ "components used in your schematic. Here select 'D1'. In the pane on the "
#~ "right you have all the available footprints, here scroll down to 'LED_THT:"
#~ "LED-D5.0mm' and double click on it."
#~ msgstr ""
#~ "_Cvpcb_ 允许您将原理图中的所有元件与 KiCad 库中的封装链接起来。 中心的窗格"
#~ "显示原理图中使用的所有元件。 在这里选择 _D1_。 在右侧窗格中，您可以看到所"
#~ "有可用的占用空间，此处向下滚动到 _LED_THT：LED-D5.0mm_ 并双击它。"

#~ msgid ""
#~ "It is possible that the pane on the right shows only a selected subgroup "
#~ "of available footprints. This is because KiCad is trying to suggest to "
#~ "you a subset of suitable footprints. Click on the icons image:images/"
#~ "icons/module_filtered_list.png[module_filtered_list_png], image:images/"
#~ "icons/module_pin_filtered_list.png[module_pin_filtered_list_png] and "
#~ "image:images/icons/module_library_list.png[module_library_list_png] to "
#~ "enable or disable these filters."
#~ msgstr ""
#~ "右侧窗格可能只显示可用封装的一个子集。点击图标 image:images/icons/"
#~ "module_filtered_list.png[module_filtered_list_png], image:images/icons/"
#~ "module_pin_filtered_list.png[module_pin_filtered_list_png] 和 image:"
#~ "images/icons/module_library_list.png[module_library_list_png] 以启用或禁用"
#~ "这些筛选器。"

#~ msgid ""
#~ "For 'U1' select the 'Package_DIP:DIP-8_W7.62mm' footprint.  For 'J1' "
#~ "select the 'Connector:Banana_Jack_3Pin' footprint.  For 'R1' and 'R2' "
#~ "select the 'Resistor_THT:R_Axial_DIN0207_L6.3mm_D2.5mm_P2.54mm_Vertical' "
#~ "footprint."
#~ msgstr ""
#~ "对于 _U1_，选择 _Package_DIP：DIP-8_W7.62mm_ 封装。 对于 _J1_，选择 "
#~ "_Connector：Banana_Jack_3Pin_ 封装。 对于 _R1_ 和 _R2_，选择 "
#~ "_Resistor_THT：R_Axial_DIN0207_L6.3mm_D2.5mm_P2.54mm_Vertical_封装。"

#~ msgid ""
#~ "If you are interested in knowing what the footprint you are choosing "
#~ "looks like, you can click on the 'View selected footprint' icon image:"
#~ "images/icons/show_footprint.png[show_footprint_png] for a preview of the "
#~ "current footprint."
#~ msgstr ""
#~ "如果您有兴趣知道您选择的封装是什么样的，您可以单击 _查看所选封装_ 图标 "
#~ "image:images/icons/show_footprint.png[show_footprint_png] 以预览当前封装。"

#~ msgid ""
#~ "You are done. You can save the schematic now by clicking *File* -> **Save "
#~ "Schematic** or with the button 'Apply, Save Schematic & Continue'."
#~ msgstr ""
#~ "完成以后，可以通过点击 * 文件 * -> ** 保存原理图 ** 或使用 _应用、保存原理"
#~ "图和继续_ 按钮保存原理图。"

#~ msgid ""
#~ "You can close _Cvpcb_ and go back to the _Eeschema_ schematic editor. If "
#~ "you didn't save it in Cvpcb save it now by clicking on *File* -> "
#~ "**Save**. Create the netlist again. Your netlist file has now been "
#~ "updated with all the footprints. Note that if you are missing the "
#~ "footprint of any device, you will need to make your own footprints. This "
#~ "will be explained in a later section of this document."
#~ msgstr ""
#~ "您可以关闭 _Cvpcb_ 并返回 _Eeschema_ 原理图编辑器。 如果您没有将其保存在 "
#~ "Cvpcb 中，请单击 *文件* -> **保存** 立即保存。 再次创建网表。 您的网表文件"
#~ "现已更新，包含所有封装。 请注意，如果您缺少任何设备的占地面积，则需要制作"
#~ "自己的封装。 这将在本文档的后续部分中解释。"

#~ msgid ""
#~ "Now every symbol has a footprint. Instead of the net list and the next "
#~ "two steps you can use *Tools* -> *Update PCB from Schematic*.  If you do "
#~ "that, Pcbnew is opened with _Update PCB from Schematic_ dialog.  Click "
#~ "_Update PCB_.  Then You can follow the instructions in the Pcbnew section "
#~ "of this tutorial."
#~ msgstr ""
#~ "现在每个符号都有封装。 您可以使用 *工具* -> *从原理图* 更新PCB，而不是网表"
#~ "和接下来的两个步骤。 如果您这样做，Pcbnew 将使用 _原理图更新PCB_ 对话框中"
#~ "的 打开。 单击 _更新PCB_。 然后，您可以按照本教程的 Pcbnew 部分中的说明进"
#~ "行操作。"

#~ msgid ""
#~ "Switch to the KiCad project manager.  You can see the net list file in "
#~ "the file list."
#~ msgstr "切换到 KiCad 工程管理器。 您可以在文件列表中看到网表文件。"

#~ msgid ""
#~ "The netlist file describes all components and their respective pin "
#~ "connections. The netlist file is actually a text file that you can easily "
#~ "inspect, edit or script."
#~ msgstr ""
#~ "网表文件描述了所有元件及其各自的引脚连接。 网表文件实际上是一个文本文件，"
#~ "您可以轻松地检查，编辑或编写脚本。"

#~ msgid ""
#~ "Library files (__*.lib__) are text files too and they are also easily "
#~ "editable or scriptable."
#~ msgstr "库文件（__ *.lib__）也是文本文件，它们也很容易编辑或编写脚本。"

#~ msgid ""
#~ "To create a Bill Of Materials (BOM), go to the _Eeschema_ schematic "
#~ "editor and click on the 'Generate bill of materials' icon image:images/"
#~ "icons/bom.png[bom_png] on the top toolbar.  By default there is no plugin "
#~ "active. You add one, by clicking on *Add Plugin* button. Select the *.xsl "
#~ "file you want to use, in this case, we select __bom2csv.xsl__."
#~ msgstr ""
#~ "要创建物料清单（BOM），请转到 _Eeschema_ 原理图编辑器，然后单击顶部工具栏"
#~ "上的 _生成物料清单_ 图标 image:images/icons/bom.png[bom_png]。 默认情况"
#~ "下，没有处于活动的插件。 您可以通过单击 *添加插件* 按钮添加一个。 选择要使"
#~ "用的 *.xsl 文件，在这种情况下，我们选择 __bom2csv.xsl__。"

#, no-wrap
#~ msgid "*Linux:*\n"
#~ msgstr "*Linux:*\n"

#~ msgid "If xsltproc is missing, you can download and install it with:"
#~ msgstr "如果缺少 xsltproc，您可以下载并安装它："

#, no-wrap
#~ msgid " sudo apt-get install xsltproc\n"
#~ msgstr " sudo apt-get install xsltproc\n"

#~ msgid "for a Debian derived distro like Ubuntu, or"
#~ msgstr "对于像 Ubuntu 这样的 Debian 派生发行版，或者"

#, no-wrap
#~ msgid " sudo yum install xsltproc\n"
#~ msgstr " sudo yum install xsltproc\n"

#~ msgid ""
#~ "for a RedHat derived distro. If you use neither of the two kind of "
#~ "distro, use your distro package manager command to install the xsltproc "
#~ "package."
#~ msgstr ""
#~ "对于 RedHat 派生的发行版。 如果您不使用这两种发行版，请使用您的发行版软件"
#~ "包管理器命令来安装 xsltproc 软件包。"

#~ msgid "xsl files are located at: _/usr/lib/kicad/plugins/_."
#~ msgstr "xsl文件位于：_/usr/lib/kicad/plugins/_。"

#, no-wrap
#~ msgid "*Apple OS X:*\n"
#~ msgstr "*Apple OS X:*\n"

#~ msgid ""
#~ "If xsltproc is missing, you can either install the Apple Xcode tool from "
#~ "the Apple site that should contain it, or download and install it with:"
#~ msgstr ""
#~ "如果缺少 xsltproc，您可以从应该包含它的 Apple 站点安装 Apple Xcode 工具，"
#~ "或者下载并安装它："

#, no-wrap
#~ msgid " brew install libxslt\n"
#~ msgstr " brew install libxslt\n"

#~ msgid ""
#~ "xsl files are located at: _/Library/Application Support/kicad/plugins/_."
#~ msgstr "xsl文件位于：_/Library/Application Support/kicad/plugins/_。"

#, no-wrap
#~ msgid "*Windows:*\n"
#~ msgstr "*Windows:*\n"

#~ msgid ""
#~ "xsltproc.exe and the included xsl files will be located at _＜KiCad "
#~ "install directory＞\\bin_ and _＜KiCad install directory＞"
#~ "\\bin\\scripting\\plugins_, respectively."
#~ msgstr ""
#~ "xsltproc.exe 和包含的 xsl 文件将分别位于_《KiCad 安装目录》\\bin_ 和 _ "
#~ "《KiCad 安装目录》\\bin\\scripting\\plugins_。"

#, no-wrap
#~ msgid "*All platforms:*\n"
#~ msgstr "*所有平台：*\n"

#~ msgid "You can get the latest bom2csv.xsl via:"
#~ msgstr "您可以通过以下方式获取最新的 bom2csv.xsl："

#~ msgid ""
#~ "https://gitlab.com/kicad/code/kicad/raw/master/eeschema/plugins/"
#~ "xsl_scripts/bom2csv.xsl"
#~ msgstr ""
#~ "https://gitlab.com/kicad/code/kicad/raw/master/eeschema/plugins/"
#~ "xsl_scripts/bom2csv.xsl"

#, no-wrap
#~ msgid "KiCad automatically generates the command, for example:"
#~ msgstr "KiCad 自动生成命令，例如："

#, no-wrap
#~ msgid "xsltproc -o \"%O\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"
#~ msgstr "xsltproc -o \"%O\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"

#, no-wrap
#~ msgid "You may want to add the extension, so change this command line to:"
#~ msgstr "您可能想要添加扩展名，因此请将此命令行更改为："

#, no-wrap
#~ msgid "xsltproc -o \"%O.csv\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"
#~ msgstr "xsltproc -o \"%O.csv\" \"/home/<user>/kicad/eeschema/plugins/bom2csv.xsl\" \"%I\"\n"

#~ msgid "Press Help button for more info."
#~ msgstr "按 _帮助_ 按钮获取更多信息。"

#~ msgid ""
#~ "Now press 'Generate'. The file (same name as your project) is located in "
#~ "your project folder.  Open the **.csv* file with LibreOffice Calc or "
#~ "Excel. An import window will appear, press OK."
#~ msgstr ""
#~ "现在按 _生成_。 该文件（与工程同名）位于工程文件夹中。 使用 LibreOffice "
#~ "Calc 或 Excel 打开 * *.csv* 文件。 将出现导入窗口，按 OK。"

#~ msgid ""
#~ "You are now ready to move to the PCB layout part, which is presented in "
#~ "the next section. However, before moving on let's take a quick look at "
#~ "how to connect component pins using a bus line."
#~ msgstr ""
#~ "您现在可以转到 PCB 布局部分，这将在下一节中介绍。 但是，在继续之前，让我们"
#~ "快速了解如何使用总线连接元件引脚。"

#~ msgid ""
#~ "Sometimes you might need to connect several sequential pins of component "
#~ "A with some other sequential pins of component B. In this case you have "
#~ "two options: the labelling method we already saw or the use of a bus "
#~ "connection. Let's see how to do it."
#~ msgstr ""
#~ "有时您可能需要将元件 A 的多个顺序引脚与元件 B 的其他顺序引脚连接。在这种情"
#~ "况下，您有两个选项：我们已经看到的标记方法或使用总线连接。 让我们看看如何"
#~ "做到这一点。"

#~ msgid ""
#~ "Let us suppose that you have three 4-pin connectors that you want to "
#~ "connect together pin to pin. Use the label option (press [l])  to label "
#~ "pin 4 of the P4 part. Name this label 'a1'. Now press [Insert] to have "
#~ "the same item automatically added on the pin below pin 4 (PIN 3). Notice "
#~ "how the label is automatically renamed 'a2'."
#~ msgstr ""
#~ "让我们假设您有三个4针连接器，您想要将引脚连接在一起。 使用标签选项（按"
#~ "[l]）标记 P4 部件的引脚4。 将此标签命名为 _a1_。 现在按 [Insert] 将相同的"
#~ "工程自动添加到引脚4（引脚3）下方的引脚上。 注意标签是如何自动重命名为 "
#~ "_a2_ 。"

#~ msgid ""
#~ "Press [Insert] two more times. This key corresponds to the action 'Repeat "
#~ "last item' and it is an infinitely useful command that can make your life "
#~ "a lot easier."
#~ msgstr ""
#~ "再按 [Insert] 两次。 此键对应于 _重复最后一项_ 操作，它是一个无限有用的命"
#~ "令，可以让您的生活更轻松。"

#~ msgid ""
#~ "Repeat the same labelling action on the two other connectors CONN_2 and "
#~ "CONN_3 and you are done. If you proceed and make a PCB you will see that "
#~ "the three connectors are connected to each other. Figure 2 shows the "
#~ "result of what we described. For aesthetic purposes it is also possible "
#~ "to add a series of 'Place wire to bus entry' using the icon image:images/"
#~ "icons/add_line2bus.png[Place wire to bus entry] and bus line using the "
#~ "icon image:images/icons/add_bus2bus.png[Place bus to bus entry], as shown "
#~ "in Figure 3. Mind, however, that there will be no effect on the PCB."
#~ msgstr ""
#~ "在另外两个连接器 CONN_2 和 CONN_3 上重复相同的标签操作，您就完成了。 如果"
#~ "继续制作 PCB，您将看到三个连接器相互连接。 图2 显示了我们描述的结果。 出于"
#~ "美观目的，还可以使用图标图像添加一系列 _将电线放入总线入口_ image:images/"
#~ "icons/add_line2bus.png[Place wire to bus entry] 和使用图标图像的总线线路："
#~ "image:images/icons/add_bus2bus.png[Place bus to bus entry] ，如图3 所示。"
#~ "但是，请注意，对 PCB 没有影响。"

#~ msgid ""
#~ "It should be pointed out that the short wire attached to the pins in "
#~ "Figure 2 is not strictly necessary. In fact, the labels could have been "
#~ "applied directly to the pins."
#~ msgstr ""
#~ "应该指出的是，连接到 图2 中的引脚的短导线不是严格必需的。 实际上，标签可以"
#~ "直接应用于引脚。"

#~ msgid ""
#~ "Let's take it one step further and suppose that you have a fourth "
#~ "connector named CONN_4 and, for whatever reason, its labelling happens to "
#~ "be a little different (b1, b2, b3, b4). Now we want to connect _Bus a_ "
#~ "with _Bus b_ in a pin to pin manner. We want to do that without using pin "
#~ "labelling (which is also possible) but by instead using labelling on the "
#~ "bus line, with one label per bus."
#~ msgstr ""
#~ "让我们更进一步，假设你有一个名为 CONN_4 的第四个连接器，无论出于什么原因，"
#~ "它的标签恰好有点不同（b1，b2，b3，b4）。 现在我们想要以引脚到引脚的方式将"
#~ "_Bus a_ 与 _Bus b_ 连接起来。 我们希望不使用引脚标记（这也是可能的），而是"
#~ "使用总线上的标签，每个总线一个标签。"

#~ msgid ""
#~ "Connect and label CONN_4 using the labelling method explained before. "
#~ "Name the pins b1, b2, b3 and b4. Connect the pin to a series of 'Wire to "
#~ "bus entry' using the icon image:images/icons/add_line2bus."
#~ "png[add_line2bus_png] and to a bus line using the icon image:images/icons/"
#~ "add_bus.png[add_bus_png]. See Figure 4."
#~ msgstr ""
#~ "使用之前说明的标记方法连接并标记 CONN_4。 将引脚命名为b1，b2，b3和b4。 使"
#~ "用图标 image:images/icons/add_line2bus.png[add_line2bus_png] 将引脚连接到"
#~ "一系列 ­_电线到总线入口_，并使用图标 image:images/icons/add_bus."
#~ "png[add_bus_png] 连接到总线。 见图4。"

#~ msgid "Put a label (press [l]) on the bus of CONN_4 and name it 'b[1..4]'."
#~ msgstr "在 CONN_4 的总线上放一个标签（按[l]）并命名为 _b[1..4]_。"

#~ msgid "Put a label (press [l]) on the previous bus and name it 'a[1..4]'."
#~ msgstr "在前一个总线上放一个标签（按[l]）并将其命名为 _a[1..4]_。"

#~ msgid ""
#~ "What we can now do is connect bus a[1..4] with bus b[1..4] using a bus "
#~ "line with the button image:images/icons/add_bus.png[add_bus_png]."
#~ msgstr ""
#~ "我们现在可以做的是使用带有按钮图像的总线连接总线 _a[1..4]_ 和总线 "
#~ "_b[1..4]_：image:images/icons/add_bus.png[add_bus_png] 。"

#~ msgid ""
#~ "By connecting the two buses together, pin a1 will be automatically "
#~ "connected to pin b1, a2 will be connected to b2 and so on. Figure 4 shows "
#~ "what the final result looks like."
#~ msgstr ""
#~ "通过将两条总线连接在一起，引脚a1 将自动连接到 引脚b1，a2将连接到b2，依此类"
#~ "推。 图4 显示了最终结果的样子。"

#~ msgid ""
#~ "The 'Repeat last item' option accessible via [Insert] can be successfully "
#~ "used to repeat period item insertions. For instance, the short wires "
#~ "connected to all pins in Figure 2, Figure 3 and Figure 4 have been placed "
#~ "with this option."
#~ msgstr ""
#~ "通过 [Insert] 可访问的 _重复上一项_ 选项可以成功用于重复期间项目插入。 例"
#~ "如，连接到图2，图3和图4中所有引脚的短导线都已放置此选项。"

#~ msgid ""
#~ "The 'Repeat last item' option accessible via [Insert] has also been "
#~ "extensively used to place the many series of 'Wire to bus entry' using "
#~ "the icon image:images/icons/add_line2bus.png[add_line2bus_png]."
#~ msgstr ""
#~ "通过 [Insert] 访问的 _重复上一项_ 选项也被广泛用于使用图标 image:images/"
#~ "icons/add_line2bus.png[add_line2bus_png] 放置许多系列的 _电线到总线入口_。"

#, no-wrap
#~ msgid "gsik_bus_connection_png"
#~ msgstr "gsik_bus_connection_png"

#, no-wrap
#~ msgid "Layout printed circuit boards"
#~ msgstr "布局印刷电路板"

#~ msgid ""
#~ "It is now time to use the netlist file you generated to lay out the PCB.  "
#~ "This is done with the _Pcbnew_ tool."
#~ msgstr ""
#~ "现在是时候使用您生成的网表文件来布局 PCB 了。 这是通过 _Pcbnew_ 工具完成"
#~ "的。"

#~ msgid ""
#~ "If you used _Update PCB from Schematic_ from _Eeschema_ you don't need "
#~ "the netlist and step 5.  You can now drop the footprints into the board "
#~ "as in steps 6 and 7, then enter sheet information and design rules with "
#~ "steps 2...4."
#~ msgstr ""
#~ "如果您使用来自 _Eeschema_ 的 _原理图更新到PCB_，则不需要网表和步骤5.您现在"
#~ "可以像步骤6和7一样将封装放入板中，然后按 步骤2~4 输入表单信息和设计规则。"

#, no-wrap
#~ msgid "Using Pcbnew"
#~ msgstr "使用 Pcbnew"

#~ msgid ""
#~ "From the KiCad project manager, click on the 'Pcb layout editor' icon "
#~ "image:images/icons/pcbnew.png[pcbnew_png]. You can also use the "
#~ "corresponding toolbar button from _Eeschema_.  The 'Pcbnew' window will "
#~ "open. If you get a message saying that a _*.kicad_pcb_ file does not "
#~ "exist and asks if you want to create it, just click Yes."
#~ msgstr ""
#~ "从 KiCad 工程管理器，单击 _Pcb布局编辑器_ 图标 image:images/icons/pcbnew."
#~ "png[pcbnew_png] 。 您还可以使用 _Eeschema_ 中的相应工具栏按钮。 _Pcbnew_ "
#~ "窗口将打开。 如果您收到一条消息，指出 _ *.kicad_pcb_文件不存在并询问您是否"
#~ "要创建它，只需单击是。"

#~ msgid ""
#~ "Begin by entering some schematic information. Click on the 'Page "
#~ "settings' icon image:images/icons/sheetset.png[sheetset_png] on the top "
#~ "toolbar. Set the appropriate 'paper size' ('A4','8.5x11' etc.)  and "
#~ "'title' as 'Tutorial1'."
#~ msgstr ""
#~ "首先输入一些原理图信息。 单击顶部工具栏上的 _页面设置_ 图标 image:images/"
#~ "icons/sheetset.png[sheetset_png] 。 将相应的 _纸张尺寸_（ _A4_，_8.5x11_ "
#~ "等）和 _标题_ 设置为 _教程1_。"

#~ msgid ""
#~ "It is a good idea to start by setting the *clearance* and the *minimum "
#~ "track width* to those required by your PCB manufacturer. In general you "
#~ "can set the clearance to '0.25' and the minimum track width to '0.25'. "
#~ "Click on the *Setup* -> *Design Rules* menu. If it does not show already, "
#~ "click on the 'Net Classes Editor' tab. Change the 'Clearance' field at "
#~ "the top of the window to '0.25' and the 'Track Width' field to '0.25' as "
#~ "shown below. Measurements here are in mm."
#~ msgstr ""
#~ "最好将 *间距* 和 *最小布线宽度* 设置为PCB制造商要求的宽度。 通常，您可以将"
#~ "间隙设置为 _0.25mm_，将最小轨道宽度设置为 _0.25mm_ 。 单击 *设置* -> *设计"
#~ "规则* 菜单。 如果它尚未显示，请单击 _网络类编辑器_ 选项卡。 将窗口顶部的 _"
#~ "间距_ 字段更改为 _0.25mm_，将 _布线宽度_ 字段更改为 _0.25mm_，如下所示。 "
#~ "这里的测量单位是 _mm_。"

#~ msgid ""
#~ "Click on the 'Global Design Rules' tab and set 'Minimum track width' to "
#~ "'0.25'. Click the OK button to commit your changes and close the Design "
#~ "Rules Editor window."
#~ msgstr ""
#~ "单击 _全局设计规则_ 选项卡，将 _最小布线宽度_ 设置为 _0.25mm_。 单击 _确定"
#~ "_ 按钮以提交更改并关闭 _设计规则编辑器_ 窗口。"

#~ msgid ""
#~ "Now we will import the netlist file if you created one.  Click on the "
#~ "'Read netlist' icon image:images/icons/netlist.png[netlist_png] on the "
#~ "top toolbar. The netlist file 'tutorial1.net' should be selected in the "
#~ "'Netlist file' field if it was created from Eeschema.  Click on 'Read "
#~ "Current Netlist'. Then click the 'Close' button."
#~ msgstr ""
#~ "现在我们将导入网表文件，如果你创建了一个。 单击顶部工具栏上的 _读取网表_ "
#~ "图标 image:images/icons/netlist.png[netlist_png] 。 如果网表文件 _教程1."
#~ "net_ 是从 Eeschema 创建的，则应在 _网表文件_ 字段中选择。 点击 _读取当前网"
#~ "表_。 然后单击 _关闭_ 按钮。"

#~ msgid ""
#~ "All components should now be visible. They are selected and follow the "
#~ "mouse cursor."
#~ msgstr "现在应该可以看到所有元件。 选择它们并按照鼠标光标。"

#~ msgid ""
#~ "Move the components to the middle of the board. If necessary you can zoom "
#~ "in and out while you move the components. Click the left mouse button."
#~ msgstr ""
#~ "将元件移动到板的中间。 如有必要，您可以在移动元件时放大和缩小。 单击鼠标左"
#~ "键。"

#~ msgid ""
#~ "All components are connected via a thin group of wires called "
#~ "__ratsnest__. Make sure that the 'Show/hide board ratsnest' button image:"
#~ "images/icons/general_ratsnest.png[general_ratsnest_png] is pressed. In "
#~ "this way you can see the ratsnest linking all components."
#~ msgstr ""
#~ "所有元件都通过称为 __飞线__ 的一组细线连接。 确保按下 _显示/隐藏板鼠标_ 按"
#~ "钮 image:images/icons/general_ratsnest.png[general_ratsnest_png] 。 通过这"
#~ "种方式，您可以看到链接所有元件的最快速度。"

#~ msgid ""
#~ "You can move each component by hovering over it and pressing [m].  Click "
#~ "where you want to place them. Alternatively you can select a component by "
#~ "clicking on it and then drag it.  Press [r] to rotate a component.  Move "
#~ "all components around until you minimise the number of wire crossovers."
#~ msgstr ""
#~ "您可以通过将每个元件悬停在其上并按 [m] 来移动它们。 单击要放置它们的位"
#~ "置。 或者，您可以通过单击选择元件然后拖动它。 按 [r] 旋转元件。 移动所有元"
#~ "件，直到最小化电线交叉的数量。"

#, no-wrap
#~ msgid "gsik_tutorial1_080_png"
#~ msgstr "gsik_tutorial1_080_png"

#, no-wrap
#~ msgid "images/gsik_tutorial1_080.png"
#~ msgstr "images/gsik_tutorial1_080.png"

#~ msgid ""
#~ "Note how one pin of the 100 ohm resistor is connected to pin 6 of the PIC "
#~ "component. This is the result of the labelling method used to connect "
#~ "pins. Labels are often preferred to actual wires because they make the "
#~ "schematic much less messy."
#~ msgstr ""
#~ "注意 100欧姆 电阻的一个引脚如何连接到 PIC 元件的 引脚6。 这是用于连接引脚"
#~ "的标记方法的结果。 标签通常比实际的电线更受欢迎，因为它们使原理图更加杂"
#~ "乱。"

#~ msgid ""
#~ "Now we will define the edge of the PCB. Select the 'Edge.Cuts' layer from "
#~ "the drop-down menu in the top toolbar. Click on the 'Add graphic lines' "
#~ "icon image:images/icons/add_dashed_line.png[add_dashed_line_png] on the "
#~ "right toolbar. Trace around the edge of the board, clicking at each "
#~ "corner, and remember to leave a small gap between the edge of the green "
#~ "and the edge of the PCB."
#~ msgstr ""
#~ "现在我们将定义 PCB 的边缘。 从顶部工具栏的下拉菜单中选择 _边切（边缘切割）"
#~ "_ 图层。 单击右侧工具栏上的 _添加图形线_ 图标 image:images/icons/"
#~ "add_dashed_line.png[add_dashed_line_png] 。 沿着电路板边缘，在每个角落点"
#~ "击，并记住在绿色边缘和 PCB 边缘之间留一个小间隙。"

#, no-wrap
#~ msgid "Select the Edge.Cuts layer"
#~ msgstr "选择边剪切层"

#~ msgid ""
#~ "Next, connect up all the wires except GND. In fact, we will connect all "
#~ "GND connections in one go using a ground plane placed on the bottom "
#~ "copper (called __B.Cu__) of the board."
#~ msgstr ""
#~ "接下来，连接除 GND 之外的所有电线。 事实上，我们将使用放置在电路板底部铜线"
#~ "（称为 __B.Cu__ ）的接地层一次连接所有 GND 连接。"

#~ msgid ""
#~ "Now we must choose which copper layer we want to work on. Select 'F.Cu "
#~ "(PgUp)' in the drop-down menu on the top toolbar. This is the front top "
#~ "copper layer."
#~ msgstr ""
#~ "现在我们必须选择我们想要处理的铜层。 在顶部工具栏的下拉菜单中选择 _F.Cu"
#~ "（PgUp）_。 这是前顶部铜层。"

#, no-wrap
#~ msgid "Select the Front top copper layer"
#~ msgstr "选择前顶部铜层"

#~ msgid ""
#~ "If you decide, for instance, to do a 4 layer PCB instead, go to *Setup* -"
#~ "> *Layers Setup* and change 'Copper Layers' to 4. In the 'Layers' table "
#~ "you can name layers and decide what they can be used for.  Notice that "
#~ "there are very useful presets that can be selected via the 'Preset Layer "
#~ "Groupings' menu."
#~ msgstr ""
#~ "例如，如果您决定改为使用 4层 PCB，请转到 *设置* -> *层设置* 并将 _铜层_ 更"
#~ "改为 4.在 _层_ 表中，您可以命名图层并确定它们的含义 用于。 请注意，可以通"
#~ "过 _预设图层分组_ 菜单选择非常有用的预设。"

#~ msgid ""
#~ "Click on the 'Route tracks' icon image:images/icons/add_tracks."
#~ "png[add_tracks_png] on the right toolbar. Click on pin 1 of 'J1' and run "
#~ "a track to pad 'R2'. Double-click to set the point where the track will "
#~ "end. The width of this track will be the default 0.250 mm. You can change "
#~ "the track width from the drop-down menu in the top toolbar. Mind that by "
#~ "default you have only one track width available."
#~ msgstr ""
#~ "单击右侧工具栏上的 _布线_ 图标 image:images/icons/add_tracks."
#~ "png[add_tracks_png]。 单击 _J1_ 的第1针并运行轨道以填充 _R2_。 双击以设置"
#~ "轨道结束的点。 该轨道的宽度将默认为 0.250mm。 您可以从顶部工具栏的下拉菜单"
#~ "中更改布线宽度。 请注意，默认情况下，您只有一个可用的布线宽度。"

#, no-wrap
#~ msgid "pcbnew_select_track_width_png"
#~ msgstr "pcbnew_select_track_width_png"

#, no-wrap
#~ msgid "images/pcbnew_select_track_width.png"
#~ msgstr "images/zh/pcbnew_select_track_width.png"

#~ msgid ""
#~ "If you would like to add more track widths go to: *Setup* -> *Design "
#~ "Rules* -> *Global Design Rules* tab and at the bottom right of this "
#~ "window add any other width you would like to have available. You can then "
#~ "choose the widths of the track from the drop-down menu while you lay out "
#~ "your board. See the example below (inches)."
#~ msgstr ""
#~ "如果您想添加更多的轨道宽度，请转到：*设置* -> *设计规则* -> *全局设计规则"
#~ "* 选项卡，在此窗口的右下角添加您希望可用的任何其他宽度。 然后，您可以在布"
#~ "置电路板时从下拉菜单中选择布线的宽度。 请参阅下面的示例（英寸）。"

#, no-wrap
#~ msgid "custom_tracks_width_png"
#~ msgstr "custom_tracks_width_png"

#~ msgid ""
#~ "Alternatively, you can add a Net Class in which you specify a set of "
#~ "options. Go to *Setup* -> *Design Rules* -> *Net Classes Editor* and add "
#~ "a new class called 'power'. Change the track width from 8 mil (indicated "
#~ "as 0.0080) to 24 mil (indicated as 0.0240). Next, add everything but "
#~ "ground to the 'power' class (select 'default' at left and 'power' at "
#~ "right and use the arrows)."
#~ msgstr ""
#~ "或者，您可以添加一个 _网络类_，在其中指定一组选项。 转到 *设置* -> *设计规"
#~ "则* -> *网络类编辑器* 并添加一个名为 _电源_ 的新类。 将布线宽度从 8mil（表"
#~ "示为0.0080）更改为 24mil（表示为0.0240）。 接下来，将除地面之外的所有内容"
#~ "添加到 _电源_ 类（左侧选择 _默认_，右侧选择_电源_ 并使用箭头）。"

#~ msgid ""
#~ "If you want to change the grid size, *Right click* -> **Grid**.  Be sure "
#~ "to select the appropriate grid size before or after laying down the "
#~ "components and connecting them together with tracks."
#~ msgstr ""
#~ "如果要更改网格大小，*右键单击* -> **网格**。 在放下元件并将它们与轨道连接"
#~ "在一起之前或之后，请务必选择合适的网格尺寸。"

#~ msgid ""
#~ "Repeat this process until all wires, except pin 3 of J1, are connected. "
#~ "Your board should look like the example below."
#~ msgstr ""
#~ "重复此过程，直到连接除 J1 的引脚3之外的所有电线。 您的电路板应如下所示。"

#, no-wrap
#~ msgid "gsik_tutorial1_090_png"
#~ msgstr "gsik_tutorial1_090_png"

#, no-wrap
#~ msgid "images/gsik_tutorial1_090.png"
#~ msgstr "images/gsik_tutorial1_090.png"

#~ msgid ""
#~ "Let's now run a track on the other copper side of the PCB. Select 'B.Cu' "
#~ "in the drop-down menu on the top toolbar. Click on the 'Route tracks' "
#~ "icon image:images/icons/add_tracks.png[add_tracks_png]. Draw a track "
#~ "between pin 3 of J1 and pin 8 of U1. This is actually not necessary since "
#~ "we could do this with the ground plane. Notice how the colour of the "
#~ "track has changed."
#~ msgstr ""
#~ "现在让我们在 PCB 的另一个侧上运行布线。 在顶部工具栏的下拉菜单中选择 _B."
#~ "Cu_。 点击 _布线_ 图标 image:images/icons/add_tracks."
#~ "png[add_tracks_png]。 在 J1 的引脚3和 U1 的引脚8之间画一条线。 这实际上没"
#~ "有必要，因为我们可以用地平面做到这一点。 注意轨道的颜色是如何变化的。"

#, no-wrap
#~ msgid ""
#~ "**Go from pin A to pin B by changing layer**. It is possible to\n"
#~ "change the copper plane while you are running a track by placing a\n"
#~ "via.  While you are running a track on the upper copper plane,\n"
#~ "right click and select 'Place Via' or simply press [v]. This will\n"
#~ "take you to the bottom layer where you can complete your track.\n"
#~ msgstr ""
#~ "**通过更改图层** 从引脚A到引脚B。 有可能\n"
#~ "通过放置布线来运行时更改铜平面\n"
#~ "过孔通过当您在上部铜平面上运行布线时，\n"
#~ "右键单击并选择 _放置过孔_ 或只需按[v]。 这将\n"
#~ "带您到最底层，您可以完成您的布线。\n"

#, no-wrap
#~ msgid "place_a_via_png"
#~ msgstr "place_a_via_png"

#~ msgid ""
#~ "When you want to inspect a particular connection you can click on the "
#~ "'Highlight net' icon image:images/icons/net_highlight."
#~ "png[net_highlight_png] on the right toolbar.  Click on pin 3 of J1. The "
#~ "track itself and all pads connected to it should become highlighted."
#~ msgstr ""
#~ "当您想要检查特定连接时，可以单击右侧工具栏上的 _高亮网络_ 图标 image:"
#~ "images/icons/net_highlight.png[net_highlight_png] 。 点击 J1 的引脚3。 布"
#~ "线本身和连接到它的所有焊盘都应高亮显示。"

#~ msgid ""
#~ "Now we will make a ground plane that will be connected to all GND pins. "
#~ "Click on the 'Add filled zones' icon image:images/icons/add_zone."
#~ "png[add_zone_png] on the right toolbar. We are going to trace a rectangle "
#~ "around the board, so click where you want one of the corners to be. In "
#~ "the dialogue that appears, set 'Default pad connection' to 'Thermal "
#~ "relief' and 'Outline slope' to 'H,V and 45 deg only' and click OK."
#~ msgstr ""
#~ "现在我们将制作一个连接到所有 GND 引脚的接地层。 单击右侧工具栏上的 _添加填"
#~ "充区域_ 图标 image:images/icons/add_zone.png[add_zone_png] 。 我们将在板周"
#~ "围布线一个矩形，因此单击您想要其中一个角的位置。 在出现的对话框中，将 _默"
#~ "认焊盘连接_ 设置为 _防散热（花焊盘）_ ，将 _轮廓角度_ 设置为 _仅限H，V和45"
#~ "度_ ，然后单击 _确定_。"

#~ msgid ""
#~ "Trace around the outline of the board by clicking each corner in "
#~ "rotation.  Finish your rectangle by clicking the first corner second "
#~ "time. Right click inside the area you have just traced.  Click on 'Zones'-"
#~ ">'Fill or Refill All Zones'. The board should fill in with green and look "
#~ "something like this:"
#~ msgstr ""
#~ "通过单击旋转中的每个角来跟踪板的轮廓。 通过第二次单击第一个角完成矩形。 右"
#~ "键单击刚刚跟踪的区域。 单击 _区域_ -> _填充或重新填充所有区域_。 板应填充"
#~ "为绿色，看起来像这样："

#, no-wrap
#~ msgid "gsik_tutorial1_100_png"
#~ msgstr "gsik_tutorial1_100_png"

#, no-wrap
#~ msgid "images/gsik_tutorial1_100.png"
#~ msgstr "images/gsik_tutorial1_100.png"

#~ msgid ""
#~ "Run the design rules checker by clicking on the 'Perform design rules "
#~ "check' icon image:images/icons/drc.png[drc_png] on the top toolbar.  "
#~ "Click on 'Start DRC'. There should be no errors. Click on 'List "
#~ "Unconnected'. There should be no unconnected items. Click OK to close the "
#~ "DRC Control dialogue."
#~ msgstr ""
#~ "单击顶部工具栏上的 _执行设计规则检查_ 图标 image:images/icons/drc."
#~ "png[drc_png] 运行设计规则检查器。 点击 _开始 DRC_。 应该没有错误。 点击 _"
#~ "列表未连接_。 应该没有未连接的项目。 单击 _确定_ 关闭 _DRC控制_ 对话框。"

#~ msgid ""
#~ "Save your file by clicking on *File* -> **Save**. To admire your board in "
#~ "3D, click on *View* -> **3D Viewer**."
#~ msgstr ""
#~ "单击 *文件* -> **保存** 保存文件。 要以 3D 方式观察您的电路板，请单击 *视"
#~ "图* -> **3D 查看器**。"

#, no-wrap
#~ msgid "pcbnew_3d_viewer_png"
#~ msgstr "pcbnew_3d_viewer_png"

#, no-wrap
#~ msgid "images/pcbnew_3d_viewer.png"
#~ msgstr "images/pcbnew_3d_viewer.png"

#~ msgid "You can drag your mouse around to rotate the PCB."
#~ msgstr "您可以拖动鼠标来旋转 PCB。"

#~ msgid ""
#~ "Your board is complete. To send it off to a manufacturer you will need to "
#~ "generate all Gerber files."
#~ msgstr "你的板是完整的。 要将其发送给制造商，您需要生成所有 Gerber 文件。"

#~ msgid ""
#~ "Once your PCB is complete, you can generate Gerber files for each layer "
#~ "and send them to your favourite PCB manufacturer, who will make the board "
#~ "for you."
#~ msgstr ""
#~ "完成 PCB 后，您可以为每一层生成 Gerber 文件，并将它们发送给您最喜欢的 PCB "
#~ "制造商，他们将为您制作电路板。"

#~ msgid "From KiCad, open the _Pcbnew_ board editor."
#~ msgstr "从 KiCad，打开 _Pcbnew_ 板编辑器。"

#~ msgid ""
#~ "Click on *File* -> **Plot**. Select 'Gerber' as the 'Plot format' and "
#~ "select the folder in which to put all Gerber files.  Proceed by clicking "
#~ "on the 'Plot' button."
#~ msgstr ""
#~ "点击 *文件* -> ** 绘制 **。 选择 _Gerber_ 作为 _绘制格式_ 并选择放置所有 "
#~ "Gerber 文件的文件夹。 单击 _绘制_ 按钮继续。"

#~ msgid ""
#~ "To generate the drill file, from _Pcbnew_ go again to the *File* -> "
#~ "*Plot* option. Default settings should be fine."
#~ msgstr ""
#~ "要生成钻取文件，请从 _Pcbnew_ 再次转到 *文件* -> *绘制* 选项。 默认设置应"
#~ "该没问题。"

#~ msgid ""
#~ "These are the layers you need to select for making a typical 2-layer PCB:"
#~ msgstr "这些是您制作典型的2层 PCB 时需要选择的层："

#, no-wrap
#~ msgid ""
#~ "|Layer |KiCad Layer Name |Default Gerber Extension\n"
#~ "    |\"Use Protel filename extensions\" is enabled\n"
#~ "|Bottom Layer |B.Cu |.GBR |.GBL\n"
#~ "|Top Layer |F.Cu |.GBR |.GTL\n"
#~ "|Top Overlay |F.SilkS |.GBR |.GTO\n"
#~ "|Bottom Solder Resist |B.Mask |.GBR |.GBS\n"
#~ "|Top Solder Resist |F.Mask |.GBR |.GTS\n"
#~ "|Edges |Edge.Cuts |.GBR |.GM1\n"
#~ msgstr ""
#~ "|层 |KiCad 层名 |默认 Gerber 扩展\n"
#~ "    |“使用 Protel 文件扩展名”已启用\n"
#~ "|Bottom Layer |B.Cu |.GBR |.GBL\n"
#~ "|Top Layer |F.Cu |.GBR |.GTL\n"
#~ "|Top Overlay |F.SilkS |.GBR |.GTO\n"
#~ "|Bottom Solder Resist |B.Mask |.GBR |.GBS\n"
#~ "|Top Solder Resist |F.Mask |.GBR |.GTS\n"
#~ "|Edges |Edge.Cuts |.GBR |.GM1\n"

#, no-wrap
#~ msgid "Using GerbView"
#~ msgstr "使用 Gerbview"

#~ msgid ""
#~ "To view all your Gerber files go to the KiCad project manager and click "
#~ "on the 'GerbView' icon.  On the drop-down menu or in the Layers manager "
#~ "select 'Graphic layer 1'.  Click on *File* -> *Open Gerber file(s)* or "
#~ "click on the icon image:images/icons/gerber_file.png[gerber_file_png]. "
#~ "Select and open all generated Gerber files. Note how they all get "
#~ "displayed one on top of the other."
#~ msgstr ""
#~ "要查看所有 Gerber 文件，请转到 KiCad 工程管理器并单击 _GerbView_ 图标。 在"
#~ "下拉菜单或图层管理器中，选择 _图形图层1_。 单击 *文件* -> *打开 Gerber 文"
#~ "件* 或单击图标 image:images/icons/gerber_file.png[gerber_file_png] 。 选择"
#~ "并打开所有生成的 Gerber 文件。 注意它们如何一个显示在另一个之上。"

#~ msgid "Open the drill files with *File* -> *Open Excellon Drill File(s)*."
#~ msgstr "使用 *文件* -> *打开 Excellon 钻取文件* 打开钻取文件。"

#~ msgid ""
#~ "Use the Layers manager on the right to select/deselect which layer to "
#~ "show.  Carefully inspect each layer before sending them for production."
#~ msgstr ""
#~ "使用右侧的图层管理器选择/取消选择要显示的图层。 在发送生产之前仔细检查每一"
#~ "层。"

#~ msgid ""
#~ "The view works similarly to Pcbnew. Right click inside the view and click "
#~ "'Grid' to change the grid."
#~ msgstr "该视图与 Pcbnew 类似。 在视图内右键单击并单击 _网格_ 以更改网格。"

#, no-wrap
#~ msgid "Automatically route with FreeRouter"
#~ msgstr "使用 FreeRouter 自动布线"

#~ msgid ""
#~ "Routing a board by hand is quick and fun, however, for a board with lots "
#~ "of components you might want to use an autorouter. Remember that you "
#~ "should first route critical traces by hand and then set the autorouter to "
#~ "do the boring bits. Its work will only account for the unrouted traces. "
#~ "The autorouter we will use here is FreeRouting."
#~ msgstr ""
#~ "手动布线板既快速又有趣，但对于具有大量元件的电路板，您可能希望使用自动布线"
#~ "器。 请记住，您应首先手动布线关键迹线，然后设置自动布线器以执行无聊位。 它"
#~ "的工作只会解释未布线的痕迹。 我们将在这里使用的自动布线器是 FreeRouting。"

#~ msgid ""
#~ "FreeRouting is an open source java application.  Currently FreeRouting "
#~ "exists in several more or less identical copies which you can find by "
#~ "doing an internet search for \"freerouting\".  It may be found in source "
#~ "only form or as a precompiled java package."
#~ msgstr ""
#~ "FreeRouting 是一个开源的 Java 应用程序。 目前，FreeRouting 存在于几个或多"
#~ "或少相同的副本中，您可以通过互联网搜索_freerouting_ 找到它们。 它可以在源"
#~ "代码形式或预编译的 Java 包中找到。"

#~ msgid ""
#~ "From _Pcbnew_ click on *File* -> *Export* -> *Specctra DSN* and save the "
#~ "file locally.  Launch FreeRouter and click on the 'Open Your Own Design' "
#~ "button, browse for the _dsn_ file and load it."
#~ msgstr ""
#~ "从 _Pcbnew_ 单击 *文件* -> *导出* -> * Specctra DSN * 并在本地保存文件。 "
#~ "启动 FreeRouter 并单击 _打开您自己的设计_ 按钮，浏览 _dsn_ 文件并加载它。"

#~ msgid ""
#~ "FreeRouter has some features that KiCad does not currently have, both for "
#~ "manual routing and for automatic routing. FreeRouter operates in two main "
#~ "steps: first, routing the board and then optimising it. Full optimisation "
#~ "can take a long time, however you can stop it at any time need be."
#~ msgstr ""
#~ "FreeRouter 具有 KiCad 目前不具备的一些功能，包括手动布线和自动布线。 "
#~ "FreeRouter 主要有两个步骤：首先，对电路板进行布线，然后对其进行优化。 完全"
#~ "优化可能需要很长时间，但您可以随时停止它。"

#~ msgid ""
#~ "You can start the automatic routing by clicking on the 'Autorouter' "
#~ "button on the top bar. The bottom bar gives you information about the on-"
#~ "going routing process. If the 'Pass' count gets above 30, your board "
#~ "probably can not be autorouted with this router. Spread your components "
#~ "out more or rotate them better and try again. The goal in rotation and "
#~ "position of parts is to lower the number of crossed airlines in the "
#~ "ratsnest."
#~ msgstr ""
#~ "您可以通过单击顶部栏上的 _自动布线器_ 按钮来启动自动布线。 底栏为您提供有"
#~ "关正在进行的布线过程的信息。 如果 _通过_ 计数超过30，则您的电路板可能无法"
#~ "使用此布线器自动执行。 更多地展开您的元件或更好地旋转它们并再试一次。 零件"
#~ "的旋转和位置的目标是降低速率的交叉走线的数量。"

#~ msgid ""
#~ "Making a left-click on the mouse can stop the automatic routing and "
#~ "automatically start the optimisation process. Another left-click will "
#~ "stop the optimisation process. Unless you really need to stop, it is "
#~ "better to let FreeRouter finish its job."
#~ msgstr ""
#~ "左键单击鼠标可以停止自动布线并自动启动优化过程。 另一次左键单击将停止优化"
#~ "过程。 除非你真的需要停下来，否则最好让 FreeRouter 完成它的工作。"

#~ msgid ""
#~ "Click on the *File* -> *Export Specctra Session File* menu and save the "
#~ "board file with the _.ses_ extension. You do not really need to save the "
#~ "FreeRouter rules file."
#~ msgstr ""
#~ "单击 *文件* -> *导出 Specctra 会话文件* 菜单并使用 _.ses_ 扩展名保存板文"
#~ "件。 您实际上不需要保存 FreeRouter 规则文件。"

#~ msgid ""
#~ "Back to __Pcbnew__. You can import your freshly routed board by clicking "
#~ "on *File* -> *Import* -> *Spectra Session* and selecting your _.ses_ file."
#~ msgstr ""
#~ "回到 __Pcbnew__。 您可以通过单击 *文件* -> *导入* -> * Spectra 会话* 并选"
#~ "择 _.ses_ 文件来导入刚刚布线的电路板。"

#~ msgid ""
#~ "If there is any routed trace that you do not like, you can delete it and "
#~ "re-route it again, using [Delete] and the routing tool, which is the "
#~ "'Route tracks' icon image:images/icons/add_tracks.png[Add Track icon] on "
#~ "the right toolbar."
#~ msgstr ""
#~ "如果有任何您不喜欢的布线，可以使用 [Delete] 和布线工具删除它并重新布线它，"
#~ "这是 _布线_ 图标 image:images/icons/add_tracks.png[Add Track icon] 在右侧"
#~ "工具栏上添加。"

#, no-wrap
#~ msgid "Forward annotation in KiCad"
#~ msgstr "在 KiCad 中向前批注"

#~ msgid ""
#~ "Once you have completed your electronic schematic, the footprint "
#~ "assignment, the board layout and generated the Gerber files, you are "
#~ "ready to send everything to a PCB manufacturer so that your board can "
#~ "become reality."
#~ msgstr ""
#~ "完成电子原理图，封装分配，电路板布局和生成 Gerber 文件后，您就可以将所有内"
#~ "容发送给 PCB 制造商，以便您的电路板成为现实。"

#~ msgid ""
#~ "Often, this linear work-flow turns out to be not so uni-directional. For "
#~ "instance, when you have to modify/extend a board for which you or others "
#~ "have already completed this work-flow, it is possible that you need to "
#~ "move components around, replace them with others, change footprints and "
#~ "much more. During this modification process, what you do not want to do "
#~ "is to re-route the whole board again from scratch. Instead, this is how "
#~ "you do it:"
#~ msgstr ""
#~ "通常，这种线性工作流程并非如此单向。 例如，当您必须修改/扩展您或其他人已经"
#~ "完成此工作流程的板时，您可能需要移动元件，替换其他元件，更改占用空间等"
#~ "等。 在此修改过程中，您不想做的是从头开始重新布线整个电路板。 相反，这是你"
#~ "如何做到这一点："

#~ msgid ""
#~ "Let's suppose that you want to replace a hypothetical connector CON1 with "
#~ "CON2."
#~ msgstr "假设您想要用 CON2 替换假设的连接器 CON1。"

#~ msgid "You already have a completed schematic and a fully routed PCB."
#~ msgstr "您已经拥有完整的原理图和完全布线的 PCB。"

#~ msgid ""
#~ "From KiCad, start __Eeschema__, make your modifications by deleting CON1 "
#~ "and adding CON2. Save your schematic project with the icon image:images/"
#~ "icons/save.png[Save icon] and c lick on the 'Netlist generation' icon "
#~ "image:images/icons/netlist.png[netlist_png] on the top toolbar."
#~ msgstr ""
#~ "从 KiCad 开始 __Eeschema__，通过删除 CON1 并添加 CON2 进行修改。 使用图标"
#~ "图像保存原理图工程 image:images/icons/save.png[Save icon] 并点击顶部工具栏"
#~ "上的 _网表生成_ 图标 image:images/icons/netlist.png[netlist_png]。"

#~ msgid ""
#~ "Click on 'Netlist' then on 'save'. Save to the default file name.  You "
#~ "have to rewrite the old one."
#~ msgstr "点击 _网表_ 然后点击 _保存_。 保存为默认文件名。 你必须重写旧的。"

#~ msgid ""
#~ "Now assign a footprint to CON2. Click on the 'Run Cvpcb' icon image:"
#~ "images/icons/cvpcb.png[cvpcb] on the top toolbar. Assign the footprint to "
#~ "the new device CON2. The rest of the components still have the previous "
#~ "footprints assigned to them. Close __Cvpcb__."
#~ msgstr ""
#~ "现在为 CON2 分配封装。 单击顶部工具栏上的 _运行Cvpcb_ 图标 image:images/"
#~ "icons/cvpcb.png[cvpcb]。 将封装分配给新设备 CON2。 其余元件仍然具有分配给"
#~ "它们的先前封装。 关闭 __Cvpcb__。"

#~ msgid ""
#~ "Back in the schematic editor, save the project by clicking on 'File' -> "
#~ "'Save Whole Schematic Project'. Close the schematic editor."
#~ msgstr ""
#~ "返回原理图编辑器，单击 _文件_ -> _保存整个原理图工程_ 保存工程。 关闭原理"
#~ "图编辑器。"

#~ msgid ""
#~ "From the KiCad project manager, click on the 'Pcbnew' icon. The 'Pcbnew' "
#~ "window will open."
#~ msgstr "从 KiCad 工程管理器，单击 _Pcbnew_ 图标。 _Pcbnew_ 窗口将打开。"

#~ msgid ""
#~ "The old, already routed, board should automatically open. Let's import "
#~ "the new netlist file. Click on the 'Read Netlist' icon image:images/icons/"
#~ "netlist.png[netlist_png] on the top toolbar."
#~ msgstr ""
#~ "旧的，已经布线的电路板应该自动打开。 让我们导入新的网表文件。 单击顶部工具"
#~ "栏上的 _读取网表_ 图标 image:images/icons/netlist.png[netlist_png]。"

#~ msgid ""
#~ "Click on the 'Browse Netlist Files' button, select the netlist file in "
#~ "the file selection dialogue, and click on 'Read Current Netlist'.  Then "
#~ "click the 'Close' button."
#~ msgstr ""
#~ "单击 _浏览网表文件_ 按钮，在文件选择对话框中选择网表文件，然后单击 _读取当"
#~ "前网表_。 然后单击 _关闭_ 按钮。"

#~ msgid ""
#~ "At this point you should be able to see a layout with all previous "
#~ "components already routed. On the top left corner you should see all "
#~ "unrouted components, in our case the CON2. Select CON2 with the mouse.  "
#~ "Move the component to the middle of the board."
#~ msgstr ""
#~ "此时，您应该能够看到已布置所有先前元件的布局。 在左上角，您应该看到所有未"
#~ "布线的元件，在我们的例子中是 CON2。 用鼠标选择 CON2。 将元件移动到板的中"
#~ "间。"

#~ msgid ""
#~ "Place CON2 and route it. Once done, save and proceed with the Gerber file "
#~ "generation as usual."
#~ msgstr "放置 CON2 并布线它。 完成后，保存并继续照常生成 Gerber 文件。"

#~ msgid ""
#~ "The process described here can easily be repeated as many times as you "
#~ "need. Beside the Forward Annotation method described above, there is "
#~ "another method known as Backward Annotation. This method allows you to "
#~ "make modifications to your already routed PCB from Pcbnew and updates "
#~ "those modifications in your schematic and netlist file. The Backward "
#~ "Annotation method, however, is not that useful and is therefore not "
#~ "described here."
#~ msgstr ""
#~ "这里描述的过程可以根据需要轻松地重复多次。除了上面描述的向前批注方法之外，"
#~ "还有另一种方法称为向后批注。此方法允许您从 Pcbnew 修改已布线的 PCB，并在原"
#~ "理图和网表文件中更新这些修改。然而，向后批注方法没有那么有用，因此这里不描"
#~ "述它。"

#~ msgid ""
#~ "Sometimes a symbol that you want to place on your schematic is not in a "
#~ "KiCad library. This is quite normal and there is no reason to worry. In "
#~ "this section we will see how a new schematic symbol can be quickly "
#~ "created with KiCad. Nevertheless, remember that you can always find KiCad "
#~ "components on the Internet."
#~ msgstr ""
#~ "有时，您想要放置在原理图中的符号不在 KiCad 库中。 这很正常，没有理由担"
#~ "心。 在本节中，我们将了解如何使用 KiCad 快速创建新的原理图符号。 不过，请"
#~ "记住，您始终可以在互联网上找到 KiCad 元件。"

#~ msgid ""
#~ "In KiCad, a symbol is a piece of text that starts with 'DEF' and ends "
#~ "with 'ENDDEF'. One or more symbols are normally placed in a library file "
#~ "with the extension __.lib__. If you want to add symbols to a library file "
#~ "you can just use the cut and paste commands of a text editor."
#~ msgstr ""
#~ "在 KiCad 中，符号是一段以 _DEF_ 开头并以 _ENDDEF_ 结尾的文本。 一个或多个"
#~ "符号通常放在库文件中，扩展名为 __.lib__。 如果要将符号添加到库文件，只需使"
#~ "用文本编辑器的剪切和粘贴命令即可。"

#, no-wrap
#~ msgid "Using Component Library Editor"
#~ msgstr "使用元件库编辑器"

#~ msgid ""
#~ "We can use the _Component Library Editor_ (part of __Eeschema__)  to make "
#~ "new components. In our project folder 'tutorial1' let's create a folder "
#~ "named 'library'. Inside we will put our new library file _myLib.lib_ as "
#~ "soon as we have created our new component."
#~ msgstr ""
#~ "我们可以使用_元件库编辑器_（__Eeschema__ 的一部分）来创建新元件。 在我们的"
#~ "工程文件夹 _教程1_ 中，让我们创建一个名为 _库_ 的文件夹。 在我们创建新元件"
#~ "后，我们将在内部放置新的库文件 _myLib.lib_。"

#~ msgid ""
#~ "Now we can start creating our new component. From KiCad, start "
#~ "__Eeschema__, click on the 'Library Editor' icon image:images/icons/"
#~ "libedit.png[libedit_png] and then click on the 'New component' icon image:"
#~ "images/icons/new_component.png[new_component_png]. The Component "
#~ "Properties window will appear. Name the new component 'MYCONN3', set the "
#~ "'Default reference designator' as 'J', and the 'Number of units per "
#~ "package' as '1'. Click OK. If the warning appears just click yes.  At "
#~ "this point the component is only made of its labels. Let's add some pins. "
#~ "Click on the 'Add Pins' icon image:images/icons/pin.png[pin_png] on the "
#~ "right toolbar. To place the pin, left click in the centre of the part "
#~ "editor sheet just below the 'MYCONN3' label."
#~ msgstr ""
#~ "现在我们可以开始创建新元件了。 从 KiCad 开始 __Eeschema__，单击 _库编辑器"
#~ "_ 图标 image:images/icons/libedit.png[libedit_png]，然后单击 _新元件_ 图"
#~ "标 image:images/icons/new_component.png[new_component_png]。 将出现 _元件"
#~ "属性_ 窗口。 将新元件命名为 _MYCONN3_，将 _默认参考指示符_ 设置为 _J_，将 "
#~ "_每个包的单位数_ 设置为 _1_。 单击确定。 如果出现警告，则单击 _是_。 此"
#~ "时，元件仅由其标签组成。 让我们添加一些引脚。 单击右侧工具栏上的 _添加引脚"
#~ "_ 图标 image:images/icons/pin.png[pin_png]。 要放置引脚，请在 _MYCONN3_ 标"
#~ "签正下方的零件编辑器工作表中间单击鼠标左键。"

#~ msgid ""
#~ "In the Pin Properties window that appears, set the pin name to 'VCC', set "
#~ "the pin number to '1', and the 'Electrical type' to 'Power input' then "
#~ "click OK."
#~ msgstr ""
#~ "在出现的引脚属性窗口中，将引脚名称设置为 _VCC_，将引脚编号设置为 _1_，将 _"
#~ "电气类型_ 设置为 _电源输入_，然后单击 _确定_。"

#~ msgid ""
#~ "Place the pin by clicking on the location you would like it to go, right "
#~ "below the 'MYCONN3' label."
#~ msgstr "在 _MYCONN3_ 标签下方单击您想要的位置放置引脚。"

#~ msgid ""
#~ "Repeat the place-pin steps, this time 'Pin name' should be 'INPUT', 'Pin "
#~ "number' should be '2', and 'Electrical Type' should be 'Passive'."
#~ msgstr ""
#~ "重复执行引脚步骤，这次 _引脚名_ 应为 _输入_，_引脚号_ 应为 _2_，_电气类型"
#~ "_ 应为 _被动_。"

#~ msgid ""
#~ "Repeat the place-pin steps, this time 'Pin name' should be 'GND', 'Pin "
#~ "number' should be '3', and 'Electrical Type' should be 'Passive'.  "
#~ "Arrange the pins one on top of the other. The component label 'MYCONN3' "
#~ "should be in the centre of the page (where the blue lines cross)."
#~ msgstr ""
#~ "重复放置引脚步骤，这次 _引脚名称_ 应为 _GND_，_引脚编号_ 应为 _3_，_电气类"
#~ "型_ 应为 _被动_。 将销钉一个放在另一个的顶部。 元件标签 _MYCONN3_ 应位于页"
#~ "面的中心（蓝线交叉的位置）。"

#~ msgid ""
#~ "Next, draw the contour of the component. Click on the 'Add rectangle' "
#~ "icon image:images/icons/add_rectangle.png[add_rectangle_png]. We want to "
#~ "draw a rectangle next to the pins, as shown below. To do this, click "
#~ "where you want the top left corner of the rectangle to be (do not hold "
#~ "the mouse button down). Click again where you want the bottom right "
#~ "corner of the rectangle to be."
#~ msgstr ""
#~ "接下来，绘制元件的轮廓。 单击 _添加矩形_ 图标 image:images/icons/"
#~ "add_rectangle.png[add_rectangle_png] 。 我们想在引脚旁边绘制一个矩形，如下"
#~ "所示。 为此，请单击矩形左上角的位置（不要按住鼠标按钮）。 再次单击矩形右下"
#~ "角的位置。"

#, no-wrap
#~ msgid "gsik_myconn3_l_png"
#~ msgstr "gsik_myconn3_l_png"

#, no-wrap
#~ msgid "images/gsik_myconn3_l.png"
#~ msgstr "images/gsik_myconn3_l.png"

#~ msgid ""
#~ "If you want to fill the rectangle with yellow, set the fill colour to "
#~ "'yellow 4' in *Preferences* -> *Select color scheme*, then select the "
#~ "rectangle in the editing screen with [e], selecting 'Fill background'."
#~ msgstr ""
#~ "如果要用黄色填充矩形，请在 *偏好设置* -> *选择颜色方案* 中将填充颜色设置"
#~ "为 _黄色4_，然后使用 [e] 在编辑屏幕中选择矩形，选择 _填充背景_。"

#~ msgid ""
#~ "Save the component in your library __myLib.lib__. Click on the 'New "
#~ "Library' icon image:images/icons/new_library.png[new_library_png], "
#~ "navigate into _tutorial1/library/_ folder and save the new library file "
#~ "with the name __myLib.lib__."
#~ msgstr ""
#~ "将元件保存在库 __myLib.lib__ 中。 单击 _新建库_ 图标 image:images/icons/"
#~ "new_library.png[new_library_png] ，导航到 _教程1/库/_ 文件夹并保存名为 "
#~ "__myLib.lib__ 的新库文件。"

#~ msgid ""
#~ "Go to *Preferences* -> *Component Libraries* and add both _tutorial1/"
#~ "library/_ in 'User defined search path' and _myLib.lib in_ 'Component "
#~ "library files'."
#~ msgstr ""
#~ "转到 *偏好设置* -> *元件库* 并在 _用户定义的搜索路径_ 中添加 _教程1/库/"
#~ "_ ，在 _元件库文件_ 中添加 _mylib.lib_。"

#~ msgid ""
#~ "Click on the 'Select working library' icon image:images/icons/library."
#~ "png[library_png]. In the Select Library window click on _myLib_ and click "
#~ "OK. Notice how the heading of the window indicates the library currently "
#~ "in use, which now should be __myLib__."
#~ msgstr ""
#~ "单击 _选择工作库_ 图标 image:images/icons/library.png[library_png] 。 在 _"
#~ "选择库_ 窗口中，单击 _myLib_，然后单击 _确定_。 注意窗口的标题如何表示当前"
#~ "正在使用的库，现在应该是 __myLib__。"

#~ msgid ""
#~ "Click on the 'Update current component in current library' icon image:"
#~ "images/icons/save_part_in_mem.png[save_part_in_mem_png] in the top "
#~ "toolbar. Save all changes by clicking on the 'Save current loaded library "
#~ "on disk' icon image:images/icons/save_library.png[save_library_png] in "
#~ "the top toolbar. Click 'Yes' in any confirmation messages that appear.  "
#~ "The new schematic component is now done and available in the library "
#~ "indicated in the window title bar."
#~ msgstr ""
#~ "单击顶部工具栏中的 _更新当前库中的当前元件_ 图标 image:images/icons/"
#~ "save_part_in_mem.png[save_part_in_mem_png] 。 单击顶部工具栏中的 _在磁盘上"
#~ "保存当前加载的库_ 图标 image:images/icons/save_library."
#~ "png[save_library_png] 保存所有更改。 在出现的任何确认消息中单击 _是_。 现"
#~ "在，新的逻辑示意图元件已在窗口标题栏中指示的库中完成并可用。"

#~ msgid ""
#~ "You can now close the Component library editor window. You will return to "
#~ "the schematic editor window. Your new component will now be available to "
#~ "you from the library __myLib__."
#~ msgstr ""
#~ "您现在可以关闭 _元件库_ 编辑器窗口。 您将返回到原理图编辑器窗口。 您的新元"
#~ "件现在可以从库 __myLib__ 中使用。"

#~ msgid ""
#~ "You can make any library _file.lib_ file available to you by adding it to "
#~ "the library path. From __Eeschema__, go to *Preferences* -> *Library* and "
#~ "add both the path to it in 'User defined search path' and _file.lib_ in "
#~ "'Component library files'."
#~ msgstr ""
#~ "您可以通过将库 __.lib__ 文件添加到库路径来使其可用。 从 __Eeschema__ 开"
#~ "始，转到* 偏好设置 * -> * 库 *并在 _用户定义的搜索路径_ 中添加路径，在 _元"
#~ "件库文件_ 中添加_file.lib_。"

#, no-wrap
#~ msgid "Export, import and modify library components"
#~ msgstr "导出，导入和修改库元件"

#~ msgid ""
#~ "Instead of creating a library component from scratch it is sometimes "
#~ "easier to start from one already made and modify it. In this section we "
#~ "will see how to export a component from the KiCad standard library "
#~ "'device' to your own library _myOwnLib.lib_ and then modify it."
#~ msgstr ""
#~ "而不是从头开始创建库元件，有时从已经制作并修改它更容易。 在本节中，我们将"
#~ "了解如何将元件从 KiCad 标准库 _设备_ 导出到您自己的库 _myOwnLib.lib_，然后"
#~ "进行修改。"

#~ msgid ""
#~ "From KiCad, start __Eeschema__, click on the 'Library Editor' icon image:"
#~ "images/icons/libedit.png[libedit_png], click on the 'Select working "
#~ "library' icon image:images/icons/library.png[library_png] and choose the "
#~ "library 'device'. Click on 'Load component to edit from the current lib' "
#~ "icon image:images/icons/import_cmp_from_lib.png[import_cmp_from_lib_png] "
#~ "and import the 'RELAY_2RT'."
#~ msgstr ""
#~ "从 KiCad 开始 __Eeschema__，点击 _库编辑器_ 图标 image:images/icons/"
#~ "libedit.png[libedit_png] ，点击 _选择工作库_ 图标 image:images/icons/"
#~ "library.png[library_png] 并选择库的 _设备_。 单击 _从当前库中加载元件进行"
#~ "编辑_ 图标image:images/icons/import_cmp_from_lib."
#~ "png[import_cmp_from_lib_png] 并导入 _RELAY_2RT_。"

#~ msgid ""
#~ "Click on the 'Export component' icon image:images/icons/export."
#~ "png[export_png], navigate into the _library/_ folder and save the new "
#~ "library file with the name _myOwnLib.lib._"
#~ msgstr ""
#~ "单击“导出元件”图标 image:images/icons/export.png[export_png]，导航到 _库/"
#~ "_ 文件夹并保存名为 _myOwnLib.lib_ 的新库文件"

#~ msgid ""
#~ "You can make this component and the whole library _myOwnLib.lib_ "
#~ "available to you by adding it to the library path. From __Eeschema__, go "
#~ "to *Preferences* -> *Component Libraries* and add both _library/_ in "
#~ "'User defined search path' and _myOwnLib.lib_ in the 'Component library "
#~ "files'. Close the window."
#~ msgstr ""
#~ "您可以将此元件和整个库 _myOwnLib.lib_ 添加到库路径中，从而使您可以使用"
#~ "它。 从  __Eeschema__，转到 *偏好设置 * -> * 元件库 * 并在 _用户定义的搜索"
#~ "路径_ 中添加 _library/_，在 _元件库文件_ 中添加 _myOwnLib.lib_。 关闭窗"
#~ "口。"

#~ msgid ""
#~ "Click on the 'Select working library' icon image:images/icons/library."
#~ "png[library_png]. In the Select Library window click on _myOwnLib_ and "
#~ "click OK. Notice how the heading of the window indicates the library "
#~ "currently in use, it should be __myOwnLib__."
#~ msgstr ""
#~ "单击 _选择工作库_ 图标 image:images/icons/library.png[library_png] 。 在选"
#~ "择库窗口中，单击 _myOwnLib_ 并单击 OK。 注意窗口的标题如何表示当前正在使用"
#~ "的库，它应该是 __myOwnLib__。"

#~ msgid ""
#~ "Click on the 'Load component to edit from the current lib' icon image:"
#~ "images/icons/import_cmp_from_lib.png[import_cmp_from_lib_png] and import "
#~ "the 'RELAY_2RT'."
#~ msgstr ""
#~ "单击 _从当前库中加载元件进行编辑_ 图标 image:images/icons/"
#~ "import_cmp_from_lib.png[import_cmp_from_lib_png] 并导入 _RELAY_2RT_。"

#~ msgid ""
#~ "You can now modify the component as you like. Hover over the label "
#~ "'RELAY_2RT', press [e] and rename it 'MY_RELAY_2RT'."
#~ msgstr ""
#~ "您现在可以根据需要修改元件。 将鼠标悬停在 _RELAY_2RT_ 标签上，按 [e] 并将"
#~ "其重命名为 _MY_RELAY_2RT_。"

#~ msgid ""
#~ "Click on 'Update current component in current library' icon image:images/"
#~ "icons/save_part_in_mem.png[save_part_in_mem_png] in the top toolbar. Save "
#~ "all changes by clicking on the 'Save current loaded library on disk' icon "
#~ "image:images/icons/save_library.png[save_library_png] in the top toolbar."
#~ msgstr ""
#~ "单击顶部工具栏中的 _更新当前库中的当前元件_ 图标 image:images/icons/"
#~ "save_part_in_mem.png[save_part_in_mem_png] 。 单击顶部工具栏中的 _在磁盘上"
#~ "保存当前加载的库_ 图标 image:images/icons/save_library."
#~ "png[save_library_png] 保存所有更改。"

#, no-wrap
#~ msgid "Make schematic components with quicklib"
#~ msgstr "使用 quicklib 制作原理图元件"

#~ msgid ""
#~ "This section presents an alternative way of creating the schematic "
#~ "component for MYCONN3 (see <<myconn3,MYCONN3>> above) using the Internet "
#~ "tool __quicklib__."
#~ msgstr ""
#~ "本节介绍使用互联网工具 __quicklib__ 为 MYCONN3 创建原理图元件的另一种方法"
#~ "（参见上面的《myconn3，MYCONN3》）。"

#~ msgid ""
#~ "Head to the _quicklib_ web page: http://kicad.rohrbacher.net/quicklib.php"
#~ msgstr "前往 _quicklib_ 网页：http://kicad.rohrbacher.net/quicklib.php"

#~ msgid ""
#~ "Fill out the page with the following information: Component name: MYCONN3 "
#~ "Reference Prefix: J Pin Layout Style: SIL Pin Count, N: 3"
#~ msgstr ""
#~ "使用以下信息填写页面：元件名称：MYCONN3 参考前缀：J引脚布局样式：SIL 引脚"
#~ "数，N:3"

#~ msgid ""
#~ "Click on the 'Assign Pins' icon. Fill out the page with the following "
#~ "information: Pin 1: VCC Pin 2: input Pin 3: GND.  Type : Passive for all "
#~ "3 pins."
#~ msgstr ""
#~ "单击 _分配引脚_ 图标。 使用以下信息填写页面：引脚1：VCC;引脚2：输入引"
#~ "脚;3：GND。 类型：所有3个引脚都被动。"

#~ msgid ""
#~ "Click on the icon 'Preview it' and, if you are satisfied, click on the "
#~ "'Build Library Component'. Download the file and rename it __tutorial1/"
#~ "library/myQuickLib.lib.__. You are done!"
#~ msgstr ""
#~ "单击 _预览_ 图标，如果您满意，请单击 _构建库元件_。 下载文件并将其重命名"
#~ "为 __教程1/库/myQuickLib.lib__。 你完成了！"

#~ msgid ""
#~ "Have a look at it using KiCad. From the KiCad project manager, start "
#~ "__Eeschema__, click on the 'Library Editor' icon image:images/icons/"
#~ "libedit.png[libedit_png], click on the 'Import Component' icon image:"
#~ "images/icons/import.png[import_png], navigate to _tutorial1/library/_ and "
#~ "select _myQuickLib.lib._"
#~ msgstr ""
#~ "使用 KiCad 查看它。 从 KiCad 工程管理器，启动 __Eeschema__，单击 “库编辑"
#~ "器” 图标 image:images/icons/libedit.png[libedit_png]] ，单击 “导入元件” 图"
#~ "标 image:images/icons/import.png[import_png] ，导航到 _教程1/库/_ 并选择 "
#~ "_myQuickLib.lib_"

#, no-wrap
#~ msgid "gsik_myconn3_quicklib_png"
#~ msgstr "gsik_myconn3_quicklib_png"

#, no-wrap
#~ msgid "images/gsik_myconn3_quicklib.png"
#~ msgstr "images/gsik_myconn3_quicklib.png"

#~ msgid ""
#~ "You can make this component and the whole library _myQuickLib.lib_ "
#~ "available to you by adding it to the KiCad library path. From "
#~ "__Eeschema__, go to *Preferences* -> *Component Libraries* and add "
#~ "_library_ in 'User defined search path' and _myQuickLib.lib_ in "
#~ "'Component library files'."
#~ msgstr ""
#~ "您可以通过将此元件和整个库 _myQuickLib.lib_ 添加到 KiCad 库路径来使其可"
#~ "用。 从 __Eeschema__，转到 *偏好设置* -> *元件库* 并在 _用户定义的搜索路径"
#~ "_ 中添加 _library_，在 _元件库文件_ 中添加 _myQuickLib.lib_。"

#~ msgid ""
#~ "As you might guess, this method of creating library components can be "
#~ "quite effective when you want to create components with a large pin count."
#~ msgstr ""
#~ "正如您可能猜到的，当您想要创建具有大引脚数的元件时，这种创建库元件的方法非"
#~ "常有效。"

#, no-wrap
#~ msgid "Make a high pin count schematic component"
#~ msgstr "制作高引脚数的原理图元件"

#~ msgid ""
#~ "In the section titled _Make Schematic Components in quicklib_ we saw how "
#~ "to make a schematic component using the _quicklib_ web-based tool.  "
#~ "However, you will occasionally find that you need to create a schematic "
#~ "component with a high number of pins (some hundreds of pins). In KiCad, "
#~ "this is not a very complicated task."
#~ msgstr ""
#~ "在 _quicklib_ 中标题为 _制作原理图元件_ 的部分中，我们了解了如何使用 "
#~ "_quicklib_ 基于 Web 的工具制作原理图元件。 但是，您偶尔会发现需要创建一个"
#~ "具有大量引脚（几百个引脚）的原理图元件。 在 KiCad 中，这不是一项非常复杂的"
#~ "任务。"

#~ msgid ""
#~ "Suppose that you want to create a schematic component for a device with "
#~ "50 pins. It is common practise to draw it using multiple low pin-count "
#~ "drawings, for example two drawings with 25 pins each. This component "
#~ "representation allows for easy pin connection."
#~ msgstr ""
#~ "假设您要为具有 50 个引脚的器件创建原理图元件。 通常的做法是使用多个低引脚"
#~ "数的图纸来绘制它，例如两个图纸，每个图纸有25个引脚。 该元件表示允许简单的"
#~ "引脚连接。"

#~ msgid ""
#~ "The best way to create our component is to use _quicklib_ to generate two "
#~ "25-pin components separately, re-number their pins using a Python script "
#~ "and finally merge the two by using copy and paste to make them into one "
#~ "single DEF and ENDDEF component."
#~ msgstr ""
#~ "创建元件的最佳方法是使用 _quicklib_ 分别生成两个25引脚元件，使用 Python 脚"
#~ "本重新编号它们的引脚，最后通过使用复制和粘贴将它们合并为一个单独的 DEF 和 "
#~ "ENDDEF 元件。"

#~ msgid ""
#~ "You will find an example of a simple Python script below that can be used "
#~ "in conjunction with an _in.txt_ file and an _out.txt_ file to re-number "
#~ "the line: +X PIN1 1 -750 600 300 R 50 50 1 1 I+ into +X PIN26 26 -750 600 "
#~ "300 R 50 50 1 1 I+ this is done for all lines in the file __in.txt__."
#~ msgstr ""
#~ "您将在下面找到一个简单的 Python 脚本示例，它可以与 _in.txt_ 文件和 _out."
#~ "txt_ 文件一起使用以重新编号该行：+X PIN1 1 -750 600 300 R 50 50 1 1 I+ "
#~ "into +X PIN26 26 -750 600 300 R 50 50 1 1 I+ 这对文件 __in.txt__ 中的所有"
#~ "行都已完成。"

#, no-wrap
#~ msgid "Simple script"
#~ msgstr "简单的脚本"

#, no-wrap
#~ msgid ""
#~ "#!/usr/bin/env python\n"
#~ "''' simple script to manipulate KiCad component pins numbering'''\n"
#~ "import sys, re\n"
#~ "try:\n"
#~ "    fin=open(sys.argv[1],'r')\n"
#~ "    fout=open(sys.argv[2],'w')\n"
#~ "except:\n"
#~ "    print \"oh, wrong use of this app, try:\", sys.argv[0], \"in.txt out.txt\"\n"
#~ "    sys.exit()\n"
#~ "for ln in fin.readlines():\n"
#~ "    obj=re.search(\"(X PIN)(\\d*)(\\s)(\\d*)(\\s.*)\",ln)\n"
#~ "if obj:\n"
#~ "    num = int(obj.group(2))+25\n"
#~ "    ln=obj.group(1) + str(num) + obj.group(3) + str(num) + obj.group(5) +'\\n'\n"
#~ "    fout.write(ln)\n"
#~ "fin.close(); fout.close()\n"
#~ "#\n"
#~ "# for more info about regular expression syntax and KiCad component generation:\n"
#~ "# http://gskinner.com/RegExr/\n"
#~ "# http://kicad.rohrbacher.net/quicklib.php\n"
#~ msgstr ""
#~ "#!/usr/bin/env python\n"
#~ "''' simple script to manipulate KiCad component pins numbering'''\n"
#~ "import sys, re\n"
#~ "try:\n"
#~ "    fin=open(sys.argv[1],'r')\n"
#~ "    fout=open(sys.argv[2],'w')\n"
#~ "except:\n"
#~ "    print \"oh, wrong use of this app, try:\", sys.argv[0], \"in.txt out.txt\"\n"
#~ "    sys.exit()\n"
#~ "for ln in fin.readlines():\n"
#~ "    obj=re.search(\"(X PIN)(\\d*)(\\s)(\\d*)(\\s.*)\",ln)\n"
#~ "if obj:\n"
#~ "    num = int(obj.group(2))+25\n"
#~ "    ln=obj.group(1) + str(num) + obj.group(3) + str(num) + obj.group(5) +'\\n'\n"
#~ "    fout.write(ln)\n"
#~ "fin.close(); fout.close()\n"
#~ "#\n"
#~ "# for more info about regular expression syntax and KiCad component generation:\n"
#~ "# http://gskinner.com/RegExr/\n"
#~ "# http://kicad.rohrbacher.net/quicklib.php\n"

#~ msgid ""
#~ "While merging the two components into one, it is necessary to use the "
#~ "Library Editor from Eeschema to move the first component so that the "
#~ "second does not end up on top of it. Below you will find the final .lib "
#~ "file and its representation in __Eeschema__."
#~ msgstr ""
#~ "在将两个元件合并为一个元件时，有必要使用 Eeschema 的库编辑器移动第一个元"
#~ "件，以便第二个元件不会在它上面移动。 您将在下面找到最终的 .lib 文件及其在 "
#~ "__Eeschema__ 中的表示形式。"

#, no-wrap
#~ msgid "Contents of a *.lib file"
#~ msgstr "*.lib 文件的内容"

#, no-wrap
#~ msgid ""
#~ "EESchema-LIBRARY Version 2.3\n"
#~ "#encoding utf-8\n"
#~ "# COMP\n"
#~ "DEF COMP U 0 40 Y Y 1 F N\n"
#~ "F0 \"U\" -1800 -100 50 H V C CNN\n"
#~ "F1 \"COMP\" -1800 100 50 H V C CNN\n"
#~ "DRAW\n"
#~ "S -2250 -800 -1350 800 0 0 0 N\n"
#~ "S -450 -800 450 800 0 0 0 N\n"
#~ "X PIN1 1 -2550 600 300 R 50 50 1 1 I\n"
#~ msgstr ""
#~ "EESchema-LIBRARY Version 2.3\n"
#~ "#encoding utf-8\n"
#~ "# COMP\n"
#~ "DEF COMP U 0 40 Y Y 1 F N\n"
#~ "F0 \"U\" -1800 -100 50 H V C CNN\n"
#~ "F1 \"COMP\" -1800 100 50 H V C CNN\n"
#~ "DRAW\n"
#~ "S -2250 -800 -1350 800 0 0 0 N\n"
#~ "S -450 -800 450 800 0 0 0 N\n"
#~ "X PIN1 1 -2550 600 300 R 50 50 1 1 I\n"

#, no-wrap
#~ msgid "...\n"
#~ msgstr "...\n"

#, no-wrap
#~ msgid ""
#~ "X PIN49 49 750 -500 300 L 50 50 1 1 I\n"
#~ "ENDDRAW\n"
#~ "ENDDEF\n"
#~ "#End Library\n"
#~ msgstr ""
#~ "X PIN49 49 750 -500 300 L 50 50 1 1 I\n"
#~ "ENDDRAW\n"
#~ "ENDDEF\n"
#~ "#End Library\n"

#, no-wrap
#~ msgid "gsik_high_number_pins_png"
#~ msgstr "gsik_high_number_pins_png"

#, no-wrap
#~ msgid "images/gsik_high_number_pins.png"
#~ msgstr "images/gsik_high_number_pins.png"

#~ msgid ""
#~ "The Python script presented here is a very powerful tool for manipulating "
#~ "both pin numbers and pin labels. Mind, however, that all its power comes "
#~ "for the arcane and yet amazingly useful Regular Expression syntax: "
#~ "_http://gskinner.com/RegExr/._"
#~ msgstr ""
#~ "这里介绍的 Python 脚本是一个非常强大的工具，用于操作引脚号和引脚标签。 然"
#~ "而，请注意，它的所有功能都来自于神秘而且非常有用的正则表达式语法：_http://"
#~ "gskinner.com/RegExr/._"

#~ msgid ""
#~ "Unlike other EDA software tools, which have one type of library that "
#~ "contains both the schematic symbol and the footprint variations, KiCad _."
#~ "lib_ files contain schematic symbols and _.kicad_mod_ files contain "
#~ "footprints. _Cvpcb_ is used to map footprints to symbols."
#~ msgstr ""
#~ "与其他 EDA 软件工具不同，其中一种类型的库包含原理图符号和封装变化，KiCad "
#~ "_.lib_ 文件包含原理图符号，_.kicad_mod_ 文件包含封装。 _Cvpcb_ 用于将封装"
#~ "映射到符号。"

#~ msgid ""
#~ "As for _.lib_ files, _.kicad_mod_ library files are text files that can "
#~ "contain anything from one to several parts."
#~ msgstr ""
#~ "对于 _.lib_ 文件，_.kicad_mod_ 库文件是可以包含从一个部分到多个部分的任何"
#~ "文本文件。"

#~ msgid ""
#~ "There is an extensive footprint library with KiCad, however on occasion "
#~ "you might find that the footprint you need is not in the KiCad library.  "
#~ "Here are the steps for creating a new PCB footprint in KiCad:"
#~ msgstr ""
#~ "有一个广泛的封装库与 KiCad，但有时您可能会发现您需要的封装不在 KiCad 库"
#~ "中。 以下是在 KiCad 中创建新 PCB 封装的步骤："

#~ msgid ""
#~ "From the KiCad project manager start the _Pcbnew_ tool. Click on the "
#~ "'Open Footprint Editor' icon image:images/icons/edit_module."
#~ "png[edit_module_png] on the top toolbar. This will open the 'Footprint "
#~ "Editor'."
#~ msgstr ""
#~ "从 KiCad 工程管理器开始 _Pcbnew_ 工具。 单击顶部工具栏上的 _打开封装编辑器"
#~ "_ 图标 image:images/icons/edit_module.png[edit_module_png] 。 这将打开 _封"
#~ "装编辑器_。"

#~ msgid ""
#~ "We are going to save the new footprint 'MYCONN3' in the new footprint "
#~ "library 'myfootprint'.  Create a new folder _myfootprint.pretty_ in the "
#~ "_tutorial1/_ project folder.  Click on the *Preferences* -> **Footprint "
#~ "Libraries Manager** and press 'Append Library' button. In the table, "
#~ "enter \"myfootprint\" as Nickname, enter \"$\\{KIPRJMOD\\}/myfootprint."
#~ "pretty\" as Library Path and enter \"KiCad\" as Plugin Type.  Press OK to "
#~ "close the PCB Library Tables window.  Click on the 'Select active "
#~ "library' icon image:images/icons/open_library.png[open_library_png] on "
#~ "the top toolbar.  Select the 'myfootprint' library."
#~ msgstr ""
#~ "我们将在新的封装库 _myfootprint_ 中保存新的封装 _MYCONN3_。 在 _教程1/_ 工"
#~ "程文件夹中创建一个新文件夹 _myfootprint.pretty_ 。 单击 *偏好设置* -> **封"
#~ "装库管理器** 并按 _附加库_ 按钮。 在表格中，输入 _myfootprint_ 作为昵称，"
#~ "输入 _$\\{KIPRJMOD\\}/myfootprint.pretty_ 作为库路径，并输入 _KiCad_ 作为"
#~ "插件类型。 按 _确定_ 关闭 _PCB库表_ 窗口。 单击顶部工具栏上的 _选择活动库"
#~ "_ 图标 image:images/icons/open_library.png[open_library_png] 。 选择 "
#~ "_myfootprint_ 库。"

#~ msgid ""
#~ "Click on the 'New Footprint' icon image:images/icons/new_footprint."
#~ "png[new_footprint_png] on the top toolbar.  Type 'MYCONN3' as the "
#~ "'footprint name'. In the middle of the screen the 'MYCONN3' label will "
#~ "appear. Under the label you can see the 'REF*__' label. Right click on "
#~ "'MYCONN3' and move it above 'REF*__'. Right click on 'REF__*', select "
#~ "'Edit Text' and rename it to 'SMD'. Set the 'Display' value to "
#~ "'Invisible'."
#~ msgstr ""
#~ "单击顶部工具栏上的 _新封装_ 图标 image:images/icons/new_footprint."
#~ "png[new_footprint_png] 。 输入 _MYCONN3_ 作为 _封装名称_。 在屏幕中间将出"
#~ "现 _MYCONN3_ 标签。 在标签下，您可以看到 ** REF*__ **标签。 右键单击 "
#~ "_MYCONN3_ 并将其移到 ** REF*__ **上方。 右键单击 ** REF*__ **，选择 _编辑"
#~ "文本_ 并将其重命名为 _SMD_。 将 _显示_ 值设置为 _不可见_。"

#~ msgid ""
#~ "Select the 'Add Pads' icon image:images/icons/pad.png[pad_png] on the "
#~ "right toolbar. Click on the working sheet to place the pad. Right click "
#~ "on the new pad and click 'Edit Pad'. You can also use [e]."
#~ msgstr ""
#~ "在右侧工具栏中选择 _添加焊盘_ 图标 image:images/icons/pad.png[pad_png] 。 "
#~ "单击工作表以放置焊盘。 右键单击新焊盘，然后单击 _编辑焊盘_。 你也可以用 "
#~ "[e]。"

#~ msgid ""
#~ "Set the 'Pad Num' to '1', 'Pad Shape' to 'Rect', 'Pad Type' to 'SMD', "
#~ "'Shape Size X' to '0.4', and 'Shape Size Y' to '0.8'. Click OK.  Click on "
#~ "'Add Pads' again and place two more pads."
#~ msgstr ""
#~ "将 _焊盘编号_ 设置为 _1_，_焊盘形状_ 设置为 _矩形_， _焊盘类型_ 设置为 "
#~ "_SMD_，_形状大小 X_ 设置为 _0.4_，_形状大小 Y_ 设置为 _0.8_。 单击确定。 "
#~ "再次点击 _添加焊盘_ 并再放两个焊盘。"

#~ msgid ""
#~ "If you want to change the grid size, *Right click* -> **Grid Select**. Be "
#~ "sure to select the appropriate grid size before laying down the "
#~ "components."
#~ msgstr ""
#~ "如果要更改网格大小，*右键单击* -> **网格选择**。 在放下元件之前，请务必选"
#~ "择合适的网格尺寸。"

#~ msgid ""
#~ "Move the 'MYCONN3' label and the 'SMD' label out of the way so that it "
#~ "looks like the image shown above."
#~ msgstr "将 _MYCONN3_ 标签和 _SMD_ 标签移开，使其看起来像上图所示。"

#~ msgid ""
#~ "When placing pads it is often necessary to measure relative distances. "
#~ "Place the cursor where you want the relative coordinate point _(0,0)_ to "
#~ "be and press the space bar. While moving the cursor around, you will see "
#~ "a relative indication of the position of the cursor at the bottom of the "
#~ "page. Press the space bar at any time to set the new origin."
#~ msgstr ""
#~ "放置焊盘时，通常需要测量相对距离。 将光标放在您想要相对坐标点_（0,0）_的位"
#~ "置，然后按空格键。 移动光标时，您将看到光标在页面底部位置的相对指示。 可以"
#~ "随时按空格键设置新原点。"

#~ msgid ""
#~ "Now add a footprint contour. Click on the 'Add graphic line or polygon' "
#~ "button image:images/icons/add_polygon.png[add_polygon_png] in the right "
#~ "toolbar. Draw an outline of the connector around the component."
#~ msgstr ""
#~ "现在添加一个封装边框。 单击右侧工具栏中的 _添加图形线或多边形_ 按钮 image:"
#~ "images/icons/add_polygon.png[add_polygon_png] 。 绘制元件周围连接器的边"
#~ "框。"

#~ msgid ""
#~ "Click on the 'Save Footprint in Active Library' icon image:images/icons/"
#~ "save_library.png[save_library_png] on the top toolbar, using the default "
#~ "name MYCONN3."
#~ msgstr ""
#~ "单击顶部工具栏上的 _在活动库中保存封装_ 图标 image:images/icons/"
#~ "save_library.png[save_library_png] ，使用默认名称 MYCONN3。"

#, no-wrap
#~ msgid "Note about portability of KiCad project files"
#~ msgstr "关于 KiCad 工程文件的可移植性的注意事项"

#~ msgid ""
#~ "What files do you need to send to someone so that they can fully load and "
#~ "use your KiCad project?"
#~ msgstr "您需要将哪些文件发送给某人才能完全加载和使用您的 KiCad 工程？"

#~ msgid ""
#~ "When you have a KiCad project to share with somebody, it is important "
#~ "that the schematic file __.sch__, the board file __.kicad_pcb__, the "
#~ "project file _.pro_ and the netlist file __.net__, are sent together with "
#~ "both the schematic parts file _.lib_ and the footprints file __."
#~ "kicad_mod__. Only this way will people have total freedom to modify the "
#~ "schematic and the board."
#~ msgstr ""
#~ "当你有一个 KiCad 工程与某人分享时，重要的是原理图文件 __.sch__，板文件 __."
#~ "kicad_pcb__，工程文件 _.pro_ 和网表文件 __.net__，与两个原理图一起发送库文"
#~ "件 _.lib_ 和封装文件 __.kicad_mod__。 只有这样，人们才能完全自由地修改原理"
#~ "图和电路板。"

#~ msgid ""
#~ "With KiCad schematics, people need the _.lib_ files that contain the "
#~ "symbols. Those library files need to be loaded in the _Eeschema_ "
#~ "preferences. On the other hand, with boards (__.kicad_pcb__ files), "
#~ "footprints can be stored inside the _.kicad_pcb_ file. You can send "
#~ "someone a _.kicad_pcb_ file and nothing else, and they would still be "
#~ "able to look at and edit the board. However, when they want to load "
#~ "components from a netlist, the footprint libraries (__.kicad_mod__ files) "
#~ "need to be present and loaded in the _Pcbnew_ preferences just as for "
#~ "schematics. Also, it is necessary to load the _.kicad_mod_ files in the "
#~ "preferences of _Pcbnew_ in order for those footprints to show up in "
#~ "__Cvpcb__."
#~ msgstr ""
#~ "使用 KiCad 原理图，人们需要包含符号的 _.lib_ 文件。 需要在 _Eeschema_ 偏好"
#~ "设置中加载这些库文件。 另一方面，使用板（__.kicad_pcb__ 文件），封装可以存"
#~ "储在_.kicad_pcb_ 文件中。 您可以向某人发送 _.kicad_pcb_ 文件，而不是其他任"
#~ "何内容，他们仍然可以查看和编辑该板。 但是，当他们想要从网表加载元件时，脚"
#~ "本库（__.kicad_mod__ 文件）需要存在并加载到 _Pcbnew_ 偏好设置中，就像原理"
#~ "图一样。 此外，有必要在 _Pcbnew_ 的偏好设置中加载 _.kicad_mod_ 文件，以便"
#~ "在 __Cvpcb__ 中显示这些封装。"

#~ msgid ""
#~ "If someone sends you a _.kicad_pcb_ file with footprints you would like "
#~ "to use in another board, you can open the Footprint Editor, load a "
#~ "footprint from the current board, and save or export it into another "
#~ "footprint library. You can also export all the footprints from a _."
#~ "kicad_pcb_ file at once via *Pcbnew* -> *File* -> *Archive* -> "
#~ "*Footprints* -> **Create footprint archive**, which will create a new _."
#~ "kicad_mod_ file with all the board's footprints."
#~ msgstr ""
#~ "如果有人向您发送了一个带有封装的 _.kicad_pcb_ 文件，您可以在另一个板上使"
#~ "用，您可以打开封装编辑器，从当前板上加载封装，并将其保存或导出到另一个封装"
#~ "库中。 您也可以通过 * Pcbnew * - > *文件*  - > *压缩*  - > *封装*  - > **"
#~ "创建封装压缩**，这将创建一个新的一次导出 _.kicad_pcb_ 文件中的所有封装。 "
#~ "_.kicad_mod_ 文件包含所有板的封装。"

#~ msgid ""
#~ "Bottom line, if the PCB is the only thing you want to distribute, then "
#~ "the board file _.kicad_pcb_ is enough. However, if you want to give "
#~ "people the full ability to use and modify your schematic, its components "
#~ "and the PCB, it is highly recommended that you zip and send the following "
#~ "project directory:"
#~ msgstr ""
#~ "最重要的是，如果 PCB 是你想要分发的唯一东西，那么电路板文件 _.kicad_pcb_ "
#~ "就足够了。 但是，如果您想让人们完全能够使用和修改您的原理图，其元件和 "
#~ "PCB，强烈建议您压缩并发送以下工程目录："

#, no-wrap
#~ msgid ""
#~ "tutorial1/\n"
#~ "|-- tutorial1.pro\n"
#~ "|-- tutorial1.sch\n"
#~ "|-- tutorial1.kicad_pcb\n"
#~ "|-- tutorial1.net\n"
#~ "|-- library/\n"
#~ "|   |-- myLib.lib\n"
#~ "|   |-- myOwnLib.lib\n"
#~ "|   \\-- myQuickLib.lib\n"
#~ "|\n"
#~ "|-- myfootprint.pretty/\n"
#~ "|   \\-- MYCONN3.kicad_mod\n"
#~ "|\n"
#~ "\\-- gerber/\n"
#~ "    |-- ...\n"
#~ "    \\-- ...\n"
#~ msgstr ""
#~ "教程1/\n"
#~ "|-- 教程1.pro\n"
#~ "|-- 教程1.sch\n"
#~ "|-- 教程1.kicad_pcb\n"
#~ "|-- 教程1.net\n"
#~ "|-- library/\n"
#~ "|   |-- myLib.lib\n"
#~ "|   |-- myOwnLib.lib\n"
#~ "|   \\-- myQuickLib.lib\n"
#~ "|\n"
#~ "|-- myfootprint.pretty/\n"
#~ "|   \\-- MYCONN3.kicad_mod\n"
#~ "|\n"
#~ "\\-- gerber/\n"
#~ "    |-- ...\n"
#~ "    \\-- ...\n"

#, no-wrap
#~ msgid "More about KiCad documentation"
#~ msgstr "有关 KiCad 文档的更多信息"

#~ msgid ""
#~ "This has been a quick guide on most of the features in KiCad. For more "
#~ "detailed instructions consult the help files which you can access through "
#~ "each KiCad module. Click on *Help* -> **Manual**."
#~ msgstr ""
#~ "这是 KiCad 中大多数功能的快速指南。 有关更详细的说明，请参阅可通过每个 "
#~ "KiCad 模块访问的帮助文件。 点击 *帮助* -> **手册**。"

#~ msgid ""
#~ "KiCad comes with a pretty good set of multi-language manuals for all its "
#~ "four software components."
#~ msgstr "KiCad 为其所有四个软件元件提供了一套非常好的多语言手册。"

#~ msgid "The English version of all KiCad manuals are distributed with KiCad."
#~ msgstr "所有 KiCad 手册的英文版都随 KiCad 一起发布。"

#~ msgid ""
#~ "In addition to its manuals, KiCad is distributed with this tutorial, "
#~ "which has been translated into other languages. All the different "
#~ "versions of this tutorial are distributed free of charge with all recent "
#~ "versions of KiCad. This tutorial as well as the manuals should be "
#~ "packaged with your version of KiCad on your given platform."
#~ msgstr ""
#~ "除了手册之外，KiCad 还随本教程一起发布，该教程已被翻译成其他语言。 本教程"
#~ "的所有不同版本均免费分发所有最新版本的 KiCad。 本教程以及手册应与您的 "
#~ "KiCad 版本一起打包在您的指定平台上。"

#~ msgid ""
#~ "For example, on Linux the typical locations are in the following "
#~ "directories, depending on your exact distribution:"
#~ msgstr "例如，在 Linux 上，典型位置位于以下目录中，具体取决于您的确切分布："

#, no-wrap
#~ msgid ""
#~ " /usr/share/doc/kicad/help/en/\n"
#~ " /usr/local/share/doc/kicad/help/en\n"
#~ msgstr ""
#~ " /usr/share/doc/kicad/help/en/\n"
#~ " /usr/local/share/doc/kicad/help/en\n"

#~ msgid "On Windows it is in:"
#~ msgstr "在Windows上它位于："

#, no-wrap
#~ msgid " <installation directory>/share/doc/kicad/help/en\n"
#~ msgstr " <installation directory>/share/doc/kicad/help/en\n"

#~ msgid "On OS X:"
#~ msgstr "在 OS X 上："

#, no-wrap
#~ msgid " /Library/Application Support/kicad/help/en\n"
#~ msgstr " /Library/Application Support/kicad/help/en\n"

#, no-wrap
#~ msgid "KiCad documentation on the Web"
#~ msgstr "网上的 KiCad 文档"

#~ msgid ""
#~ "The latest version of KiCad documentation can be found in multiple "
#~ "languages at http://docs.kicad.org"
#~ msgstr ""
#~ "最新版本的 KiCad 文档可以在 http://docs.kicad.org 上找到多种语言的版本"

#~ msgid ""
#~ "_Essential and concise guide to mastering KiCad for the successful "
#~ "development of sophisticated electronic printed circuit boards._"
#~ msgstr "_掌握 KiCad 成功开发复杂电子印刷电路板的必要和简明指南._"

#~ msgid "Please direct any bug reports, suggestions or new versions to here:"
#~ msgstr "请将任何错误报告、建议或新版本引导到此处:"

#~ msgid ""
#~ "About KiCad documentation: https://gitlab.com/kicad/services/kicad-doc/"
#~ "issues"
#~ msgstr "关于 KiCad 文档: https://gitlab.com/kicad/services/kicad-doc/issues"

#~ msgid "About KiCad software: https://gitlab.com/kicad/code/kicad/issues"
#~ msgstr "关于 KiCad 软件: https://gitlab.com/kicad/code/kicad/issues"

#~ msgid ""
#~ "About KiCad software internationalization (i18n): https://gitlab.com/"
#~ "kicad/code/kicad-i18n/issues"
#~ msgstr ""
#~ "关于 KiCad 软件的国际化（i18n）：https://gitlab.com/kicad/code/kicad-i18n/"
#~ "issues"

#~ msgid "*Publication date*\n"
#~ msgstr "*发布日期*\n"

#~ msgid "2015, May 16."
#~ msgstr "2015年，5月16日。"

#~ msgid ""
#~ "KiCad is an open-source software tool for the creation of electronic "
#~ "schematic diagrams and PCB artwork. Beneath its singular surface, KiCad "
#~ "incorporates an elegant ensemble of the following stand-alone software "
#~ "tools:"
#~ msgstr ""
#~ "KiCad 是用于创建电子原理图和 PCB 图的开源软件工具。它由以下独立软件构成:"

#~ msgid ""
#~ "|Program name|Description|File extension\n"
#~ "|KiCad |Project manager|+*.pro+\n"
#~ "|Eeschema |Schematic and component editor|+*.sch, *.lib, *.net+\n"
#~ "|Pcbnew |Circuit board and footprint editor|+*.kicad_pcb, *.kicad_mod+\n"
#~ "|GerbView |Gerber and drill file viewer|+\\*.g\\*, *.drl, etc.+\n"
#~ "|Bitmap2Component |Convert bitmap images to components or footprints|+*."
#~ "lib, *.kicad_mod, *.kicad_wks+\n"
#~ "|PCB Calculator |Calculator for components, track width, electrical "
#~ "spacing, color codes, and more...|None\n"
#~ "|Pl Editor |Page layout editor|+*.kicad_wks+\n"
#~ msgstr ""
#~ "|程序名称|描述|文件扩展\n"
#~ "|KiCad |工程管理器|+*.pro+\n"
#~ "|Eeschema |原理图和元件库编辑器|+*.sch, *.lib, *.net+\n"
#~ "|Pcbnew |PCB 和封装编辑器|+*.kicad_pcb, *.kicad_mod+\n"
#~ "|GerbView |光绘文件及钻孔文件查看|+\\*.g\\*, *.drl, etc.+\n"
#~ "|Bitmap2Component |将位图转换为元件符号或封装|+*.lib, *.kicad_mod, *."
#~ "kicad_wks+\n"
#~ "|PCB Calculator |便携式计算器，可以用于方便的计算线宽/电气间隙/色环代码等"
#~ "等|无\n"
#~ "|Pl Editor |页面布局编辑器|+*.kicad_wks+\n"

#~ msgid ""
#~ "The file extension list is not complete and only contains a subset of the "
#~ "files that KiCad supports. It is useful for the basic understanding of "
#~ "which files are used for each KiCad application."
#~ msgstr ""
#~ "上述文件扩展名列表不完整, 仅包含 KiCad 支持的文件的子集。但是它能帮助你了"
#~ "解 KiCad 使用的基本的文件。"

#~ msgid ""
#~ "KiCad can be considered mature enough to be used for the successful "
#~ "development and maintenance of complex electronic boards."
#~ msgstr ""
#~ "有充分的理由认为, KiCad 已足够成熟, 并可以用于开发和维护复杂的电路板。"

#~ msgid ""
#~ "KiCad does not present any board-size limitation and it can easily handle "
#~ "up to 32 copper layers, up to 14 technical layers and up to 4 auxiliary "
#~ "layers.  KiCad can create all the files necessary for building printed "
#~ "boards, Gerber files for photo-plotters, drilling files, component "
#~ "location files and a lot more."
#~ msgstr ""
#~ "KiCad 对电路板的大小不做任何限制, 它可以轻松地处理多达 32 个铜层、多达 14 "
#~ "个技术层和多达 4 个辅助层的电路板。 KiCad 可以创建制造印刷电路板所需的所有"
#~ "文件、用于照片绘图仪的 Gerber 文件、钻孔文件、元件位置文件等等。"

#~ msgid ""
#~ "Being open source (GPL licensed), KiCad represents the ideal tool for "
#~ "projects oriented towards the creation of electronic hardware with an "
#~ "open-source flavour."
#~ msgstr ""
#~ "作为开源 (GPL 许可)软件, KiCad 是面向有意创建开源电子硬件的项目的工程师的"
#~ "理想工具。"

#~ msgid "On the Internet, the homepage of KiCad is:"
#~ msgstr "在互联网上, KiCad 的主页是:"

#~ msgid "http://www.kicad.org/"
#~ msgstr "http://www.kicad.org/"

#~ msgid ""
#~ "KiCad runs on GNU/Linux, Apple macOS and Windows.  You can find the most "
#~ "up to date instructions and download links at:"
#~ msgstr ""
#~ "KiCad 运行在 GNU/Linux，Apple macOS 和 Windows 上。 您可以在以下位置找到最"
#~ "新的说明和下载链接："

#~ msgid "http://www.kicad.org/download/"
#~ msgstr "http://www.kicad.org/download/"

#~ msgid "Under GNU/Linux"
#~ msgstr "在 GNU/Linux 下"

#~ msgid ""
#~ "Stable releases of KiCad can be found in most distribution's package "
#~ "managers as kicad and kicad-doc. If your distribution does not provide "
#~ "latest stable version, please follow the instruction for unstable builds "
#~ "and select and install the latest stable version."
#~ msgstr ""
#~ "KiCad 的稳定版本，包括如 KiCad 和 kicad-doc，可以在大多数发行版的软件包管"
#~ "理器中找到。如果您的发行版没有提供最新的稳定版本, 请按照针对不稳定版本发布"
#~ "的说明进行操作, 并安装最新的版本。"

#~ msgid ""
#~ "Under Ubuntu, the easiest way to install an unstable nightly build of "
#~ "KiCad is via _PPA_ and __Aptitude__. Type the following into your "
#~ "Terminal:"
#~ msgstr ""
#~ "在 Ubuntu 下，安装不稳定的夜间构建 KiCad 的最简单方法是通过 _PPA_ 和"
#~ "__Aptitude__。 在终端中键入以下内容："

#~ msgid ""
#~ "sudo add-apt-repository ppa:js-reynaud/ppa-kicad\n"
#~ "sudo aptitude update && sudo aptitude safe-upgrade\n"
#~ "sudo aptitude install kicad kicad-doc-en\n"
#~ msgstr ""
#~ "sudo add-apt-repository ppa:js-reynaud/ppa-kicad\n"
#~ "sudo aptitude update && sudo aptitude safe-upgrade\n"
#~ "sudo aptitude install kicad kicad-doc-en\n"

#~ msgid ""
#~ "Under Debian, the easiest way to install backports build of KiCad is:"
#~ msgstr "在 Debian 下，安装 KiCad 的 backports 构建的最简单方法是："

#~ msgid ""
#~ "# Set up Debian Backports\n"
#~ "echo -e \"\n"
#~ "# stretch-backports\n"
#~ "deb http://ftp.us.debian.org/debian/ stretch-backports main contrib non-"
#~ "free \n"
#~ "deb-src http://ftp.us.debian.org/debian/ stretch-backports main contrib "
#~ "non-free\n"
#~ "\" | sudo tee -a /etc/apt/sources.list > /dev/null\n"
#~ msgstr ""
#~ "# Set up Debian Backports\n"
#~ "echo -e \"\n"
#~ "# stretch-backports\n"
#~ "deb http://ftp.us.debian.org/debian/ stretch-backports main contrib non-"
#~ "free \n"
#~ "deb-src http://ftp.us.debian.org/debian/ stretch-backports main contrib "
#~ "non-free\n"
#~ "\" | sudo tee -a /etc/apt/sources.list > /dev/null\n"

#~ msgid ""
#~ "# Run an Update & Install KiCad\n"
#~ "sudo apt-get update\n"
#~ "sudo apt-get install -t stretch-backports kicad\n"
#~ msgstr ""
#~ "# Run an Update & Install KiCad\n"
#~ "sudo apt-get update\n"
#~ "sudo apt-get install -t stretch-backports kicad\n"

#~ msgid ""
#~ "Under Fedora the easiest way to install an unstable nightly build is via "
#~ "__copr__.  To install KiCad via copr type the following in to copr:"
#~ msgstr ""
#~ "在 Fedora 下安装不稳定的夜间构建的最简单方法是通过 __copr__。 要通过 copr "
#~ "安装 KiCad，请将以下内容输入到 copr 中："

#~ msgid ""
#~ "sudo dnf copr enable @kicad/kicad\n"
#~ "sudo dnf install kicad\n"
#~ msgstr ""
#~ "sudo dnf copr enable @kicad/kicad\n"
#~ "sudo dnf install kicad\n"

#~ msgid ""
#~ "Alternatively, you can download and install a pre-compiled version of "
#~ "KiCad, or directly download the source code, compile and install KiCad."
#~ msgstr ""
#~ "或者，您可以下载并安装 KiCad 的预编译版本，或直接下载源代码，编译和安装 "
#~ "KiCad。"

#~ msgid "Under Apple macOS"
#~ msgstr "在 Apple macOS 下"

#~ msgid ""
#~ "Stable builds of KiCad for macOS can be found at: http://downloads.kicad."
#~ "org/osx/stable/"
#~ msgstr ""
#~ "macOS 版 KiCad 的稳定版本可以在以下网站找到： http://downloads.kicad.org/"
#~ "osx/stable/"

#~ msgid ""
#~ "Unstable nightly development builds can be found at: http://downloads."
#~ "kicad.org/osx/"
#~ msgstr ""
#~ "不稳定的夜间开发版本可以在以下网站找到： http://downloads.kicad.org/osx/"

#~ msgid "Under Windows"
#~ msgstr "在 Windows 下"

#~ msgid ""
#~ "Stable builds of KiCad for Windows can be found at: http://downloads."
#~ "kicad.org/windows/stable/"
#~ msgstr ""
#~ "Windows 版 KiCad 的稳定版本可以在以下网站找到： http://downloads.kicad."
#~ "org/windows/stable/"

#~ msgid ""
#~ "For Windows you can find nightly development builds at: http://downloads."
#~ "kicad.org/windows/"
#~ msgstr ""
#~ "对于 Windows，你可以在以下网站找到夜间开发版本：http://downloads.kicad."
#~ "org/windows/"

#~ msgid "https://forum.kicad.info/[Visit the forum]"
#~ msgstr "https://forum.kicad.info/[访问论坛]"

#~ msgid ""
#~ "Join the http://webchat.freenode.net/?channels=kicad[#kicad IRC channel] "
#~ "on Freenode"
#~ msgstr ""
#~ "加入 Freenode 上的 http://webchat.freenode.net/?channels=kicad[#kicad IRC "
#~ "channel]"

#~ msgid "http://www.kicad.org/help/tutorials/[Watch tutorials]"
#~ msgstr "http://www.kicad.org/help/tutorials/[观看教程]"

#~ msgid ""
#~ "Despite its similarities with other PCB design software, KiCad is "
#~ "characterised by a unique workflow in which schematic components and "
#~ "footprints are separate. Only after creating a schematic are footprints "
#~ "assigned to the components."
#~ msgstr ""
#~ "尽管与其他 PCB 设计软件具有相似性，但 KiCad 的特点是独特的工作流程，其中原"
#~ "理图元件和封装是分开的。 仅在创建原理图后才会为元件分配封装。"

#~ msgid ""
#~ "http://kicad.rohrbacher.net/quicklib.php[Quicklib] is a tool that allows "
#~ "you to quickly create KiCad library components with a web-based "
#~ "interface. For more information about Quicklib, refer to <<make-schematic-"
#~ "components-with-quicklib,Making Schematic Components With Quicklib>>."
#~ msgstr ""
#~ "http://kicad.rohrbacher.net/quicklib.php[Quicklib] 是一个工具，允许您使用"
#~ "基于 Web 的界面快速创建 KiCad 库元件。 有关 Quicklib 的更多信息，请参阅"
#~ "《 make-schematic-components-with-quicklib，使用 Quicklib 制作原理图元"
#~ "件》。"
